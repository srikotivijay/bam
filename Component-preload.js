/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "bam/Component-preload",
	"modules": {
		"bam/controller/PlantSelection.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"sap/ui/model/resource/ResourceModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"bam/services/DataContext\"\n\t], function (Controller, JSONModel, MessageToast, MessageBox, ResourceModel,Filter,DataContext) {\n\t\t\"use strict\";\n\t\t\n\tvar firstTimePageLoad = true;\n\tvar loggedInUserID;\n\tvar originalGMIDCountry;\n\treturn Controller.extend(\"bam.controller.PlantSelection\", {\n\t\t//\n\t\tonInit : function () {\n\t\t\t\n\t\t\t// Get logged in user id\n\t\t\tloggedInUserID = DataContext.getUserID();\n\t\t\t\t\t\n\t\t\t// define a global variable for the oData model\t\t    \n\t\t    this._oDataModel = new sap.ui.model.odata.ODataModel(\"/ODataService/BAMDataService.xsodata/\", true);\n\t\t    // Create view model for the page\n\t\t    var oModel = new sap.ui.model.json.JSONModel();\n\n\t    \tvar oi18nModel = new ResourceModel({\n                bundleName: \"bam.i18n.i18n\"\n            });\n            \n\t\t\t// get the GMID status for i18n model\n\t\t\tvar z1gmid = oi18nModel.getProperty(\"z1gmidstatus\");\n\t\t\tvar zcgmid = oi18nModel.getProperty(\"zcgmidstatus\");\n\t\t\tvar z9gmid = oi18nModel.getProperty(\"z9gmidstatus\");\n\t\t\t//making filter for plant status\n\t\t\t// Get the GMID Plant combinations for the GMID-Country combination selected by the user\n\t\t\t// Create a filter & sorter array (pending depending on user id logic)\n\t\t\t//\n\t\t\tvar filterArray=[];\n\t\t\tvar userFilter = new Filter(\"CREATED_BY\",sap.ui.model.FilterOperator.EQ,loggedInUserID);\n\t\t\tfilterArray.push(userFilter);\n\t\t\tvar z1gmidFilter = new Filter(\"FILTER_MATERIAL_STATUS\",sap.ui.model.FilterOperator.NE,z1gmid);\n\t\t\tvar zcgmidFilter = new Filter(\"FILTER_MATERIAL_STATUS\",sap.ui.model.FilterOperator.NE,zcgmid);\n\t\t\tvar z9gmidFilter = new Filter(\"FILTER_MATERIAL_STATUS\",sap.ui.model.FilterOperator.NE,z9gmid);\n\t\t\n\t\t\tvar statusFilter = new Filter ({\n\t\t\t\tfilters : [\n\t\t\t\t\tz1gmidFilter,\n\t\t\t\t\tzcgmidFilter,\n\t\t\t\t\tz9gmidFilter\n\t\t\t\t\t],\n\t\t\t\t\tand : true\n\t\t\t});\n\t\t\tfilterArray.push(statusFilter);\n\t    \t\n\t\t    // Get the GMID Plant combinations for the GMID-Country combination selected by the user\n\t\t\t// Create a filter & sorter array (pending depending on user id logic)\n\t\t\tvar userSortArray = [];\n\t\t\tvar userSort = new sap.ui.model.Sorter(\"GMID\",false);\n\t\t\tuserSortArray.push(userSort);\n\t\t\t\n\t\t\tthis._oDataModel.read(\"/V_GMID_COUNTRY_SHIP_FROM_PLANT\",{\n\t\t\t\tfilters: filterArray,\n\t\t\t\tsorters: userSortArray,\n\t\t\t\tasync: false,\n                success: function(oData, oResponse){\n                var groupedGMIDCountry = [];\n                \n\t\t        //common code to check duplicates\n\t\t\t\tvar hash = (function() {\n\t\t\t\t    var keys = {};\n\t\t\t\t\t    return {\n\t\t\t\t\t        contains: function(key) {\n\t\t\t\t\t            return keys[key] === true;\n\t\t\t\t\t        },\n\t\t\t\t\t        add: function(key) {\n\t\t\t\t\t            if (keys[key] !== true)\n\t\t\t\t\t            {\n\t\t\t\t\t                keys[key] = true;\n\t\t\t\t\t            }\n\t\t\t\t\t        }\n\t\t\t\t\t    };\n\t\t\t\t\t})();\n\t\t\t\t\t\n\t\t\t\tvar key = null;\n\t\t                \n\t\t\t\t//loop through the rows of the retruened data\n\t\t\t\tfor (var i = 0; i < oData.results.length; i++) {\n\t\t\t\t\tvar item =  oData.results[i];\n\t\t\t\t\tkey = item.GMID + \";\" + item.COUNTRY;\n\t\t\t\t    //check for the gmid and country combination key \n\t\t\t\t    if(!hash.contains(key))\n\t\t\t\t    {\n\t\t\t\t    \t//if its a new combination add the key to existing list of combinations\n\t\t\t\t        hash.add(key);\n\t\t\t\t        groupedGMIDCountry.push({ID: item.ID,\n\t\t\t\t        \t\t\t\t\t\t GMID:item.GMID, \n\t\t\t\t        \t\t\t\t\t\t COUNTRY:item.COUNTRY, \n\t\t\t\t        \t\t\t\t\t\t COUNTRY_CODE_ID: item.COUNTRY_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t CURRENCY_CODE_ID: item.CURRENCY_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t IBP_RELEVANCY_CODE_ID: item.IBP_RELEVANCY_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t NETTING_DEFAULT_CODE_ID: item.NETTING_DEFAULT_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t QUADRANT_CODE_ID:item.QUADRANT_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t CHANNEL_CODE_ID: item.CHANNEL_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t MARKET_DEFAULT_CODE_ID: item.MARKET_DEFAULT_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t SUPPLY_SYSTEM_FLAG_CODE_ID: item.SUPPLY_SYSTEM_FLAG_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t TYPE: item.TYPE,\n\t        \t\t\t\t\t\t\t\t\t GMID_COUNTRY_STATUS_CODE_ID:item.GMID_COUNTRY_STATUS_CODE_ID,\n\t        \t\t\t\t\t\t\t\t\t CREATED_BY: item.CREATED_BY,\n\t\t\t\t        \t\t\t\t\t\t PLANTS:[],\n\t\t\t\t        \t\t\t\t\t\t errorState: \"None\"});\n\t\t\t\t\t}\n\t\t\t\t    //find the object for the gmid and country combination and push the plant code to the nested plant object\n\t\t\t\t    groupedGMIDCountry.find(function(data){return data.GMID === item.GMID && data.COUNTRY === item.COUNTRY;}).PLANTS.push({PLANT_CODE: item.PLANT_CODE,PLANT_CODE_ID : item.GMID_SHIP_FROM_PLANT_ID,IS_SELECTED:false});\n\t\t\t\t}\n\t\t\t\t\n                // Bind the Country data to the GMIDShipToCountry model\n                oModel.setProperty(\"/PlantSelectionVM\",groupedGMIDCountry);\n                // save the original view model into a variable, used later for deletion of rows in staging column\n                originalGMIDCountry = JSON.parse(JSON.stringify(groupedGMIDCountry));\n                },\n    \t\t    error: function(){\n            \t\tMessageToast.show(\"Unable to retrieve user data.\");\n    \t\t\t}\n\t    \t});\n\t\t    this.getView().setModel(oModel);\n\t\t    // define a global variable for the view model and the view model data\n\t\t    this._oPlantSelectionViewModel = oModel;\n\t\t    this._oViewModelData = this._oPlantSelectionViewModel.getData();\n\n\t\t    if(firstTimePageLoad)\n\t    \t{\n\t    \t\tvar oRouter = this.getRouter();\n\t\t\t\toRouter.getRoute(\"gmidPlantSelection\").attachMatched(this._onRouteMatched, this);\n\t\t\t\tfirstTimePageLoad = false;\n\t    \t}\n    \t},\n    \tgetRouter : function () {\n\t\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t},\n\t\t// force init method to be called everytime we naviagte to Maintain Attribuets page \n\t\t_onRouteMatched : function (oEvent) {\n\t\t\tif(DataContext.isBAMUser() === false)\n\t\t\t{\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"accessDenied\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.onInit();\n\t\t\t}\n\t\t},\n\t\t// navigate back to the homepage\n\t\tonHome: function(){\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"home\");\n\t\t},\n\t\t// Below function removes a row\n\t\tonRemoveRow : function(oEvent) {\n\t\t\t// Get the object to be deleted from the event handler\n\t\t\tvar entryToDelete = oEvent.getSource().getBindingContext().getObject();\n\t\t\t// Get the # of rows in the VM, (this includes the dropdown objects such as Country, Currency, etc..)\n\t\t\tvar rows = this._oViewModelData.PlantSelectionVM;\n\t\t\t// Setting local this variable in order to access it in the action confirm button\n\t\t\tvar t = this;\n\t\t\t\n\t\t\tMessageBox.confirm((\"Are you sure you want to delete this GMID/Country? Doing so will result to the GMID not being submitted to BAM and your entry for this GMID on the previous page will be disregarded.\"), {\n\t    \t\t\ticon: sap.m.MessageBox.Icon.WARNING,\n\t    \t\t\tactions: [sap.m.MessageBox.Action.YES, sap.m.MessageBox.Action.NO],\n\t          \t\tonClose: function(oAction) {\n\t          \t\t\tif (oAction === \"YES\") \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// loop through each row and check whether the passed object = the row object\n\t\t\t\t\t\t\t for(var i = 0; i < rows.length; i++){\n\t\t\t\t\t\t\t \tif(rows[i] === entryToDelete)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// found a match, remove this row from the data\n\t\t\t\t\t\t\t\t\trows.splice(i,1);\n\t\t\t\t\t\t\t\t\t// refresh the GMID VM, this will automatically update the UI\n\t\t\t\t\t\t\t\t\tt._oPlantSelectionViewModel.refresh();\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t            \t\t}\n\t          \t\t}\n\t       \t});\n\t\t},\n\t\t// Function to save the data into the database\n\t\t// this will save data in two tables GMID_SHIP_TO_COUNTRY and GMID_COUNTRY_SHIP_FROM_PLANT\n    \tonSubmit : function () {\n    \t\tvar errorCount = 0;\n    \t\tvar successGMIDShipToCount = 0;\n    \t \tvar successGMIDShipFromPlantCount = 0;\n    \t\tvar GMIDShipToCountry = this._oPlantSelectionViewModel.getProperty(\"/PlantSelectionVM\");\n    \t\n    \t\t// Create current timestamp\n    \t\tvar oDate = new Date();\n    \t\n    \t    // Get the code id for GMID Country Status\n    \t    var gmidcountrystatusID = DataContext.getGMIDCountryStatusID();\n    \t    \n    \t    // reset the validation on the screen\n    \t    this.resetValidation();\n\t\t\tif(GMIDShipToCountry.length === 0)\n\t\t\t{\n\t\t\t\tMessageBox.alert(\"There are no GMID/Country combinations to submit. Please return to the homepage.\", {\n\t    \t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\ttitle : \"Invalid Input\"\n       \t\t\t});\n\t\t\t}\n\t\t\telse if(!this.validateDuplicateRecords())\n\t\t\t{\n\t\t\t\tMessageBox.alert(\"Duplicate GMID/Country combination exists in the system. Please remove the entry.\", {\n\t    \t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\ttitle : \"Invalid Input\"\n       \t\t\t});\n\t\t\t}\n\t\t\t// validation to check if each GMID/Country has at least one plant selected\n    \t    else if (this.validatePlantSelection() === false)\n\t    \t{\n\t    \t\tMessageBox.alert(\"Please select at least one plant for each GMID/Country combination.\", {\n\t    \t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\ttitle : \"Invalid Input\"\n       \t\t\t});\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\t var oModel = this._oDataModel;\n\t    \t\t// loop through the rows and for each row insert data into database\n\t    \t\t// each row contains GMID Ship To combination.\n\t    \t\tfor(var i = 0; i < GMIDShipToCountry.length; i++) \n\t    \t\t{\n\t\t\t\t\tvar GMID = GMIDShipToCountry[i].GMID;\n\t\t\t\t\tvar countryID = parseInt(GMIDShipToCountry[i].COUNTRY_CODE_ID,10);\n\t\t\t\t\tvar storedcurrencyID = parseInt(GMIDShipToCountry[i].CURRENCY_CODE_ID,10);\n\t\t\t\t\tvar ibprelevancyID = parseInt(GMIDShipToCountry[i].IBP_RELEVANCY_CODE_ID,10);\n\t\t\t\t\tvar nettingdefaultID = parseInt(GMIDShipToCountry[i].NETTING_DEFAULT_CODE_ID,10);\n\t\t\t\t\tvar quadrantID = parseInt(GMIDShipToCountry[i].QUADRANT_CODE_ID,10);\n\t\t\t\t\tvar channelID = parseInt(GMIDShipToCountry[i].CHANNEL_CODE_ID,10);\n\t\t\t\t\tvar marketdefaultID = parseInt(GMIDShipToCountry[i].MARKET_DEFAULT_CODE_ID,10);\n\t\t\t\t\tvar supplySystemFlagID = parseInt(GMIDShipToCountry[i].SUPPLY_SYSTEM_FLAG_CODE_ID,10);\n\t\t\t\t\tvar createdBy = GMIDShipToCountry[i].CREATED_BY;\n\t\t\t\t\tvar selectedGMIDType = GMIDShipToCountry[i].TYPE;\n\t\t\t\t\t// create new GMIDShipToCountry object\n\t\t\t\t\tvar newGMID = {\n\t\t\t        \tID: 1,\n\t\t\t        \tGMID: GMID,\n\t\t\t        \tCOUNTRY_CODE_ID: countryID,\n\t\t\t        \tCURRENCY_CODE_ID: storedcurrencyID,\n\t\t\t        \tIBP_RELEVANCY_CODE_ID: ibprelevancyID,\n\t\t\t        \tNETTING_DEFAULT_CODE_ID: nettingdefaultID,\n\t\t\t        \tQUADRANT_CODE_ID:quadrantID,\n\t\t\t        \tCHANNEL_CODE_ID: channelID,\n\t\t\t        \tMARKET_DEFAULT_CODE_ID: marketdefaultID,\n\t\t\t        \tSUPPLY_SYSTEM_FLAG_CODE_ID: supplySystemFlagID,\n\t\t\t        \tTYPE: selectedGMIDType,\n\t\t\t        \tGMID_COUNTRY_STATUS_CODE_ID: gmidcountrystatusID,\n\t\t\t        \tCREATED_ON: oDate,\n\t\t\t        \tCREATED_BY:createdBy\n\t    \t\t\t};\n\t    \t\t\t\n\t    \t\t\tvar maxGMIDShipFromPlantID = DataContext.getMaxID(\"/GMID_COUNTRY_SHIP_FROM_PLANT\");\n\t    \t\t\t\t// Get the MaxID for the GMID Ship to Country\n\t    \t\t\t\n\t        \t\tthis._oDataModel.create(\"/GMID_SHIP_TO_COUNTRY\", newGMID,\n\t        \t\t{\n\t\t\t        \tsuccess: function(){\n\t\t\t        \t\tsuccessGMIDShipToCount++;\n\t\t\t        \t\t// Get the MaxID for the GMID Ship from Plant\n\n\t    \t    \t\t\t var maxGMIDShipToID = DataContext.getMaxID(\"/GMID_SHIP_TO_COUNTRY\");\n\t\t\t        \t\t// once data is inserted into GMID Ship to Country, \n\t\t\t        \t\t// insert the data into GMID_COUNTRY_SHIP_FROM_PLANT\n\t\t\t        \t\t// each GMID Country combination can have one or more plants\n\t\t\t\t\t\t\t  for(var j = 0; j < GMIDShipToCountry[i].PLANTS.length; j++) \n\t\t\t\t\t    \t\t{\n\t    \t    \t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar gmidshipfromcountryID = parseInt(GMIDShipToCountry[i].COUNTRY_CODE_ID,10);\n\t\t\t\t\t\t\t\t\t// only selected plants are to be saved in database\n\t\t\t\t\t\t\t\t\tif (GMIDShipToCountry[i].PLANTS[j].IS_SELECTED === true)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar gmidshipfromplantID = parseInt(GMIDShipToCountry[i].PLANTS[j].PLANT_CODE_ID,10);\n\t\t\t\t\t\t\t\t\t\tvar gmidshipfromplantcreatedBy =  GMIDShipToCountry[i].CREATED_BY;\n\t\t\t\t\t\t\t\t\t\t// create new GMIDShipFromPlant object\n\t\t\t\t\t\t\t\t\t\tvar newGMIDShipFromPlant = {\n\t\t\t\t\t\t\t\t        \tID: 1 ,\n\t\t\t\t\t\t\t\t        \tGMID_SHIP_TO_COUNTRY_ID: maxGMIDShipToID,\n\t\t\t\t\t\t\t\t        \tGMID_SHIP_FROM_PLANT_ID: gmidshipfromplantID,\n\t\t\t\t\t\t\t\t        \tCREATED_ON: oDate,\n\t\t\t\t\t\t\t\t        \tCREATED_BY:gmidshipfromplantcreatedBy\n\t\t\t\t\t\t    \t\t\t};\n\t\t\t\t\t\t    \t\t\t\n\t\t\t\t\t\t        \t\toModel.create(\"/GMID_COUNTRY_SHIP_FROM_PLANT\", newGMIDShipFromPlant,\n\t\t\t\t\t\t        \t\t{\n\t\t\t\t\t\t\t\t        \tsuccess: function(){\n\t\t\t\t\t\t\t\t    \t\t},\n\t\t\t\t\t\t\t\t    \t\terror: function(){\n\t\t\t\t\t\t\t\t    \t\t\terrorCount++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t        \t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t    \t\t}\n\t\t\t    \t\t},\n\t\t\t    \t\terror: function(){\n\t\t\t    \t\t\terrorCount++;\n\t\t\t\t\t\t}\n\t        \t\t});\n\t    \t\t}\n\t    \t\t// TODO needs to be refactored to be batch delete\n\t    \t\t// get the count of records in staging table\n    \t\t\tfor(var k = 0; k < originalGMIDCountry.length; k++) \n    \t\t\t{\n\t\t    \t\t// once data is inserted successfully in both tables i.e. GMID_SHIP_TO_COUNTYRY \n\t\t    \t\t// and GMID_COUNTRY_SHIP_FROM_PLANT, delete the data from staging table i.e. GMID_SHIP_TO_COUNTYRY_STG\n    \t\t\t\tthis._oDataModel.remove(\"/GMID_SHIP_TO_COUNTRY_STG(\" + originalGMIDCountry[k].ID + \")\",\n\t        \t\t{\n\t\t\t        \tsuccess: function(){\n\t\t\t        \t\t\n\t\t\t    \t\t},\n\t\t\t    \t\terror: function(){\n\t\t\t    \t\t\t// show alert message\n\t\t\t    \t\t\t\tMessageToast.show(\"Error: Data not deleted from staging table\");\n\t\t\t\t\t\t}\n\t        \t\t});\n    \t\t\t}\n\t    \t\t\n\t    \t\t//Show success or error message\n\t    \t\tif(errorCount === 0) \n\t    \t\t{\n\t        \t\t\tvar oRouter = this.getRouter();\n        \t\t\t\t// once insertion is success, navigate to homepage\n        \t\t\t\tMessageBox.alert(\"You have successfully submitted \" + successGMIDShipToCount + \" GMID(s)\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.SUCCESS,\n\t\t\t\t\t\t\t\ttitle : \"Success\",\n\t\t\t\t\t\t\t\tonClose: function() {\n\t\t\t\t        \t\t\toRouter.navTo(\"home\");\n\t\t\t\t        \t}\n\t\t\t\t\t\t});\n\t        \t\t//once insertion is success, navigate to homepage\n\t    \t\t} \n\t    \t\telse \n\t    \t\t{\n\t        \t\t\tMessageToast.show(\"Error: GMIDs were not submitted\");\n\t    \t\t}\n\t    \t\t\n\t    \t} // end of else validation at least one plant selected\n\t    },\n        validatePlantSelection :function()\n        {\n\t        var GMIDShipToCountry = this._oPlantSelectionViewModel.getProperty(\"/PlantSelectionVM\");\n\t        var plantSelected;\n\t        var validPlants = true;\n\t        \n\t        for(var i = 0; i < GMIDShipToCountry.length; i++)\n\t        {\n\t        \tplantSelected = false;\n\t        \tfor(var j = 0; j < GMIDShipToCountry[i].PLANTS.length; j++) \n\t            {\n\t                // if there is at least one plant selected, then the GMID/Country combination is valid\n\t                if (GMIDShipToCountry[i].PLANTS[j].IS_SELECTED === true)\n\t                {\n\t                \tplantSelected = true;\n\t                }\n\t            }\n\t            if (plantSelected === false)\n\t            {\n\t               // add error state for this GMID \n\t               GMIDShipToCountry[i].errorState = \"Error\";\n\t               // invalid GMID/Country combo found\n\t               validPlants = false;\n\t            }\n\t        }\n\t        this._oPlantSelectionViewModel.refresh();\n\t        return validPlants;\n        },\n        validateDuplicateRecords : function()\n        {\n        \t// loop through the rows and for each row check for duplicate entry in DB\n            // each row contains GMID Ship To combination.\n            var data = this._oPlantSelectionViewModel.getProperty(\"/PlantSelectionVM\");\n           // prepare an array of GMIDs from the UI\n            var gmidList = [];\n            var gmid; \n            for(var j = 0; j < data.length; j++) \n            {\n                // every time empty the GMID object\n                gmid= {\"GMID\": \"\"};\n                gmid.GMID = data[j].GMID;\n                gmidList.push(gmid);\n            }\n            var viewPath = \"V_VALIDATE_GMID_COUNTRY\";\n        \tvar gmidCountryRecords = DataContext.getGMIDListFromDB(gmidList,viewPath);                           \n            var noDuplicates = true;\n            for(var i = 0; i < data.length; i++) \n            {\n                var GMID = data[i].GMID;\n                var countryID = parseInt(data[i].COUNTRY_CODE_ID,10);\n                // loop the GMID Country Records from DB to check Unique\n                for(var k = 0; k < gmidCountryRecords.length; k++) \n                {\n                    // check if GMID and Country Combinations exists in DB\n\t\t            if (GMID === gmidCountryRecords[k].GMID && countryID === gmidCountryRecords[k].COUNTRY_CODE_ID)\n\t\t            {\n\t\t                noDuplicates = false;\n\t        \t\t\tdata[i].errorState = \"Error\";\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t                continue;\n\t\t            }\n                }\n            }\n        \t\n        \n\t        this._oPlantSelectionViewModel.refresh();\n        \treturn noDuplicates;\n        },\n        resetValidation: function()\n        {\n        \tvar GMIDShipToCountry = this._oPlantSelectionViewModel.getProperty(\"/PlantSelectionVM\");\n        \tfor(var i = 0; i < GMIDShipToCountry.length; i++)\n\t        {\n\t        \tGMIDShipToCountry[i].errorState = \"None\";\n\t        }\n        }\n\n  \t});\n});",
		"bam/controller/GMIDSubmission.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"sap/ui/model/resource/ResourceModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/core/routing/History\",\n\t\t\"bam/services/DataContext\"\n\t], function (Controller, JSONModel, MessageToast, MessageBox, ResourceModel,Filter,History,DataContext) {\n\t\t\"use strict\";\n     var loggedInUserID;\n     var firstTimePageLoad = true;\n\treturn Controller.extend(\"bam.controller.GMIDSubmission\", {\n\t\tonInit : function () {\n\t\t\t\n\t\t\t// Get logged in user id\n\t\t\tloggedInUserID = DataContext.getUserID();\n\n\t\t\t// Create view model for 5 rows to show by default on page load\n\t\t\tvar initData = [];\n\t\t\tfor (var i = 0; i < 5; i++) {\n    \t\t\tinitData.push({\n        \t\t\"GMID\": \"\",\n        \t\t\"GMIDErrorState\": \"None\",\n        \t\t\"COUNTRY_CODE_ID\": -1,\n        \t\t\"countryErrorState\": \"None\",\n        \t\t\"CURRENCY_CODE_ID\": -1,\n        \t\t\"currencyErrorState\": \"None\",\n        \t\t\"IBP_RELEVANCY_CODE_ID\": -1,\n        \t\t\"IBPRelevancyErrorState\": \"None\",\n        \t\t\"NETTING_DEFAULT_CODE_ID\": -1,\n        \t\t\"nettingDefaultErrorState\": \"None\",\n        \t\t\"QUADRANT_CODE_ID\": -1,\n        \t\t\"quadrantErrorState\": \"None\",\n        \t\t\"CHANNEL_CODE_ID\": -1,\n        \t\t\"channelErrorState\": \"None\",\n        \t\t\"MARKET_DEFAULT_CODE_ID\": -1,\n        \t\t\"marketDefaultErrorState\": \"None\",\n        \t\t\"SUPPLY_SYSTEM_FLAG_CODE_ID\": -1,\n        \t\t\"createNew\" : false,\n        \t\t\"isError\":false\n    \t\t\t});\n\t\t\t}\n\n\t\t\t// Assigning view model for the page\n\t\t    var oModel = new sap.ui.model.json.JSONModel({GMIDShipToCountryVM : initData});\n\t\t    // Create table model, set size limit to 300, add an empty row\n\t\t    oModel.setSizeLimit(2000);\n\t\t    // define a global variable for the view model, the view model data and oData model\n\t\t    this._oGMIDShipToCountryViewModel = oModel;\n\t\t    this._oViewModelData = this._oGMIDShipToCountryViewModel.getData();\n\t\t    this._oDataModel = new sap.ui.model.odata.ODataModel(\"/ODataService/BAMDataService.xsodata/\", true);\n\t\t    this.getView().setModel(oModel);\n\t\t    this.addEmptyObject();\n\t    \t\n\t    \t  // Set error message column to false (not visible by default)\n\t\t    this._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",false);\n\t\t    \n\t\t    // set the busy indicator\n\t\t\t// creating busy dialog lazily\n    \t\tif (!this._busyDialog) \n\t\t\t{\n\t\t\t\tthis._busyDialog = sap.ui.xmlfragment(\"bam.view.BusyLoading\", this);\n\t\t\t\tthis.getView().addDependent(this._dialog);\n\t\t\t}\n\t\t\t\n\t\t\tthis._oi18nModel = new ResourceModel({\n                bundleName: \"bam.i18n.i18n\"\n            });\n\n\t\t\t// set all the dropdowns, get the data from the code master table\n\t    \toModel.setProperty(\"/GMIDShipToCountryVM/Country\",DataContext.getDropdownValues(this._oi18nModel.getProperty(\"ddCountry\")));\n\t    \toModel.setProperty(\"/GMIDShipToCountryVM/StoredCurrency\",DataContext.getDropdownValues(this._oi18nModel.getProperty(\"ddStoredCurrency\")));\n\t    \toModel.setProperty(\"/GMIDShipToCountryVM/IBPRelevancyFlag\",DataContext.getDropdownValues(this._oi18nModel.getProperty(\"ddIBPRelevancyFlag\")));\n\t    \toModel.setProperty(\"/GMIDShipToCountryVM/NettingDefaultFlag\",DataContext.getDropdownValues(this._oi18nModel.getProperty(\"ddNettingDefaultFlag\")));\n\t    \toModel.setProperty(\"/GMIDShipToCountryVM/Quadrant\",DataContext.getDropdownValues(this._oi18nModel.getProperty(\"ddQuadrant\")));\n\t    \toModel.setProperty(\"/GMIDShipToCountryVM/Channel\",DataContext.getDropdownValues(this._oi18nModel.getProperty(\"ddChannel\")));\n\t    \toModel.setProperty(\"/GMIDShipToCountryVM/MarketDefaultFlag\",DataContext.getDropdownValues(this._oi18nModel.getProperty(\"ddMarketDefault\")));\n\t    \toModel.setProperty(\"/GMIDShipToCountryVM/SupplySystemFlag\",DataContext.getDropdownValues(this._oi18nModel.getProperty(\"ddSupplySystemFlag\")));\n\n\t    \t// attach _onRouteMatched to be called everytime on navigation to Maintain Attributes page\n\t    \t// do not attach again if this is not the first time loading the page, if we attach it again performance is affected\n\t    \tif(firstTimePageLoad)\n\t    \t{\n\t    \t\tvar oRouter = this.getRouter();\n\t\t\t\toRouter.getRoute(\"gmidSubmission\").attachMatched(this._onRouteMatched, this);\n\t\t\t\t// get default values for various fields and set them in global variables\n\t    \t\tthis.getDefaultPropertyValues();\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\t// reset the UI to all be invisible\n\t    \t\tthis.resetPage();\n\t    \t}\n    \t},\n    \tgetRouter : function () {\n\t\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t},\n\t\t// force init method to be called everytime we naviagte to Maintain Attribuets page \n\t\t_onRouteMatched : function (oEvent) {\n\t\t\t// if the user is not a BAM user, redirect to access denied page\n\t\t\tif(DataContext.isBAMUser() === false)\n\t\t\t{\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"accessDenied\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(firstTimePageLoad)\n\t\t\t\t{\n\t\t\t\t\tfirstTimePageLoad = false;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.onInit();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// navigate back to the homepage\n\t\tonHome: function(){\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"home\");\n\t\t},\n\t\tresetPage: function ()\n        {\n        \t// hide the table & excel button and set the radio button to not selected\n\t\t\tvar tblGmid = this.getView().byId(\"tblGMIDRequest\");\n\t\t\ttblGmid.setVisible(false);\n\t\t\tvar excelHBox = this.getView().byId(\"excelHBox\");\n\t\t\texcelHBox.setVisible(false);\n\t\t\tvar rbgGMIDType = this.getView().byId(\"rbgGMIDType\");\n\t\t\trbgGMIDType.setSelectedIndex(-1);\n\t\t\tvar btnSubmit = this.getView().byId(\"btnSubmit\");\n\t\t\tbtnSubmit.setVisible(false);\n\t\t\tvar btnContinue = this.getView().byId(\"btnContinueToPlantSelection\");\n\t\t\tbtnContinue.setVisible(false);\n\t\t\t\n        },\n    \t// Below function is used to prepare an empty object\n    \taddEmptyObject : function() {\n\t    \tvar aData  = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM\");\n\t    \tvar emptyObject = {createNew: true, isError: false};\n\t    \taData.push(emptyObject);\n\t    \tthis._oGMIDShipToCountryViewModel.setProperty(\"/GMIDShipToCountryVM\", aData);\n\t\t},\n\t\t// Below function returns value for enabling a control\n\t\tenableControl : function(value) {\n    \t\treturn !!value;\n\t\t},\n\t\t// Below function returns value for disabling a control\n\t\tdisableControl : function(value) {\n\t\t\treturn !value;\n\t\t},\n\t\t// Below function adds a new empty row\n\t\tonAddRow : function(oEvent) {\n\t    \tvar path = oEvent.getSource().getBindingContext().getPath();\n\t\t    // create new empty GMIDShipToCountry object\n\t\t    var obj = {\n\t\t    \t\t\t\tGMID: \"\",\n\t\t    \t\t\t\tGMIDErrorState: \"None\",\n\t\t    \t\t\t\tCOUNTRY_CODE_ID:-1,\n\t\t    \t\t\t\tcountryErrorState: \"None\",\n\t\t    \t\t\t\tCURRENCY_CODE_ID:-1,\n\t\t    \t\t\t\tcurrencyErrorState: \"None\",\n\t        \t\t\t\tIBP_RELEVANCY_CODE_ID:this._defaultIBPRelevancy,\n\t        \t\t\t\tIBPRelevancyErrorState: \"None\",\n\t        \t\t\t\tNETTING_DEFAULT_CODE_ID:-1,\n\t        \t\t\t\tnettingDefaultErrorState: \"None\",\n\t        \t\t\t\tQUADRANT_CODE_ID:this._defaultQuadrantForSeed,\n\t        \t\t\t\tquadrantErrorState: \"None\",\n\t        \t\t\t\tCHANNEL_CODE_ID:this._defaultChannelForSeed,\n\t        \t\t\t\tchannelErrorState: \"None\",\n\t        \t\t\t\tMARKET_DEFAULT_CODE_ID:-1,\n\t        \t\t\t\tmarketDefaultErrorState: \"None\",\n\t        \t\t\t\tSUPPLY_SYSTEM_FLAG_CODE_ID: -1,\n\t        \t\t\t\tcreateNew: false,\n\t\t    \t\t\t\tisError: false\n\t\t    \t\t};\n\t\t    // set default property values on the basis of selected gmid type\n\t    \tobj = this.setDefaultPropertyValues(this._oSelectedGMIDType, obj);\n\t    \tthis._oGMIDShipToCountryViewModel.setProperty(path, obj);\n\t    \tthis.addEmptyObject();\n\t\t},\n\t\t// Below function removes a row\n\t\tonRemoveRow : function(oEvent) {\n\t\t\t// Get the object to be deleted from the event handler\n\t\t\tvar entryToDelete = oEvent.getSource().getBindingContext().getObject();\n\t\t\t// Get the # of rows in the VM, (this includes the dropdown objects such as Country, Currency, etc..)\n\t\t\tvar rows = this._oViewModelData.GMIDShipToCountryVM;\n\t\t\t\n\t\t\t// loop through each row and check whether the passed object = the row object\n\t\t\tfor(var i = 0; i < rows.length; i++){\n\t\t\t\tif(rows[i] === entryToDelete )\n\t\t\t\t{\n\t\t\t\t\t// found a match, remove this row from the data\n\t\t\t\t\trows.splice(i,1);\n\t\t\t\t\t// refresh the GMID VM, this will automatically update the UI\n\t\t\t\t\tthis._oGMIDShipToCountryViewModel.refresh();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t    // Below function will show the grid when radio button is selected\n\t\tfnGridShow : function(evt){\n\t    \tvar oSelectedIndex = evt.getParameter(\"selectedIndex\");  \n\t    \tvar oRadioButtonSrc = evt.getSource().getAggregation(\"buttons\");  \n\t    \tthis._oSelectedGMIDType = oRadioButtonSrc[oSelectedIndex].getText();\n\t    \t// get the crop protection and seeds value from i18n file\n\t\t    this._oSeed = this._oi18nModel.getProperty(\"seeds\");\n\t\t    this._oCropProtection = this._oi18nModel.getProperty(\"cropProtection\");\n\t\t    var tblGmid = this.getView().byId(\"tblGMIDRequest\");\n\t\t\tvar btnSubmit = this.getView().byId(\"btnSubmit\");\n\t\t\tvar btnContinue = this.getView().byId(\"btnContinueToPlantSelection\");\n\t\t\tif(this._oSelectedGMIDType === this._oSeed){\n     \t\t\ttblGmid.setVisible(true);\n     \t\t\tbtnSubmit.setVisible(true);\n     \t\t\tbtnContinue.setVisible(false);\n\t\t\t}\n    \t\telse\n    \t\t{\n    \t\t\ttblGmid.setVisible(true);\n    \t\t\tbtnSubmit.setVisible(false);\n    \t\t\tbtnContinue.setVisible(true);\n    \t\t}\n    \t\t\n    \t\t// show the import to Excel button\n\t\t\tvar excelHBox = this.getView().byId(\"excelHBox\");\n    \t\texcelHBox.setVisible(true);\n    \t\t\n    \t\t// Get the VM rows\n\t\t\tvar rows = this._oViewModelData.GMIDShipToCountryVM;\n\t\t\t// loop through each row and update the Quadrant, Channel and Marketing Flag property to default value for seeds\n\t\t\tfor(var i = 0; i < rows.length; i++){\n\t\t\t\trows[i] = this.setDefaultPropertyValues(this._oSelectedGMIDType, rows[i]);\n\t\t\t}\n    \t\t// refresh the GMID VM, this will automatically update the UI\n    \t\tthis._oGMIDShipToCountryViewModel.refresh();\n\t\t},\n\t\t// This function loops through all the rows on the form and checks each input to see if it is filled in\n        validateTextFieldValues :function () {\n    \t\t\n        \tvar returnValue = true;\n        \tvar data = this._oViewModelData.GMIDShipToCountryVM;\n            for(var i = 0; i < data.length - 1; i++) \n            {\n            \tif(this.checkForEmptyFields(data[i]))\n            \t{\n            \t\tdata[i].isError = true;\n            \t\tif(data[i].errorSummary !== \"\")\n\t                {\n\t                \tdata[i].errorSummary += \"\\n\";  \n\t                }\n\t            \tdata[i].errorSummary += \"Please enter all mandatory fields highlighted in red.\";\n\t            \treturnValue = false;\n            \t}\n            }\n            return returnValue;\n        },\n        // This functions takes one row and check each field to see if it is filled in, if not -> highlight in red\n        checkForEmptyFields: function (row) {\n        \tvar errorsFound = false;\n        \t\n    \t\tif (row.GMID === \"\")\n            {\n            \trow.GMIDErrorState = \"Error\";\n            \terrorsFound = true;\n            }\n            if(parseInt(row.COUNTRY_CODE_ID,10) === -1)\n            {\n            \trow.countryErrorState = \"Error\";\n            \terrorsFound = true;\n            }\n            if(parseInt(row.IBP_RELEVANCY_CODE_ID,10) === -1)\n            {\n            \trow.IBPRelevancyErrorState = \"Error\";\n            \terrorsFound = true;\n            }\n            if(parseInt(row.NETTING_DEFAULT_CODE_ID,10) === -1)\n            {\n            \trow.nettingDefaultErrorState = \"Error\";\n            \terrorsFound = true;\n            }\n            if(parseInt(row.QUADRANT_CODE_ID,10) === -1)\n            {\n            \trow.quadrantErrorState = \"Error\";\n            \terrorsFound = true;\n            }\n            if(parseInt(row.CHANNEL_CODE_ID,10) === -1)\n            {\n            \trow.channelErrorState = \"Error\";\n            \terrorsFound = true;\n            }\n            if(parseInt(row.MARKET_DEFAULT_CODE_ID,10) === -1)\n            {\n            \trow.marketDefaultErrorState = \"Error\";\n            \terrorsFound = true;\n            }\n            if(parseInt(row.CURRENCY_CODE_ID,10) === -1)\n            {\n            \trow.currencyErrorState = \"Error\";\n            \terrorsFound = true;\n            }\n            return errorsFound;\n        },\n        // This functions sets the value state of each control to None. This is to clear red input boxes when errors were found durin submission.\n    \tonChange: function(oEvent){\n\t\t\tvar sourceControl = oEvent.getSource();\n\t\t\tsourceControl.setValueStateText(\"\");\n\t\t\tsourceControl.setValueState(sap.ui.core.ValueState.None);\n\t\t},\n        // function to check whether the user has entered a duplicate GMID/country entry on the form\n        validateDuplicateEntries :function(){\n\t        var returnValue = true;\n\t        var data = this._oViewModelData.GMIDShipToCountryVM;\n\t        for(var i = 0; i < data.length - 1; i++) \n\t        {\n\t            for( var j = i + 1; j < data.length - 1; j++)\n\t            { \n\t\t            if((data[i].GMID !== \"\" &&  data[j].GMID !== \"\") && (data[i].COUNTRY_CODE_ID !== -1 &&  data[j].COUNTRY_CODE_ID !== -1) && (this.lpadstring(data[i].GMID) === this.lpadstring(data[j].GMID)) && (data[i].COUNTRY_CODE_ID === data[j].COUNTRY_CODE_ID))\n\t\t            {\n\t\t            \t// highlight the GMID & Country input boxes in red\n\t\t            \t data[i].isError = true;\n\t\t            \t data[i].GMIDErrorState = \"Error\";\n\t\t            \t data[i].countryErrorState = \"Error\";\n\t\t            \t data[j].isError = true;\n\t\t            \t data[j].GMIDErrorState = \"Error\";\n\t\t            \t data[j].countryErrorState = \"Error\";\n\t\t            \t \n\t\t            \t if(data[i].errorSummary !== \"\")\n\t                \t {\n\t                \t\tdata[i].errorSummary += \"\\n\";  \n\t                \t }\n\t            \t\t data[i].errorSummary += \"Duplicate GMID/Country Combination found at row # \" + (j + 1);\n\t            \t\t \n\t            \t\t if(data[j].errorSummary !== \"\")\n\t                \t {\n\t                \t\tdata[j].errorSummary += \"\\n\";  \n\t                \t }\n\t            \t\t data[j].errorSummary += \"Duplicate GMID/Country Combination found at row # \" + (i + 1);\n\t            \t\t \n\t\t            \t returnValue = false;\n\t\t            }\n\t            } \n\t        }\n\t        return returnValue;\n        },\n        // This function checks whether a crop protection has plants associated with it\n        validateGmidShipFromPlant :function()\n        {\n        \tvar data = this._oViewModelData.GMIDShipToCountryVM;\n             var viewpath = \"V_GMID_SHIP_FROM_PLANT\";\n             // get all the GMID/Plants data for the GMIDS entered in UI\n             var gmidPlantRecords = DataContext.getGMIDListFromDB(this._gmidList,viewpath); \n        \t var IsAllgmidHasPlant = true;\n        \t  // get the GMID status for i18n model\n        \t var z1gmid = this._oi18nModel.getProperty(\"z1gmidstatus\");\n        \t var zcgmid = this._oi18nModel.getProperty(\"zcgmidstatus\");\n        \t var z9gmid = this._oi18nModel.getProperty(\"z9gmidstatus\");\n        \t\n\t        for(var i = 0; i < data.length - 1; i++) \n\t        {\n\t        \tif(data[i].GMID !== \"\")\n\t        \t{\n\t        \t\tvar gmidHasPlant = false;\n\t        \t\tfor(var k = 0; k < gmidPlantRecords.length; k++) \n                     {\n\t                    // loop the GMID Country Status Records to check whether GMID is valid\n\t                    if ((this.lpadstring(data[i].GMID)=== gmidPlantRecords[k].GMID) && (z1gmid !== gmidPlantRecords[k].MATERIAL_STATUS_FILTER && zcgmid !== gmidPlantRecords[k].MATERIAL_STATUS_FILTER\n\t                    \t\t\t&& z9gmid !== gmidPlantRecords[k].MATERIAL_STATUS_FILTER ))\n            \t\t\t{\n\t                \t\tgmidHasPlant = true;\n            \t\t\t}\n\t\t\t        \telse\n                \t\t{\n                \t   \t\tcontinue;\n                \t\t}\n\t        \t  } // end for  for loop gmidPlantRecords\n\t        \t  if (gmidHasPlant === false)\n\t        \t  {\n  \t            \tIsAllgmidHasPlant = false;\n\t        \t\tdata[i].isError = true;\n\t        \t\tdata[i].GMIDErrorState = \"Error\";\n\t                if(data[i].errorSummary !== \"\")\n\t                {\n\t                \tdata[i].errorSummary += \"\\n\";  \n\t                }\n\t                data[i].errorSummary += \"No Valid Ship from Plants are available for the GMID.\";\n\t        \t  } // end for validgmidinput if\n\t\t        } // end for if(data[i].GMID !== \"\")\n\t        } // end for outer for loop\n\t        // if for each GMID a plant exists, return true, else return false\n\t        return IsAllgmidHasPlant;\n        },\n        // validating whether entered GMID have valid status\n        validateGMIDbyStatus : function  () {\n            var gmiddata = this._oViewModelData.GMIDShipToCountryVM;\n             var viewpath = \"V_VALIDATE_GMID\";\n             // below function will get all the GMID Country Records for the GMID's entered in UI\n             var gmidCountryRecords = DataContext.getGMIDListFromDB(this._gmidList,viewpath);                           \n        \t var oi18nModel = this.getView().getModel(\"i18n\");\n        \t  // get the GMID status for i18n model\n        \t var z1gmid = oi18nModel.getProperty(\"z1gmidstatus\");\n        \t var zcgmid = oi18nModel.getProperty(\"zcgmidstatus\");\n        \t var z9gmid = oi18nModel.getProperty(\"z9gmidstatus\");\n        \t var prdGMID = oi18nModel.getProperty(\"prdGMID\");\n        \t var IsAllvalidgmidswithstatus = true;\n \n        \tfor(var i = 0; i < gmiddata.length - 1; i++) \n\t        {\n\t        \tif(gmiddata[i].GMID !== \"\")\n\t        \t{\n\t        \t\tvar validgmidwithstatus = true;\n\t        \t\tfor(var k = 0; k < gmidCountryRecords.length; k++) \n                     {\n\t                    // loop the GMID Country Status Records to check whether GMID is valid and with valid material status\n\t                     if ((this.lpadstring(gmiddata[i].GMID) === gmidCountryRecords[k].GMID) && (z1gmid === gmidCountryRecords[k].MATERIAL_STATUS || zcgmid === gmidCountryRecords[k].MATERIAL_STATUS ||\n\t                    \t\tz9gmid === gmidCountryRecords[k].MATERIAL_STATUS || prdGMID === gmidCountryRecords[k].SOURCE))\n            \t\t\t{\n\t                \t\tvalidgmidwithstatus = false;\n            \t\t\t}\n\t\t               else\n\t            \t   {\n\t            \t   \t continue;\n\t            \t   }\n\t        \t   }\n\t        \t  if (validgmidwithstatus === false)\n\t        \t  {\n\t\t  \t\t        IsAllvalidgmidswithstatus = false;\n\t            \t\tgmiddata[i].isError = true;\n\t            \t\tgmiddata[i].GMIDErrorState = \"Error\";\n\t\t                if(gmiddata[i].errorSummary !== \"\")\n\t\t                {\n\t\t                \tgmiddata[i].errorSummary += \"\\n\";  \n\t\t                }\n\t\t                gmiddata[i].errorSummary += \"GMID has an invalid status or does not exists in PRM system.\";  \n\t        \t  } // end for validgmidinput if\n\t        \t} // end for if(data[i].GMID !== \"\")\n\t        } // end for outer for loop\n\t        return IsAllvalidgmidswithstatus;\n        },\n        // below function will validate whether entered GMID is valid or not\n        validateGMID : function()\n        {\n        \t var gmiddata = this._oViewModelData.GMIDShipToCountryVM;\n             var viewpath = \"V_VALIDATE_GMID\";\n             // get all the GMID's with the Status for the GMID's entered in UI\n             var gmidRecords = DataContext.getGMIDListFromDB(this._gmidList,viewpath); \n         \t var IsAllvalidgmids = true;\n        \tfor(var i = 0; i < gmiddata.length - 1; i++) \n\t        { \n\t        \tif(gmiddata[i].GMID !== \"\")\n\t        \t{\n\t        \t\tvar validgmid = false;\n\t        \t\tfor(var k = 0; k < gmidRecords.length; k++) \n                     {\n\t                    // loop the GMID  Records to check whether GMID is valid\n\t                     if ((this.lpadstring(gmiddata[i].GMID) === gmidRecords[k].GMID) && (this._oSelectedGMIDType.toUpperCase() === gmidRecords[k].VALUE_CENTER_DESC))\n\t                    \t{\n\t                    \t\tvalidgmid =  true;\n\t\t\t               }\n\t\t\t                else\n\t                \t   {\n\t                \t   \t\tcontinue;\n\t                \t   }\n\t        \t\t}\n\t        \t  if (validgmid === false)\n\t\t        \t  {\n\t    \t  \t\t        IsAllvalidgmids = false;\n\t                \t\tgmiddata[i].isError = true;\n\t                \t\tgmiddata[i].GMIDErrorState = \"Error\";\n\t\t\t                if(gmiddata[i].errorSummary !== \"\")\n\t\t\t                {\n\t\t\t                \tgmiddata[i].errorSummary += \"\\n\";  \n\t\t\t                }\n\t\t\t                gmiddata[i].errorSummary += \"Invalid GMID - GMID does not exist.\";  \n\t\t        \t  } // end for validgmidinput if\n\t        \t  } // end for gmiddata[i].GMID !==\n\t        } // end for outre for loop\n\t        return IsAllvalidgmids;\n        },\n         // below function will left pad GMID with leading zeroes if length is less than 8\n        lpadstring : function(gmid) {\n    \t\t\twhile (gmid.length < 8)\n        \t\tgmid = \"0\" + gmid;\n    \t\treturn gmid;\n        },\n        // below function will return the list of GMIDS from the UI\n        gmidList : function(){\n        \tvar gmiddata = this._oViewModelData.GMIDShipToCountryVM;\n        \tvar gmid; \n        \t // prepare an array of GMIDs from the UI\n            var gmidList = [];\n            for(var j = 0; j < gmiddata.length - 1; j++) \n            {\n\t            // every time empty the GMID object\n\t             gmid= {\"GMID\": \"\" };\n\t             gmid.GMID = this.lpadstring(gmiddata[j].GMID);\n\t             gmidList.push(gmid);\n            }\n            return gmidList;\n        },\n        // function to check if the field is numeric\n        numValidationCheck : function (oEvent) {\n        \toEvent.getSource().setValueStateText(\"\");\n\t\t\toEvent.getSource().setValueState(sap.ui.core.ValueState.None);\n        \tvar sNumber = \"\";\n\t\t\tvar value = oEvent.getSource().getValue();\n            var bNotnumber = isNaN(value);\n            if(bNotnumber === false) \n            {\n            \tsNumber = value;\n            }   \n            else \n            {\n            \toEvent.getSource().setValue(sNumber);\n            } \n        },\n        resetValidationForModel : function () {\n        \tvar data = this._oViewModelData.GMIDShipToCountryVM;\n            for(var i = 0; i < data.length - 1; i++) \n            {\t\n            \tdata[i].isError = false;\n            \tdata[i].errorSummary = \"\";\n            \tdata[i].GMIDErrorState = \"None\";\n            \tdata[i].countryErrorState = \"None\";\n            \tdata[i].currencyErrorState = \"None\";\n            \tdata[i].IBPRelevancyErrorState = \"None\";\n            \tdata[i].nettingDefaultErrorState = \"None\";\n            \tdata[i].quadrantErrorState = \"None\";\n            \tdata[i].channelErrorState = \"None\";\n            \tdata[i].marketDefaultErrorState = \"None\";\n            }\n            this._oGMIDShipToCountryViewModel.refresh();\n        },\n       showErrorMessage: function(oEvent)\n        {\n\t\t    var text = oEvent.getSource().data(\"text\");\n\t\t    // show GMID and Country inside Error Message\n\t\t    var GMID = oEvent.getSource().data(\"GMID\");\n\t\t    var CountryCode = parseInt(oEvent.getSource().data(\"CountryCode\"),10);\n\t\t    var countryList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/Country\");\n\t\t    // if no country is selected then update countrylabel to empty\n\t\t    var countryLabel;\n\t\t    if (CountryCode=== -1)\n\t\t    {\n\t\t    \tcountryLabel =\"\";\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t    \tcountryLabel = countryList.find(function(data){return data.ID === CountryCode; }).LABEL;\n\t\t    }\n\t\t\tvar GMIDCountry = \"GMID : \" + GMID + \"\\n\" + \"Country : \" + countryLabel + \"\\n\" + \"\\n\";\n\t\t         MessageBox.alert(GMIDCountry + text, {\n\t\t\t     icon : MessageBox.Icon.ERROR,\n\t\t\ttitle : \"Invalid Input\"\n\t\t\t       });\n        },\n    \t// Function to save the data into the database\n    \tonSubmit : function () {\n    \t\tvar errorCount = 0;\n    \t\tvar successCount = 0;\n    \t\tvar GMIDShipToCountry = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM\");\n    \t\t  // current limit for saving is 200 records\n\t\t\t  // check if GMID Submission Grid  has more than 200 records\n\t\t\t  // if more than 200 than show a validation message to user\n\t\t\t var maxLimitSubmit = parseInt(this._oi18nModel.getProperty(\"MaxLimit\"),10);\n\t\t\t var maxLimitSubmitText = this._oi18nModel.getProperty(\"MaxLimitSubmit.text\");\n\t\t\t \tif (GMIDShipToCountry.length > maxLimitSubmit)\n\t\t\t        {\n\t\t\t        \tMessageBox.alert(maxLimitSubmitText,\n\t\t\t        \t{\n\t\t\t        \t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t        \t});\n\t\t\t        \treturn;\n\t\t\t        }\n\t\t\t\n    \t\t// if there are no GMIDs show a validation message\n    \t\tif (GMIDShipToCountry.length === 1)\n    \t\t{\n\t\t\t\tMessageBox.alert(\"Please enter at least one GMID.\", {\n\t    \t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\ttitle : \"Invalid Input\"\n\t       \t\t});\n    \t\t\treturn;\n    \t\t}\n    \t\t\n    \t\t// reset the error message property to false before doing any validation\n\t\t\tthis.resetValidationForModel();\n\t\t\t// reset error on page to false\n\t\t\tthis._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",false);\n\t\t\t// remove the file from the uploader\n\t\t\tvar fileUploader = this.getView().byId(\"excelFileUploader\");\n\t\t\tfileUploader.clear();\n\t\t\t\n\t\t\t//open busy dialog\n\t\t\tthis._busyDialog.open();\n\t\t\t// need to declare local this variable to call global functions in the timeout function\n\t\t\t\n\t\t\t// prepare an array of GMIDs from the UI\n            this._gmidList = this.gmidList();\n\t\t\tvar t = this;\n\t\t\t\n\t\t\t// setting timeout function in order to show the busy dialog before doing all the validation\n\t\t\tsetTimeout(function()\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif (t.validateTextFieldValues() === false)\n\t\t        {\n\t\t        \t// Set error message column to false (not visible by default)\n\t\t\t    \tt._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",true);\n\t\t        }\n\t\t\t\t// check of invalid GMID entry by checking the status of GMID\n\t        \tif (t.validateGMIDbyStatus() === false)\n\t        \t{\n\t        \t\tt._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",true);\n\t        \t}\n\t\t        // if crop protection is selected and the GMID/plant combination does not exist, return error\n\t\t        if(t._oSelectedGMIDType === t._oCropProtection && t.validateGmidShipFromPlant() === false)\n\t        \t{\n\t        \t\tt._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",true);\n\t        \t}\n\t\t        // check for duplicate GMID/Country Combination\n\t\t        if(t.validateUniqueGmidCountry() === true)\n\t        \t{\n\t        \t\tt._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",true);\n\t        \t}\n\t        \t// check for duplicate entries on the page\n\t        \tif (t.validateDuplicateEntries() === false)\n\t        \t{\n\t        \t\tt._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",true);\n\t        \t}\n\t        \t// check if GMID entered is valid\n\t        \tif (t.validateGMID() === false)\n\t        \t{\n\t        \t\tt._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",true);\n\t        \t}\n\t\t        if(!t._oGMIDShipToCountryViewModel.getProperty(\"/ErrorOnPage\"))\n\t\t        {\n\t\t        \t// based on which template is selected, store the GMID in the appropriate table\n\t\t        \tvar tablePath = \"\";\n\t\t    \t    if(t._oSelectedGMIDType === t._oCropProtection)\n\t\t    \t    {\n\t\t    \t    \ttablePath = \"/GMID_SHIP_TO_COUNTRY_STG\";\n\t\t    \t    \tDataContext.deleteStagingData(loggedInUserID);\n\t\t    \t    \t\n\t\t    \t    \t// delete the records from staging table\n\n\t\t    \t    }\n\t\t    \t    else\n\t\t    \t    {\n\t\t    \t    \ttablePath = \"/GMID_SHIP_TO_COUNTRY\";\n\t\t    \t    }\n\t\t    \t    \n\t\t    \t\t// Create current timestamp\n\t\t    \t\tvar oDate = new Date();\n\t\t    \t\t// Get the MaxID\n\t\t    \t    var maxID =\tDataContext.getMaxID(tablePath);\n\t\t    \t    // Get the code id for GMID Country Status\n\t\t    \t    var gmidcountrystatusID = DataContext.getGMIDCountryStatusID();\n\t\t    \t    \n\t\t    \t\t// loop through the rows and for each row insert data into database\n\t\t    \t\t// each row contains GMID Ship To combination.\n\t\t    \t\tfor(var i = 0; i < GMIDShipToCountry.length - 1; i++) \n\t\t    \t\t{\n\t\t\t\t\t\tvar GMID = t.lpadstring(GMIDShipToCountry[i].GMID);\n\t\t\t\t\t\tvar countryID = parseInt(GMIDShipToCountry[i].COUNTRY_CODE_ID,10);\n\t\t\t\t\t\tvar storedcurrencyID = parseInt(GMIDShipToCountry[i].CURRENCY_CODE_ID,10);\n\t\t\t\t\t\tvar ibprelevancyID = parseInt(GMIDShipToCountry[i].IBP_RELEVANCY_CODE_ID,10);\n\t\t\t\t\t\tvar nettingdefaultID = parseInt(GMIDShipToCountry[i].NETTING_DEFAULT_CODE_ID,10);\n\t\t\t\t\t\tvar quadrantID = parseInt(GMIDShipToCountry[i].QUADRANT_CODE_ID,10);\n\t\t\t\t\t\tvar channelID = parseInt(GMIDShipToCountry[i].CHANNEL_CODE_ID,10);\n\t\t\t\t\t\tvar marketdefaultID = parseInt(GMIDShipToCountry[i].MARKET_DEFAULT_CODE_ID,10);\n\t\t\t\t\t\tvar supplySystemFlag = parseInt(GMIDShipToCountry[i].SUPPLY_SYSTEM_FLAG_CODE_ID,10);\n\t\t\t\t\t\tvar createdBy = loggedInUserID;\n\t\t\t\t\t\t// create new GMIDShipToCountry object\n\t\t\t\t\t\tvar newGMID = {\n\t\t\t\t        \tID: 1 ,\n\t\t\t\t        \tGMID: GMID,\n\t\t\t\t        \tCOUNTRY_CODE_ID: countryID,\n\t\t\t\t        \tCURRENCY_CODE_ID: storedcurrencyID,\n\t\t\t\t        \tIBP_RELEVANCY_CODE_ID: ibprelevancyID,\n\t\t\t\t        \tNETTING_DEFAULT_CODE_ID: nettingdefaultID,\n\t\t\t\t        \tQUADRANT_CODE_ID:quadrantID,\n\t\t\t\t        \tCHANNEL_CODE_ID: channelID,\n\t\t\t\t        \tMARKET_DEFAULT_CODE_ID: marketdefaultID,\n\t\t\t\t        \tSUPPLY_SYSTEM_FLAG_CODE_ID: supplySystemFlag,\n\t\t\t\t        \tTYPE: t._oSelectedGMIDType.toUpperCase(),\n\t\t\t\t        \tGMID_COUNTRY_STATUS_CODE_ID: gmidcountrystatusID,\n\t\t\t\t        \tCREATED_ON: oDate,\n\t\t\t\t        \tCREATED_BY:createdBy\n\t\t    \t\t\t};\n\t\t    \t\t\t\n\t\t        \t\tt._oDataModel.create(tablePath, newGMID,\n\t\t        \t\t{\n\t\t\t\t        \tsuccess: function(){\n\t\t\t\t        \t\tsuccessCount++;\n\t\t\t\t    \t\t},\n\t\t\t\t    \t\terror: function(){\n\t\t\t\t    \t\t\terrorCount++;\n\t\t\t\t\t\t\t}\n\t\t        \t\t});\n\t\t    \t\t}\n\t\t    \t\t//Show success or error message\n\t\t    \t\tif(errorCount === 0) \n\t\t    \t\t{\n\t        \t\t\tif(t._oSelectedGMIDType === t._oSeed)\n\t        \t\t\t{\n\t        \t\t\t\tvar oRouter = t.getRouter();\n\t        \t\t\t\t// once insertion is success, navigate to homepage\n\t        \t\t\t\tMessageBox.alert(\"You have successfully submitted \" + successCount + \" GMID(s)\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticon : MessageBox.Icon.SUCCESS,\n\t\t\t\t\t\t\t\t\ttitle : \"Success\",\n\t\t\t\t\t\t\t\t\tonClose: function() {\n\t\t\t\t\t        \t\t\toRouter.navTo(\"home\");\n\t\t\t\t\t        \t}\n\t\t\t\t\t\t\t});\n\t        \t\t\t}\n\t        \t\t\telse\n\t        \t\t\t{\n\t        \t\t\t\t// navigate to plant selection\n\t                    \tt.getOwnerComponent().getRouter().navTo(\"gmidPlantSelection\");\n\t    \t\t\t\t}\n\t\t    \t\t}\n\t\t    \t\telse \n\t\t    \t\t{\n\t        \t\t\tMessageBox.alert(\"Error: All GMID's are not submitted successfully. Please contact System Admin.\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t});\n\t\t    \t\t}\n\t    \t\t\n\t        \t}\n\t        \t\n\t        \t// close busy dialog\n\t\t\t\tt._busyDialog.close();\n\t\t\t},500); // end of timeout function\n        },\n        // method to check for duplicate Gmid and Country combination\n        validateUniqueGmidCountry : function (){\n            // loop through the rows and for each row check for duplicate entry in DB\n            // each row contains GMID Ship To combination.\n            var data = this._oViewModelData.GMIDShipToCountryVM;\n\t        // need to pass the above array to the DB to get the duplicate records\n\t        var viewpath = \"V_VALIDATE_GMID_COUNTRY\";\n            var gmidCountryRecords = DataContext.getGMIDListFromDB(this._gmidList,viewpath);                           \n            var isDuplicate = false;\n            for(var i = 0; i < data.length - 1; i++) \n            {\n                var GMID = this.lpadstring(data[i].GMID);\n                var countryID = parseInt(data[i].COUNTRY_CODE_ID,10);\n                // loop the GMID Country Records from DB to check Unique\n                for(var k = 0; k < gmidCountryRecords.length; k++) \n                {\n                    // check if GMID and Country Combinations exists in DB\n\t\t            if (GMID === gmidCountryRecords[k].GMID && countryID === gmidCountryRecords[k].COUNTRY_CODE_ID)\n\t\t            {\n\t\t                isDuplicate = true;\n\t\t                data[i].isError = true;\n\t\t                data[i].GMIDErrorState = \"Error\";\n\t\t                data[i].countryErrorState = \"Error\";\n\t\t                if(data[i].errorSummary !== \"\")\n\t\t                {\n\t\t        \t\t\tdata[i].errorSummary += \"\\n\";  \n\t\t                }\n\t\t            \tdata[i].errorSummary += \"GMID/Country Combination already exists in the system.\";\n\t\t            }\n\t\t            else\n\t\t            {\n\t\t                continue;\n\t\t            }\n                }\n            }\n            this._oGMIDShipToCountryViewModel.refresh();\n            \n            return isDuplicate;\n        },\n\n        // gets the default property values and sets them in global variables\n        getDefaultPropertyValues : function(){\n        \t// get default value's (0 - Active) code id for IBP Relevancy Flag  and set to global variable\n        \tvar ibpRelevancyList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/IBPRelevancyFlag\");\n\t\t\tthis._defaultIBPRelevancy = ibpRelevancyList.find(function(data){return data.CODE_KEY === \"0\"; }).ID;\n\t\t\t\n\t\t\t// get default value's code id ('Not Applicable') for seeds for Quadrant field and set to global variable\n\t\t\tvar quadrantList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/Quadrant\");\n\t\t\tthis._defaultQuadrantForSeed = quadrantList.find(function(data){return data.CODE_KEY === \"N/A\"; }).ID;\n\t\t\t\n\t    \t// get default value's code id ('Not Applicable') for seeds for Channel field and set to global variable\n\t    \tvar channelList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/Channel\");\n\t\t\tthis._defaultChannelForSeed = channelList.find(function(data){return data.CODE_KEY === \"N/A\"; }).ID;\n\t\t\t\n\t    \t// get default value's code id ('0 - Crop') for crop protection for Marketing Flag field and set to global variable\n\t    \tvar mktFlagList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/MarketDefaultFlag\");\n\t\t\tthis._defaultMarketingFlagForCP = mktFlagList.find(function(data){return data.CODE_KEY === \"0\"; }).ID; \n\t\t\t\n\t\t\t// get default value's code ids for seed and crop protection for Supply System flag and set to global variable\n\t    \tvar supplySystemFlag = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/SupplySystemFlag\");\n\t\t\tthis._defaultSupplySystemFlagForSeed = supplySystemFlag.find(function(data){return data.CODE_KEY === \"RR\"; }).ID; \n\t\t\tthis._defaultSupplySystemFlagForCP = supplySystemFlag.find(function(data){return data.CODE_KEY === \"APO\"; }).ID; \n        },\n        // set the default property values for the passed object\n        setDefaultPropertyValues : function(selectedGMIDType, obj){\n        \tobj.IBP_RELEVANCY_CODE_ID = this._defaultIBPRelevancy;\n        \tif(this._oSelectedGMIDType === this._oSeed){\n\t\t\t\tobj.QUADRANT_CODE_ID = this._defaultQuadrantForSeed;\n\t\t\t\tobj.CHANNEL_CODE_ID = this._defaultChannelForSeed;\n\t\t\t\tobj.MARKET_DEFAULT_CODE_ID = -1;\n\t\t\t\tobj.SUPPLY_SYSTEM_FLAG_CODE_ID = this._defaultSupplySystemFlagForSeed;\n        \t}\n        \telse{\n\t\t\t\tobj.QUADRANT_CODE_ID = -1;\n\t\t\t\tobj.CHANNEL_CODE_ID = -1;\n\t\t\t\tobj.MARKET_DEFAULT_CODE_ID = this._defaultMarketingFlagForCP;\n\t\t\t\tobj.SUPPLY_SYSTEM_FLAG_CODE_ID = this._defaultSupplySystemFlagForCP;\n        \t}\n        \treturn obj;\n        },\n        onImportFromExcel : function(e) {\n        \tthis._validDataFlag = false;\n\t\n\t\t\t// Get the file\n\t\t\tvar fileUploader = this.getView().byId(\"excelFileUploader\");\n\t\t\tvar domRef = fileUploader.getFocusDomRef();\n\t\t\tvar file = domRef.files[0];\n\t\t\t\n\t\t\t// create file reader\n\t\t    var fileReader = new FileReader();\n\t\t    \n\t\t    // remove the Error column on the UI\n\t\t\tthis._oGMIDShipToCountryViewModel.setProperty(\"/ErrorOnPage\",false);\n\t\t\t\n\t\t\tif(file === undefined || file === \"\")\n\t\t\t{\n\t\t\t\tMessageToast.show(\"Please select a file.\");\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// read the file\n\t\t\t\tfileReader.readAsText(file);\n\t\t\t}\n\t\t\tfileReader.onerror = this.errorHandler;\n\t\t\t\n\t\t\t// declare this to access the global functions and variables\n\t\t\tvar t = this;\n\t\t\t\n\t\t\tfileReader.onload = function(event){\n\t\t\t\t\n\t\t\t\t// open busy dialog\n\t\t\t\tt._busyDialog.open();\n\t\t\t\t\n\t\t\t\t// need to have timeout since otherwise the busy dialog does not show during importing\n\t\t\t\tsetTimeout(function()\n\t\t\t\t{\n\t\t\t\t\tvar strCSV = event.target.result;\n\t\t\t\t   \n\t\t\t\t\tvar headerRow = [\"GMID\", \"COUNTRY_CODE_ID\", \"CURRENCY_CODE_ID\",\"IBP_RELEVANCY_CODE_ID\",\n\t\t\t\t\t\"NETTING_DEFAULT_CODE_ID\",\"QUADRANT_CODE_ID\",\"CHANNEL_CODE_ID\",\"MARKET_DEFAULT_CODE_ID\"];\n\t\n\t\t\t        var allTextLines = strCSV.split(/\\r\\n|\\n/);\n\t\t\t        var excelColumnHeaders = allTextLines[0].split(\",\");\n\t\t\t        var validHeadersFlag = true;\n\t\t\t        // current limit for excel upload is 200 records\n\t\t\t        // check if excel has more than 200 records\n\t\t\t        // if more than 200 than show a validation message to user\n\t\t\t        var maxLimitExcel = parseInt(t._oi18nModel.getProperty(\"MaxLimit\"),10);\n\t\t\t        var maxLimitExcelText = t._oi18nModel.getProperty(\"MaxLimitExcel.text\");\n\t\t\t        if (allTextLines.length > maxLimitExcel)\n\t\t\t        {\n\t\t\t        \tMessageBox.alert(maxLimitExcelText,\n\t\t\t        \t{\n\t\t\t        \t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t        \t});\n\t\t\t        \t // close busy dialog\n\t\t\t\t\t\tt._busyDialog.close();\n\t\t\t        \treturn;\n\t\t\t        }\n\t\t\t        if (excelColumnHeaders.length !== parseInt(t._oi18nModel.getProperty(\"numOfHeaderColumns\"),10))\n\t            \t{\n\t            \t\tMessageBox.alert(\"Incorrect number of columns on template.\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t            \t\tvalidHeadersFlag = false;\n\t            \t}\n\t            \telse\n\t            \t{\n            \t\t\t// Get proper column headers from the i18n model\n\t\t                var oGMID = t._oi18nModel.getProperty(\"eGMID\");\n\t\t                var oCountry  = t._oi18nModel.getProperty(\"eCountry\");\n\t\t                var oStoredCurrency =t._oi18nModel.getProperty(\"eStoredCurrency\"); \n\t\t                var oIbpRelevancy  = t._oi18nModel.getProperty(\"eIBPRelevancy\");\n\t\t                var oNettingDefault = t._oi18nModel.getProperty(\"eNettingDefault\");\n\t\t                var oQuadrant = t._oi18nModel.getProperty(\"eQuadrant\");\n\t\t                var oChannel = t._oi18nModel.getProperty(\"eChannel\");\n\t\t                var oMarketDefault = t._oi18nModel.getProperty(\"eMarketDefault\");\n\t\t                \n\t\t\t            if (excelColumnHeaders[0] !== oGMID)\n\t\t\t            {\n\t\t\t                MessageBox.alert(\"Incorrect template format found. The first column should be: GMID\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t                validHeadersFlag = false;\n\t\t\t            }\n\t\t\t            else if (excelColumnHeaders[1] !== oCountry)\n\t\t\t            {\n\t\t\t            \tMessageBox.alert(\"Incorrect template format found. The second column should be: Country\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t                validHeadersFlag = false;\n\t\t\t            }\n\t\t\t            else if (excelColumnHeaders[2] !== oStoredCurrency)\n\t\t\t            {\n\t\t\t            \tMessageBox.alert(\"Incorrect template format found. The third column should be: Stored Currency\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t                 validHeadersFlag = false;\n\t\t\t            }\n\t\t\t            else if (excelColumnHeaders[3] !== oIbpRelevancy)\n\t\t\t            {\n\t\t\t            \tMessageBox.alert(\"Incorrect template format found. The fourth column should be: IBP Relevancy\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t                 validHeadersFlag = false;\n\t\t\t           \t}\n\t\t\t    \t\telse if (excelColumnHeaders[4] !== oNettingDefault)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tMessageBox.alert(\"Incorrect template format found. The fifth column should be: Netting Default\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t                 validHeadersFlag = false;\n\t\t\t    \t\t}\n\t\t\t    \t    else if (excelColumnHeaders[5] !== oQuadrant)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tMessageBox.alert(\"Incorrect template format found. The sixth column should be: Quadrant\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t                 validHeadersFlag = false;\n\t\t\t    \t\t}\n\t\t\t    \t    else if (excelColumnHeaders[6] !== oChannel)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tMessageBox.alert(\"Incorrect template format found. The seventh column should be: Channel\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t                 validHeadersFlag = false;\n\t\t\t    \t\t}\n\t\t\t    \t    else if (excelColumnHeaders[7] !== oMarketDefault)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tMessageBox.alert(\"Incorrect template format found. The eight column should be:  Market Default Flag\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t                 validHeadersFlag = false;\n\t\t\t    \t\t}\n\t            \t} // end of else\n\t\n\t\t\t\t\t// if all the headers are correct\n\t\t\t        if(validHeadersFlag)\n\t\t\t        {\n\t\t            \t// clear out the current data on the page\n\t\t\t\t        t._oViewModelData.GMIDShipToCountryVM.splice(0,t._oViewModelData.GMIDShipToCountryVM.length);\n\t\t\t\t        // loop through all the rows, the last row is empty so do not include it\n\t\t\t            for (var k = 1; k < allTextLines.length - 1; k++) \n\t\t\t            {\n\t\t\t            \t// get a single row\n\t\t\t            \tvar row = allTextLines[k].split(\",\");\n\t\t\t               \n\t\t                \t// create new empty row\n\t\t\t\t\t\t\t var obj = {\n\t\t\t    \t\t\t\t\"GMID\": \"\",\n\t\t\t\t        \t\t\"COUNTRY_CODE_ID\": -1,\n\t\t\t\t        \t\t\"CURRENCY_CODE_ID\": -1,\n\t\t\t\t        \t\t\"IBP_RELEVANCY_CODE_ID\": -1,\n\t\t\t\t        \t\t\"NETTING_DEFAULT_CODE_ID\": -1,\n\t\t\t\t        \t\t\"QUADRANT_CODE_ID\": -1,\n\t\t\t\t        \t\t\"CHANNEL_CODE_ID\": -1,\n\t\t\t\t        \t\t\"MARKET_DEFAULT_CODE_ID\": -1,\n\t\t\t\t        \t\t\"createNew\" : false,\n\t\t\t\t        \t\t\"isError\":false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\n\t\t                \t// get a single row from the Excel file\n\t\t            \t\t// convert the labels to CODE ID's\n\t\t            \t\tvar convertedRow = t.convertLabelToCodeId(row);\n\t\t            \t\t\n\t\t            \t\t// fill the obj with values\n\t\t\t\t\t\t\tfor (var j = 0; j < convertedRow.length; j++) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t    obj[headerRow[j]] = convertedRow[j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// set default supply system flag values for both seeds and crop protection\n\t\t\t\t\t\t\tif(t._oSelectedGMIDType === t._oSeed){\n\t\t\t\t\t\t\t\t\tobj[\"SUPPLY_SYSTEM_FLAG_CODE_ID\"] = t._defaultSupplySystemFlagForSeed;\n\t        \t\t\t\t}\n\t        \t\t\t\telse{\n\t        \t\t\t\t\tobj[\"SUPPLY_SYSTEM_FLAG_CODE_ID\"] = t._defaultSupplySystemFlagForCP;\n\t        \t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// push the object to our model\n\t\t\t\t\t\t\tt._oViewModelData.GMIDShipToCountryVM.push(obj);\n\t\t\t            }\n\t\t\t            \n\t\t\t        \tif (t._validDataFlag === true)\n\t\t\t\t    \t{\n\t\t\t\t    \t\tMessageBox.alert(\"Invalid/empty fields were found and defaulted during import.\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t\t    \t}\n\t\t\t            // add empty row a the bottom;\n\t\t\t            t.addEmptyObject();\n\t\t\t            // close busy dialog\n\t\t\t\t\t\tt._busyDialog.close();\n\t\t\t            // refresh the view model\n\t\t\t            t._oGMIDShipToCountryViewModel.refresh();\n\t\t\t\t            \n\t\t\t\t    }  // end valid headers flag check\n\t\t\t\t    else\n\t\t\t\t    {\n\t\t\t\t    \t // close busy dialog\n\t\t\t\t\t\tt._busyDialog.close();\n\t\t\t\t    }\n\n\t\t\t\t}, 500);\n\t\t\t\t\n\t\t\t}; // end file read on load function\n        },\n        errorHandler : function(event){\n        \tMessageBox.alert(\"Error reading CSV file, please ensure the file is in CSV format.\",\n\t\t\t{\n\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\ttitle : \"Error\"\n\t\t\t});\n        \t\n        },\n        convertLabelToCodeId : function(row) {\n        \t// get all the dropdownlists\n        \tvar countryList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/Country\");\n        \tvar storedCurrencyList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/StoredCurrency\");\n        \tvar ibpRelevancyList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/IBPRelevancyFlag\");\n        \tvar nettingDefaultList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/NettingDefaultFlag\");\n        \tvar quadrantList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/Quadrant\");\n        \tvar channelList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/Channel\");\n        \tvar marketDefaultList = this._oGMIDShipToCountryViewModel.getProperty(\"/GMIDShipToCountryVM/MarketDefaultFlag\");\n        \t// row[0] is the GMID, check if more than 8 chars or not a number\n        \tif(row[0].length > 8 || isNaN(row[0]) || row[0].indexOf(\".\") !== -1)\n        \t{\n        \t\trow[0] = \"\";\n        \t\tthis._validDataFlag = true;\n        \t}\n        \t\n        \t// set the CODE ID's based on labels\n        \tvar countryObject = countryList.find(function(data){return data.LABEL === row[1].trim(); });\n        \tif (countryObject !== \"\" && countryObject !== undefined)\n        \t{\n        \t\trow[1] = countryObject.ID;\n        \t}\n        \telse\n        \t{\n        \t\trow[1] = -1;\n        \t\tthis._validDataFlag = true;\n        \t}\n        \tvar storedCurrencyobj = storedCurrencyList.find(function(data){return data.LABEL === row[2].trim(); });\n        \tif (storedCurrencyobj !== \"\" && storedCurrencyobj !== undefined)\n        \t{\n        \t \trow[2] = storedCurrencyobj.ID;\n        \t}\n        \telse\n        \t{\n        \t   \trow[2] = -1;\n        \t\tthis._validDataFlag = true;\n        \t}\n        \tvar ibpRelevancyobj = ibpRelevancyList.find(function(data){return data.LABEL === row[3].trim(); });\n        \tif (ibpRelevancyobj !== \"\" && ibpRelevancyobj !== undefined)\n        \t{\n        \t \trow[3] = ibpRelevancyobj.ID;\n        \t}\n        \telse\n        \t{\n        \t   \trow[3] = this._defaultIBPRelevancy;\n        \t\tthis._validDataFlag = true;\n        \t}\n        \tvar nettingDefaultobj = nettingDefaultList.find(function(data){return data.LABEL === row[4].trim(); });\n        \tif (nettingDefaultobj !== \"\" && nettingDefaultobj !== undefined)\n        \t{\n        \t \trow[4] = nettingDefaultobj.ID;\n        \t}\n        \telse\n        \t{\n        \t   \trow[4] = -1;\n        \t\tthis._validDataFlag = true;\n        \t}\n        \tvar quadrantobj = quadrantList.find(function(data){return data.LABEL === row[5].trim(); });\n        \tif (quadrantobj !== \"\" && quadrantobj !== undefined)\n        \t{\n        \t \trow[5] = quadrantobj.ID;\n        \t}\n        \telse\n        \t{\n    \t\t\tif(this._oSelectedGMIDType === this._oSeed)\n    \t\t\t{\n\t\t\t\t\trow[5] = this._defaultQuadrantForSeed;\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\trow[5] = -1;\n        \t\t}\n        \t\tthis._validDataFlag = true;\n        \t}\n        \tvar channelobj = channelList.find(function(data){return data.LABEL === row[6].trim(); });\n        \tif (channelobj !== \"\" && channelobj !== undefined)\n        \t{\n        \t \trow[6]= channelobj.ID;\n        \t}\n        \telse\n        \t{\n        \t   \tif(this._oSelectedGMIDType === this._oSeed)\n    \t\t\t{\n\t\t\t\t\trow[6] = this._defaultChannelForSeed;\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\trow[6] = -1;\n        \t\t}\n        \t\tthis._validDataFlag=true;\n        \t}\n        \tvar marketDefauObj = marketDefaultList.find(function(data){return data.LABEL === row[7].trim(); });\n        \tif (marketDefauObj !== \"\" && marketDefauObj !== undefined)\n        \t{\n        \t\trow[7] = marketDefauObj.ID;\n        \t}\n        \telse\n        \t{\n        \t\tif(this._oSelectedGMIDType === this._oSeed)\n    \t\t\t{\n\t\t\t\t\trow[7] = -1;\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\trow[7] = this._defaultMarketingFlagForCP;\n        \t\t}\n        \t\tthis._validDataFlag=true;\n        \t}\n        \treturn row;\n        },\n        onDownloadTemplate: function(){\t\t\t\n         \tvar oUploadCollection = this.getView().byId(\"ucDownloadTemplate\");\n\t\t\tvar oUploadCollectionItem = this.getView().byId(\"uciDownloadTemplate\");\n\t\t\toUploadCollection.downloadItem(oUploadCollectionItem, true);\n\t\t}\n  \t});\n\n});",
		"bam/controller/MaintainAttributes.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"bam/services/DataContext\",\n\t\t\"sap/ui/model/resource/ResourceModel\"\n\t], function (Controller,MessageToast,MessageBox,DataContext,ResourceModel) {\n\t\t\"use strict\";\n\n\treturn Controller.extend(\"bam.controller.MaintainAttributes\", {\n\t\t\tonInit : function () {\n\t\t\t\t // define a global variable for the oData model\t\t    \n\t\t    \tthis._oDataModel = new sap.ui.model.odata.ODataModel(\"/ODataService/BAMDataService.xsodata/\", true);\n\t\t    \tvar oView = this.getView();\n\t\t    \toView.setModel(this._oDataModel);\n\t\t    \t\n\t\t    \tthis._oModel = new sap.ui.model.json.JSONModel();\n\t    \t\tthis._oModel.setProperty(\"/showEditButton\",false);\n\t    \t\tthis.getView().setModel(this._oModel,\"MaintainAttributesVM\");\n\t    \t\t\n\t    \t\tvar oi18nModel = new ResourceModel({\n                \tbundleName: \"bam.i18n.i18n\"\n            \t});\n\t    \t\t// get the Module settings for i18n model\n        \t\tvar maintainAttributes = oi18nModel.getProperty(\"Module.maintainAttributes\");\n        \t\tvar actionEdit = oi18nModel.getProperty(\"Module.actionEdit\");\n\t\t    \t\n\t\t    \t// getting permissions for the current logged in user\n\t\t\t\tvar permissions = DataContext.getUserPermissions();\n\t\t\t\t// check to see if the permission list includes \"EDIT\" action for the MAINTAIN ATTRIBUTES Module\n\t\t\t\t// ATTRIBUTE in this case means MODULE\n\t\t\t\tfor(var i = 0; i < permissions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(permissions[i].ATTRIBUTE === maintainAttributes && permissions[i].ACTION === actionEdit)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis._oModel.setProperty(\"/showEditButton\",true);\n\t\t\t\t\t\t// break since the user may have more than one role, as long as one of the user roles has permission to edit we can show the button\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t    \t\n\t\t    \t//attach _onRouteMatched to be called everytime on navigation to Maintain Attributes page\n\t\t    \tvar oRouter = this.getRouter();\n\t\t\t\toRouter.getRoute(\"maintainAttributes\").attachMatched(this._onRouteMatched, this);\n\t\t\t},\n\t\t\tgetRouter : function () {\n\t\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t},\n\t\t\t// force init method to be called everytime we naviagte to Maintain Attribuets page \n\t\t\t_onRouteMatched : function (oEvent) {\n\t\t\t\t// If the user does not exist in the BAM database, redirect them to the denied access page\n\t\t\t\tif(DataContext.isBAMUser() === false)\n\t\t\t\t{\n\t\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"accessDenied\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.onInit();\n\t\t\t\t}\n\t\t\t},\n\t\t\t// navigate back to the homepage\n\t\t\tonHome: function(){\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"home\");\n\t\t\t},\n\t\t\t// navigate to edit attribute page on click of edit\n\t\t\tonEdit: function(){\n\t\t\t\t// get the smart table control\n\t\t\t\tthis._oSmartTable = this.getView().byId(\"smartTblBAMAttributes\").getTable();\n\t\t\t\t// check if more than or less than 1 checkbox is checked\n\t\t\t\tvar index,context,path,indexOfParentheses1,indexOfParentheses2;\n\t\t\t\tif(this._oSmartTable.getSelectedIndices().length === 1){\n\t\t\t\t\tindex = this._oSmartTable.getSelectedIndices();\n\t\t\t\t\tcontext = this._oSmartTable.getContextByIndex(index[0]); \n\t\t\t\t\tpath = context.getPath();\n\t\t\t\t\tindexOfParentheses1 = path.indexOf(\"(\");\n\t\t\t\t\tindexOfParentheses2 = path.indexOf(\")\");\n\t\t\t\t\t// navigate to single edit page\n\t\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"editAttributesSingle\",{\n\t\t\t\t\t\t editAttributesID : path.substring(indexOfParentheses1 + 1,indexOfParentheses2)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if(this._oSmartTable.getSelectedIndices().length > 1){\n\t\t\t\t\tindex = this._oSmartTable.getSelectedIndices();\n\t\t\t\t\tvar gmidids=\"\";\n\t\t\t\t\tfor (var i=0;i < index.length;i++)\n\t\t\t\t\t{\n\t\t\t\t\n\t\t\t\t\tcontext = this._oSmartTable.getContextByIndex(index[i]); \t\n\t\t\t\t\tpath = context.getPath();\n\t\t\t\t\tindexOfParentheses1 = path.indexOf(\"(\");\n\t\t\t\t\tindexOfParentheses2 = path.indexOf(\")\");\n\t\t\t\t\tgmidids+=path.substring(indexOfParentheses1 + 1,indexOfParentheses2);\n\t\t\t\t\tgmidids+=\",\";\n\t\t\t\t\t// navigate to multiple edit page\n\t\t\t\t\t}\n\t\t\t\t\tgmidids = gmidids.substring(0, gmidids.length - 1);\n\t\t\t\t\t//path = context.getPath();\n\t\t\t\t\t//indexOfParentheses1 = path.indexOf(\"(\");\n\t\t\t\t\t//indexOfParentheses2 = path.indexOf(\")\");\n\t\t\t\t\t// navigate to multiple edit page\n\t\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"editAttributesMultiple\",{\n\t\t\t\t\t\t editAttributesIDs : gmidids\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tMessageBox.alert(\"Please select one GMID - Country record for edit.\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n  \t});\n});",
		"bam/controller/EditAttributesMultiple.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"sap/ui/model/resource/ResourceModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/core/routing/History\",\n\t\t\"bam/services/DataContext\"\n\t], function (Controller, JSONModel, MessageToast, MessageBox, ResourceModel,Filter,History,DataContext) {\n\t\t\"use strict\";\n\t\t\n\tvar attributeList = [];\n\tvar loggedInUserID;\n\treturn Controller.extend(\"bam.controller.EditAttributesMultiple\", {\n\t\tonInit : function () {\n\t\t\t\n\t\t\t// Get logged in user id\n\t\t\tloggedInUserID = DataContext.getUserID();\n\t\t\t\t\n\t    \t//\tCreate model and set it to initial data\n\t    \tvar oModel = new sap.ui.model.json.JSONModel();\n\t    \tthis.getView().setModel(oModel);\n\t    \t\n\t    \tvar curr = this;\n\t    \tvar promise = new Promise(function(resolve, reject) {\n\t\t\t\t\tDataContext.getAttributeListBasedOnUserID()\n\t\t\t\t\t.then(function(data) {\n\t\t\t\t\t\tattributeList = data;\n\t\t\t\t\t\t// code to show/hide the controls on the UI\n\t\t\t\t\t\tcurr.setVMForControlVisibility();\n\t\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tthis._oDataModel = new sap.ui.model.odata.ODataModel(\"/ODataService/BAMDataService.xsodata/\", true);\n\t\t\t\t\n\t\t    //\tBind Stored Currency dropdown\n\t\t\t//\tCreate a filter & sorter array\n\t\t\tvar storedcurrencyFilterArray = [];\n\t\t\tvar storedcurrencyFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"CURRENCY\");\n\t\t\tstoredcurrencyFilterArray.push(storedcurrencyFilter);\n\t\t\tvar storedcurrencySortArray = [];\n\t\t\tvar storedcurrencySort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\tstoredcurrencySortArray.push(storedcurrencySort);\n\t\t\t// Get the Stored Currency dropdown list from the CODE_MASTER table\n\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\tfilters: storedcurrencyFilterArray,\n\t\t\t\tsorters: storedcurrencySortArray,\n\t\t\t\tasync: false,\n\t\t        success: function(oData, oResponse){\n\t\t        \t// add empty item on top of the list\n\t\t            oData.results.unshift({\t\"ID\":-1,\n\t\t            \t\t\t\t\t\t\"LABEL\":\"\"});\n\t\t\t        // Bind the Stored Currency data list to view model\n\t\t\t        oModel.setProperty(\"/STORED_CURRENCY_LIST\",oData.results);\n\t\t        },\n\t\t    \terror: function(){\n\t\t            MessageToast.show(\"Unable to retrieve currencies.\");\n\t\t    \t}\n\t\t    });\n\t\t    \t\t\n\t\t    // Bind IBP Relavancy dropdown\n\t\t\t// Create a filter & sorter array\n\t\t\tvar ibprelevancyFilterArray = [];\n\t\t\tvar ibprelevancyFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"IBP_RELEVANCY\");\n\t\t\tibprelevancyFilterArray.push(ibprelevancyFilter);\n\t\t\tvar ibprelevancySortArray = [];\n\t\t\tvar ibprelevancySort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\tibprelevancySortArray.push(ibprelevancySort);\n\t\t\t// Get the IBP Relevancy dropdown list from the CODE_MASTER table\n\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\tfilters: ibprelevancyFilterArray,\n\t\t\t\tsorters: ibprelevancySortArray,\n\t\t\t\tasync: false,\n\t\t        success: function(oData, oResponse){\n\t\t         \t// add empty item on top of the list\n\t\t            oData.results.unshift({\t\"ID\":-1,\n\t\t           \t\t\t\t\t\t\t\"LABEL\":\"\"});\n\t\t           \t// Bind the IBP Relevancy data list to view model\n\t\t\t        oModel.setProperty(\"/IBP_RELEVANCY_LIST\",oData.results);\n\t\t        },\n\t\t    \terror: function(){\n\t\t        \tMessageToast.show(\"Unable to retrieve IBP Relevancy data.\");\n\t\t    \t}\n\t\t    });\n\t\t    \t\t\n\t\t    // Bind Netting Default dropdown\n\t\t\t// Create a filter & sorter array\n\t\t\tvar nettingdefaultFilterArray = [];\n\t\t\tvar nettingdefaultFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"NETTING_DEFAULT\");\n\t\t\tnettingdefaultFilterArray.push(nettingdefaultFilter);\n\t\t\tvar nettingdefaultSortArray = [];\n\t\t\tvar nettingdefaultSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\tnettingdefaultSortArray.push(nettingdefaultSort);\n\t\t\t// Get the Netting Default dropdown list from the CODE_MASTER table\n\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\tfilters: nettingdefaultFilterArray,\n\t\t\t\tsorters: nettingdefaultSortArray,\n\t\t\t\tasync: false,\n\t\t        success: function(oData, oResponse){\n\t\t            // add empty item on top of the list\n\t\t             oData.results.unshift({\"ID\":-1,\n\t\t              \t\t\t\t\t\t\"LABEL\":\"\"});\n\t\t\t        // Bind the Netting Default list to view model\n\t\t\t        oModel.setProperty(\"/NETTING_DEFAULT_LIST\",oData.results);\n\t\t        },\n\t\t    \terror: function(){\n\t\t            MessageToast.show(\"Unable to retrieve netting default data.\");\n\t\t    \t}\n\t\t   \t});\n\t\t    \t\t\n\t\t    // Bind Quadrant dropdown\n\t\t\t// Create a filter & sorter array\n\t\t\tvar quadrantFilterArray = [];\n\t\t\tvar quadrantFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"QUADRANT\");\n\t\t\tquadrantFilterArray.push(quadrantFilter);\n\t\t\tvar quadrantSortArray = [];\n\t\t\tvar quadrantSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\tquadrantSortArray.push(quadrantSort);\n\t\t\t// Get the Quadrant dropdown list from the CODE_MASTER table\n\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\tfilters: quadrantFilterArray,\n\t\t\t\tsorters: quadrantSortArray,\n\t\t\t\tasync: false,\n\t\t        success: function(oData, oResponse){\n\t\t        \t// add empty item on top of the list\n\t\t            oData.results.unshift({\t\"ID\":-1,\n\t\t              \t\t\t\t\t\t\"LABEL\":\"\"});\n\t\t\t        // Bind the Quadrant data list to view model\n\t\t\t        oModel.setProperty(\"/QUADRANT_LIST\",oData.results);\n\t\t        },\n\t\t    \terror: function(){\n\t\t        \tMessageToast.show(\"Unable to retrieve quadrant data.\");\n\t\t    \t}\n\t\t    });\n\t\t    \t\t\n\t\t    // Bind Channel dropdown\n\t\t\t// Create a filter & sorter array\n\t\t\tvar channelFilterArray = [];\n\t\t\tvar channelFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"CHANNEL\");\n\t\t\tchannelFilterArray.push(channelFilter);\n\t\t\tvar channelSortArray = [];\n\t\t\tvar channelSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\tchannelSortArray.push(channelSort);\n\t\t\t// Get the Channel dropdown list from the CODE_MASTER table\n\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\tfilters: channelFilterArray,\n\t\t\t\tsorters: channelSortArray,\n\t\t\t\tasync: false,\n\t\t        success: function(oData, oResponse){\n\t\t            // add empty item on top of the list\n\t\t            oData.results.unshift({\t\"ID\":-1,\n\t\t            \t\t\t\t\t\t\"LABEL\":\"\"});\n\t\t\t        // Bind the Channel data list to view model\n\t\t\t        oModel.setProperty(\"/CHANNEL_LIST\",oData.results);\n\t\t        },\n\t\t    \terror: function(){\n\t\t        \tMessageToast.show(\"Unable to retrieve channel data.\");\n\t\t    \t}\n\t\t    });\n\t\t    \t\t\n\t\t    // Bind Market Default dropdown\n\t\t\t// Create a filter & sorter array\n\t\t\tvar marketdefaultFilterArray = [];\n\t\t\tvar marketdefaultFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"MARKET_DEFAULT\");\n\t\t\tmarketdefaultFilterArray.push(marketdefaultFilter);\n\t\t\tvar marketdefaultSortArray = [];\n\t\t\tvar marketdefaultSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\tmarketdefaultSortArray.push(marketdefaultSort);\n\t\t\t// Get the Market Default dropdown list from the CODE_MASTER table\n\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\tfilters: marketdefaultFilterArray,\n\t\t\t\tsorters: marketdefaultSortArray,\n\t\t\t\tasync: false,\n\t\t        success: function(oData, oResponse){\n\t\t        \t// add empty item on top of the list\n\t\t        \toData.results.unshift({\t\"ID\":-1,\n\t\t        \t\t\t\t\t\t\t\"LABEL\":\"\"});\n\t\t\t    \t// Bind the Market Default data list to view model\n\t\t\t    \toModel.setProperty(\"/MARKET_DEFAULT_LIST\",oData.results);\n\t\t        },\n\t\t    \terror: function(){\n\t\t           \tMessageToast.show(\"Unable to retrieve market default data.\");\n\t\t    \t}\n\t\t    });\n\t\t    \t\n\t\t    // Bind Supply System Flag dropdown\n\t\t\t// Create a filter & sorter array\n\t\t\tvar supplySystemFilterArray = [];\n\t\t\tvar supplySystemFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"SUPPLY_SYSTEM_FLAG\");\n\t\t\tsupplySystemFilterArray.push(supplySystemFilter);\n\t\t\tvar supplySystemSortArray = [];\n\t\t\tvar supplySystemSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\tsupplySystemSortArray.push(supplySystemSort);\n\t\t\t// Get the Supply System Flag dropdown list from the CODE_MASTER table\n\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\tfilters: supplySystemFilterArray,\n\t\t\t\tsorters: supplySystemSortArray,\n\t\t\t\tasync: false,\n\t\t        success: function(oData, oResponse){\n\t\t        \t// add empty item on top of the list\n\t\t            oData.results.unshift({\t\"ID\":-1,\n\t\t            \t\t\t\t\t\t\"LABEL\":\"\"});\n\t\t\t        // Bind the Support System data list to view model\n\t\t\t        oModel.setProperty(\"/SUPPORT_SYSTEM_FLAG_LIST\",oData.results);\n\t\t        },\n\t\t    \terror: function(){\n\t\t            MessageToast.show(\"Unable to retrieve supply system flag data.\");\n\t\t    \t}\n\t\t    });\n\t\t    \t\n\t\t \t// assign VM and VM data to a global variable for the page\n\t\t\tthis._oGMIDShipToCountryUpdViewModel = oModel;            \n\t\t\tthis._oViewModelData = this._oGMIDShipToCountryUpdViewModel.getData();\n\t\t\t\t\n\t\t    //attach _onRouteMatched to be called everytime on navigation to Edit Attributes Multiple page\n\t\t\tvar oRouter = this.getRouter();\n\t\t\toRouter.getRoute(\"editAttributesMultiple\").attachMatched(this._onRouteMatched, this);\n\t\t},\n\t\tgetRouter : function () {\n\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t},\n\t\t//\tget the paramter values and set the view model according to it\n\t\t_onRouteMatched : function (oEvent) {\n\t\t\t// If the user does not exist in the BAM database, redirect them to the denied access page\n\t\t\tif(DataContext.isBAMUser() === false)\n\t\t\t{\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"accessDenied\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setPageToInitialState();\n\t\t\t\tvar editAttributesIDs = oEvent.getParameter(\"arguments\").editAttributesIDs.split(\",\");\n\t\t\t\tthis.setGMIDCountryDefaultVM(editAttributesIDs);\n\t\t\t}\n\t\t},\n\t\tshowControl: function(value){\n\t\t\t\treturn !!value;\n\t\t},\n\t\t// add properties in view model to set the visibility of controls on basis of the user role\n\t\tsetVMForControlVisibility: function(){\n\t\t\t\tvar oModel = this._oGMIDShipToCountryUpdViewModel;\n\t\t\t\t//set the control show/hide values\n\t\t    \toModel.setProperty(\"/SHOW_CURRENCY\",this.checkPermission('CURRENCY'));\n\t\t\t    oModel.setProperty(\"/SHOW_IBP_RELEVANCY\",this.checkPermission('IBP_RELEVANCY'));\n\t\t\t    oModel.setProperty(\"/SHOW_NETTING_DEFAULT\",this.checkPermission('NETTING_DEFAULT'));\n\t\t\t    oModel.setProperty(\"/SHOW_QUADRANT\",this.checkPermission('QUADRANT'));\n\t\t\t    oModel.setProperty(\"/SHOW_CHANNEL\",this.checkPermission('CHANNEL'));\n\t\t\t    oModel.setProperty(\"/SHOW_MARKET_DEFAULT\",this.checkPermission('MARKET_DEFAULT'));\n\t\t\t    oModel.setProperty(\"/SHOW_SUPPLY_SYSTEM_FLAG\",this.checkPermission('SUPPLY_SYSTEM'));\n\t\t\t    oModel.setProperty(\"/SHOW_DEMAND_ATTRIBUTE1\",this.checkPermission('DEMAND_ATTRIBUTE1'));\n\t\t\t    oModel.setProperty(\"/SHOW_DEMAND_ATTRIBUTE2\",this.checkPermission('DEMAND_ATTRIBUTE2'));\n\t\t\t    oModel.setProperty(\"/SHOW_MARKETING_ATTRIBUTE1\",this.checkPermission('MARKETING_ATTRIBUTE1'));\n\t\t\t    oModel.setProperty(\"/SHOW_MARKETING_ATTRIBUTE2\",this.checkPermission('MARKETING_ATTRIBUTE2'));\n\t\t\t    oModel.setProperty(\"/SHOW_SUPPLY_ATTRIBUTE1\",this.checkPermission('SUPPLY_ATTRIBUTE1'));\n\t\t\t\toModel.setProperty(\"/SHOW_SUPPLY_ATTRIBUTE2\",this.checkPermission('SUPPLY_ATTRIBUTE2'));\t\n\t\t},\n\t\tcheckPermission: function(attribute){\n\t\t\t\treturn attributeList.includes(attribute);\n\t\t},\n\t\t// set the default view model for multiple GMID Country combinations' edit page\n\t\tsetGMIDCountryDefaultVM: function(editAttributesIDs){\n\t\t\tvar initData = [];\n\t\t\tfor (var i = 0; i < editAttributesIDs.length; i++) {\n\t    \t\tinitData.push({\n\t    \t\t\tID:editAttributesIDs[i]\n\t    \t\t});\n\t\t\t}\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/EDIT_ATTRIBUTES_ID_LIST\",initData);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/CURRENCY_CODE_ID\", -1);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/IBP_RELEVANCY_CODE_ID\",  -1);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/NETTING_DEFAULT_CODE_ID\", -1);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/QUADRANT_CODE_ID\", -1);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/CHANNEL_CODE_ID\", -1);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/MARKET_DEFAULT_CODE_ID\", -1);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/SUPPLY_SYSTEM_FLAG_CODE_ID\",  -1);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/DEMAND_ATTRIBUTE1\",  undefined);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/NULLIFY_DEMAND_ATTRIBUTE1\",  false);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/DEMAND_ATTRIBUTE2\", undefined);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/NULLIFY_DEMAND_ATTRIBUTE2\",  false);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/MARKETING_ATTRIBUTE1\", undefined);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/NULLIFY_MARKETING_ATTRIBUTE1\",  false);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/MARKETING_ATTRIBUTE2\", undefined);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/NULLIFY_MARKETING_ATTRIBUTE2\",  false);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/SUPPLY_ATTRIBUTE1\", undefined);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/NULLIFY_SUPPLY_ATTRIBUTE1\",  false);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/SUPPLY_ATTRIBUTE2\", undefined);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/NULLIFY_SUPPLY_ATTRIBUTE2\",  false);\n\t\t\tthis._oGMIDShipToCountryUpdViewModel.setProperty(\"/GMID_COUNTRY_COUNT\",editAttributesIDs.length);\n\t\t},\n\t\t//set the page to initial state\n\t\t//clear the value state and value state text for all controls\n\t\tsetPageToInitialState: function(){\n\t\t\tthis.getView().byId(\"ddlStoredCurrency\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"ddlStoredCurrency\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"ddlIBPRelevancyFlag\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"ddlIBPRelevancyFlag\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"ddlNettingDefaultFlag\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"ddlNettingDefaultFlag\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"ddlQuadrant\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"ddlQuadrant\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"ddlChannel\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"ddlChannel\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"ddlMarketDefaultFlag\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"ddlMarketDefaultFlag\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"ddlSupportSystemFlag\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"ddlSupportSystemFlag\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"txtDemandAtt1\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"txtDemandAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"txtDemandAtt1\").setEnabled(true);          \n\t\t\tthis.getView().byId(\"txtDemandAtt2\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"txtDemandAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"txtDemandAtt2\").setEnabled(true);     \n\t\t\tthis.getView().byId(\"txtMktAtt1\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"txtMktAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"txtMktAtt1\").setEnabled(true);     \n\t\t\tthis.getView().byId(\"txtMktAtt2\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"txtMktAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"txtMktAtt2\").setEnabled(true);     \n\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setEnabled(true);     \n\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setValueStateText(\"\");\n\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setEnabled(true);   \n\t\t},\n\t\t// update textbox attributes to empty if remove value check box is checked\n\t\tonChecked : function(oEvent) {\n\t\t\tvar sourceControlName = oEvent.getSource().getName();\n\t\t\tvar isChecked = oEvent.getParameter(\"selected\");\n\t\t\t// if check box is checked then clear the value of the attributes else dont do anything\n\t\t\t// depending on Id clear the text areas of the attributes\n\t\t\tif (sourceControlName === \"chkDemandAtt1\")\n\t\t\t{\t\n\t\t\t\tif(isChecked){\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt1\").setValue(undefined);\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt1\").setEnabled(false);\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt1\").setValueState(sap.ui.core.ValueState.Warning);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt1\").setEnabled(true);\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(sourceControlName === \"chkDemandAtt2\")\n\t\t\t{\n\t\t\t\tif(isChecked){\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt2\").setValue(undefined);\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt2\").setEnabled(false);\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt2\").setValueState(sap.ui.core.ValueState.Warning);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt2\").setEnabled(true);\n\t\t\t\t\tthis.getView().byId(\"txtDemandAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(sourceControlName === \"chkMktAtt1\")\n\t\t\t{\n\t\t\t\tif(isChecked){\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt1\").setValue(undefined);\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt1\").setEnabled(false);\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt1\").setValueState(sap.ui.core.ValueState.Warning);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt1\").setEnabled(true);\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(sourceControlName === \"chkMktAtt2\")\n\t\t\t{\n\t\t\t\tif(isChecked){\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt2\").setValue(undefined);\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt2\").setEnabled(false);\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt2\").setValueState(sap.ui.core.ValueState.Warning);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt2\").setEnabled(true);\n\t\t\t\t\tthis.getView().byId(\"txtMktAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(sourceControlName === \"chkSupplyAtt1\")\n\t\t\t{\n\t\t\t\tif(isChecked){\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setValue(undefined);\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setEnabled(false);\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setValueState(sap.ui.core.ValueState.Warning);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setEnabled(true);\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(sourceControlName === \"chkSupplyAtt2\")\n\t\t\t{\n\t\t\t\tif(isChecked){\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setValue(undefined);\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setEnabled(false);\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setValueState(sap.ui.core.ValueState.Warning);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setEnabled(true);\n\t\t\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonChange: function(oEvent){\n\t\t\tvar sourceControl = oEvent.getSource();\n\t\t\tvar sourceControlName = oEvent.getSource().getName();\n\t\t\t// call the method to check if any of the attribute value has been updated \n\t\t\tif (this.validateAttributeValueChange(sourceControlName)){\n\t\t\t\t// if true set the value state to warning to highlight the change to the user\n\t\t\t\tsourceControl.setValueStateText(\"Attribute value changed\");\n\t\t\t\tsourceControl.setValueState(sap.ui.core.ValueState.Warning);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// if false set the value state to none to remove highlight from the control\n\t\t\t\tsourceControl.setValueStateText(\"\");\n\t\t\t\tsourceControl.setValueState(sap.ui.core.ValueState.None);\n\t\t\t}\n\t\t},\n\t\t//validate if the value of various attributes has been updated\n\t\tvalidateAttributeValueChange: function (sourceControlName){\n\t\t\tvar type = sourceControlName.substring(0,3);\n\t\t\tif((type === \"ddl\" && this.getView().byId(sourceControlName).getSelectedKey() !== \"-1\") || (type === \"txt\" && this.getView().byId(sourceControlName).getValue().trim() !== \"\")){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t//get the list of updated attributes in string format\n\t\tgetUpdatedAttributes: function(){\n\t\t\t// get the crop protection and seeds value from i18n file\n\t    \tvar oi18nModel = this.getView().getModel(\"i18n\");\n\t\t\tvar updatedAttributesString = \"\";\n\t\t\tif (this.validateAttributeValueChange(\"ddlStoredCurrency\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"storedCurrency\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.validateAttributeValueChange(\"ddlIBPRelevancyFlag\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"ibpRelevancy\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.validateAttributeValueChange(\"ddlNettingDefaultFlag\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"nettingDefault\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.validateAttributeValueChange(\"ddlQuadrant\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"quadrant\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.validateAttributeValueChange(\"ddlChannel\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"channel\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.validateAttributeValueChange(\"ddlMarketDefaultFlag\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"marketDefault\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.validateAttributeValueChange(\"ddlSupportSystemFlag\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"supplySystemFlag\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.getView().byId(\"chkDemandAtt1\").getSelected() || this.validateAttributeValueChange(\"txtDemandAtt1\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"demandAtt1\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.getView().byId(\"chkDemandAtt2\").getSelected() || this.validateAttributeValueChange(\"txtDemandAtt2\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"demandAtt2\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.getView().byId(\"chkMktAtt1\").getSelected() || this.validateAttributeValueChange(\"txtMktAtt1\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"mktAtt1\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.getView().byId(\"chkMktAtt2\").getSelected() || this.validateAttributeValueChange(\"txtMktAtt2\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"mktAtt2\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.getView().byId(\"chkSupplyAtt1\").getSelected() || this.validateAttributeValueChange(\"txtSupplyAtt1\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"supplyAtt1\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\tif (this.getView().byId(\"chkSupplyAtt2\").getSelected() || this.validateAttributeValueChange(\"txtSupplyAtt2\")){\n\t\t\t\tupdatedAttributesString += oi18nModel.getProperty(\"supplyAtt2\");\n\t\t\t\tupdatedAttributesString += \", \";\n\t\t\t}\n\t\t\treturn updatedAttributesString.substring(0, updatedAttributesString.length - 2);\n\t\t},\n\t\t//click of submit button\n\t\tonSubmit: function(){\n\t\t\tvar curr = this;\n\t\t\t// Check if any Attributes have the comma or semicolon,\n\t\t\t// need to show message to use if either of these ( , or ;) are entered\n\t\t    //get the list of updated attributes where special characters are entered\n\t\t   var invalidCharUpdatedAttributes = curr.getInvalidCharUpdatedAttributes();\n\t  \t   if (invalidCharUpdatedAttributes !== \"\")\n\t        {\n\t        \tMessageBox.alert(\"Special characters comma and semi-colon are not allowed in \" + invalidCharUpdatedAttributes + \".\",\n\t\t        \t{\n\t\t        \t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\ttitle : \"Error\"\n\t\t        \t});\n\t\t        \treturn;\n\t        }\n\t\t\t//get the list of updated attributes\n\t\t\tvar updatedAttributesList = curr.getUpdatedAttributes();\n\t\t\t// check if there are any changes to be updated\n\t\t\tif (updatedAttributesList !== \"\"){\n\t\t\t\t// check if user wants to update the attributes for GMID and country\n\t\t\t\tMessageBox.confirm((updatedAttributesList + \" attributes will be updated for \" + curr._oViewModelData.GMID_COUNTRY_COUNT + \" GMID Country combinations. Continue?\"), {\n\t    \t\t\ticon: sap.m.MessageBox.Icon.WARNING,\n\t    \t\t\tactions: [sap.m.MessageBox.Action.YES, sap.m.MessageBox.Action.NO],\n\t          \t\tonClose: function(oAction) {\n\t          \t\t\tvar editAttrIDList = curr._oViewModelData.EDIT_ATTRIBUTES_ID_LIST;\n\t        \t\t\tcurr.fnCallbackSubmitConfirm(oAction, editAttrIDList);\n\t            \t}\n\t       \t\t});\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// check if user wants to update the attributes for GMID and country\n\t\t\t\tMessageBox.alert(\"There are no pending changes\", {\n\t    \t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\ttitle : \"Error\"\n\t       \t\t});\n\t\t\t}\n\t\t},\n\t\t  //get the list of  attributes in string format where invalid characters has been entered\n\t\t\tgetInvalidCharUpdatedAttributes: function(){\n\t\t\t\t// get the crop protection and seeds value from i18n file\n\t\t    \tvar oi18nModel = this.getView().getModel(\"i18n\");\n\t\t\t\tvar invalidCharacterAttributesString = \"\";\n\t\t\t\tif (this.getView().byId(\"txtDemandAtt1\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtDemandAtt1\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"demandAtt1\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtDemandAtt2\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtDemandAtt2\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"demandAtt2\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtMktAtt1\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtMktAtt1\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"mktAtt1\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtMktAtt2\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtMktAtt2\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"mktAtt2\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtSupplyAtt1\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtSupplyAtt1\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"supplyAtt1\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtSupplyAtt2\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtSupplyAtt2\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"supplyAtt2\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\treturn invalidCharacterAttributesString.substring(0, invalidCharacterAttributesString.length - 2);\n\t\t\t},\n\t\t//create object of updated attributes only\n\t\tcreateUpdateObject: function(){\n\t\t\t// Create current timestamp\n\t\t\tvar oDate = new Date();\n\t\t\tvar updGMIDCountry = {\n\t\t\t    \t\tLAST_UPDATED_BY: loggedInUserID,\n\t\t\t\t\t    LAST_UPDATED_ON: oDate\n\t\t\t    \t};\n\t\t\tif(this._oViewModelData.CURRENCY_CODE_ID != -1){\n\t\t\t   \tupdGMIDCountry.CURRENCY_CODE_ID = parseInt(this._oViewModelData.CURRENCY_CODE_ID,10);\n\t\t\t}\n\t\t\tif(this._oViewModelData.IBP_RELEVANCY_CODE_ID != -1){\n\t\t\t   \tupdGMIDCountry.IBP_RELEVANCY_CODE_ID = parseInt(this._oViewModelData.IBP_RELEVANCY_CODE_ID,10);\n\t\t\t}\n\t\t\tif(this._oViewModelData.NETTING_DEFAULT_CODE_ID != -1){\n\t\t\t   \tupdGMIDCountry.NETTING_DEFAULT_CODE_ID = parseInt(this._oViewModelData.NETTING_DEFAULT_CODE_ID,10);\n\t\t\t}\n\t\t\tif(this._oViewModelData.QUADRANT_CODE_ID != -1){\n\t\t\t   \tupdGMIDCountry.QUADRANT_CODE_ID = parseInt(this._oViewModelData.QUADRANT_CODE_ID,10);\n\t\t\t}\n\t\t\tif(this._oViewModelData.CHANNEL_CODE_ID != -1){\n\t\t\t   \tupdGMIDCountry.CHANNEL_CODE_ID = parseInt(this._oViewModelData.CHANNEL_CODE_ID,10);\n\t\t\t}\n\t\t\tif(this._oViewModelData.MARKET_DEFAULT_CODE_ID != -1){\n\t\t\t   \tupdGMIDCountry.MARKET_DEFAULT_CODE_ID = parseInt(this._oViewModelData.MARKET_DEFAULT_CODE_ID,10);\n\t\t\t}\n\t\t\tif(this._oViewModelData.SUPPLY_SYSTEM_FLAG_CODE_ID != -1){\n\t\t\t   \tupdGMIDCountry.SUPPLY_SYSTEM_FLAG_CODE_ID = parseInt(this._oViewModelData.SUPPLY_SYSTEM_FLAG_CODE_ID,10);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.getView().byId(\"chkDemandAtt1\").getSelected()){\n\t\t\t\tupdGMIDCountry.DEMAND_ATTRIBUTE1 = null;\n\t\t\t}\n\t\t\telse if(this._oViewModelData.DEMAND_ATTRIBUTE1 !== undefined){    \n\t\t\t\tupdGMIDCountry.DEMAND_ATTRIBUTE1 = this._oViewModelData.DEMAND_ATTRIBUTE1;\n\t\t\t}\n\t\t\t\n\t\t\tif(this.getView().byId(\"chkDemandAtt2\").getSelected()){\n\t\t\t\tupdGMIDCountry.DEMAND_ATTRIBUTE2 = null;\n\t\t\t} \n\t\t\telse if (this._oViewModelData.DEMAND_ATTRIBUTE2 !== undefined){\n\t\t\t    updGMIDCountry.DEMAND_ATTRIBUTE2 = this._oViewModelData.DEMAND_ATTRIBUTE2;\n\t\t\t}\n\t\t\t\n\t\t\tif(this.getView().byId(\"chkMktAtt1\").getSelected()){\n\t\t\t\tupdGMIDCountry.MARKETING_ATTRIBUTE1 = null;\n\t\t\t}\n\t\t\telse if (this._oViewModelData.MARKETING_ATTRIBUTE1 !== undefined){\n\t\t\t    updGMIDCountry.MARKETING_ATTRIBUTE1 = this._oViewModelData.MARKETING_ATTRIBUTE1;\n\t\t\t}  \n\t\t\t\n\t\t\tif(this.getView().byId(\"chkMktAtt2\").getSelected()){\n\t\t\t\tupdGMIDCountry.MARKETING_ATTRIBUTE2 = null;\n\t\t\t}\n\t\t\telse if (this._oViewModelData.MARKETING_ATTRIBUTE2 !== undefined){\n\t\t\t    updGMIDCountry.MARKETING_ATTRIBUTE2 = this._oViewModelData.MARKETING_ATTRIBUTE2;\n\t\t\t}\n\t\t\t\n\t\t\tif(this.getView().byId(\"chkSupplyAtt1\").getSelected()){\n\t\t\t\tupdGMIDCountry.SUPPLY_ATTRIBUTE1 = null;\n\t\t\t}\n\t\t\telse if (this._oViewModelData.SUPPLY_ATTRIBUTE1 !== undefined){\n\t\t\t    updGMIDCountry.SUPPLY_ATTRIBUTE1 = this._oViewModelData.SUPPLY_ATTRIBUTE1;\n\t\t\t}\n\t\t\t\n\t\t\tif(this.getView().byId(\"chkSupplyAtt2\").getSelected()){\n\t\t\t\tupdGMIDCountry.SUPPLY_ATTRIBUTE2 = null;\n\t\t\t}\n\t\t\telse if (this._oViewModelData.SUPPLY_ATTRIBUTE2 !== undefined){  \n\t\t\t    updGMIDCountry.SUPPLY_ATTRIBUTE2 = this._oViewModelData.SUPPLY_ATTRIBUTE2;\n\t\t\t}\n\t\t\t\n\t\t\t//return the object of updated attributes\n\t\t\treturn updGMIDCountry;\n\t\t},\n\t\t// update the attributes based on user response\n\t\tfnCallbackSubmitConfirm: function(oAction, editAttrIDList){\n\t\t\tvar curr = this;\n\t\t\tvar successUpdate = true;\n\t\t\tvar successCount = 0;\n\t\t\tvar updGMIDCountry = curr.createUpdateObject();\n\t\t\t//if user confirmed to update the attributes, prepare the object and update the attributes for the GMID and country\n\t\t\t//else do nothing\n\t\t\tif (oAction === \"YES\") \n\t\t\t{\n\t\t\t\t// create a batch array and push each updated GMID to it\n\t\t\t\tvar batchArray = [];\n\t\t\t\tfor(var i = 0; i < editAttrIDList.length; i++) \n\t\t\t    {\n\t\t\t    \tbatchArray.push(this._oDataModel.createBatchOperation(\"GMID_SHIP_TO_COUNTRY(\" + editAttrIDList[i].ID + \")\", \"MERGE\", updGMIDCountry));\n\t\t\t    \tsuccessCount++;\n\t\t\t\t}\n\t\t\t\tthis._oDataModel.addBatchChangeOperations(batchArray);\n\t\t\t\t\n\t\t\t\t// creating busy dialog lazily\n\t\t\t\tif (!this._busyDialog) \n\t\t\t\t{\n\t\t\t\t\tthis._busyDialog = sap.ui.xmlfragment(\"bam.view.BusyLoading\", this);\n\t\t\t\t\tthis.getView().addDependent(this._dialog);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// setting to a local variable since we are closing it in an oData success function that has no access to global variables.\n\t\t\t\tvar busyDialog = this._busyDialog;\n\t\t\t\tbusyDialog.open();\n\t\t\t\t\n\t\t\t\t// submit the batch update command\n\t\t\t\tthis._oDataModel.submitBatch(\n\t\t\t\t\tfunction(oData,oResponse)\n\t\t\t\t\t{\n\t\t\t\t\t\tbusyDialog.close();\n\t\t\t\t\t\tMessageBox.alert(\"Attributes for \" + successCount + \" GMID Country combinations updated successfully.\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.SUCCESS,\n\t\t\t\t\t\t\t\ttitle : \"Success\",\n\t\t\t\t\t\t\t\tonClose: function() {\n\t\t\t\t        \t\t\tcurr.getOwnerComponent().getRouter().navTo(\"maintainAttributes\");\n\t\t\t\t        \t}\n\t\t\t\t\t\t});\n\t\t\t    \t},\n\t\t\t    \tfunction(oError)\n\t\t\t    \t{\n\t\t\t    \t\tbusyDialog.close();\n\t\t    \t\t\tMessageBox.alert(\"Error updating attributes for GMID and Country combinations.\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t});\n\t\t\t    \t}\n\t\t\t    );\n\n\t\t\t\t\n\t\t\t}\n\t\t},\n\t\t//cancel click on edit attributes page\n\t\tonCancel: function(){\n\t\t\tvar curr = this;\n\t\t\t//get the list of updated attributes\n\t\t\tvar updatedAttributesList = curr.getUpdatedAttributes();\n\t\t\t// check if there are any changes to be updated\n\t\t\tif (updatedAttributesList !== \"\"){\n\t\t\t\t// check if user wants to update the attributes for GMID and country\n\t\t\t\tMessageBox.confirm(\"Are you sure you want to cancel your changes and navigate back to the previous page?\", {\n\t            \ticon: sap.m.MessageBox.Icon.WARNING,\n\t            \tactions: [sap.m.MessageBox.Action.YES, sap.m.MessageBox.Action.NO],\n\t            \tonClose: function(oAction) {\n\t            \t\tif(oAction === \"YES\"){\n\t            \t\t\tcurr.getOwnerComponent().getRouter().navTo(\"maintainAttributes\");\n\t            \t\t}\n\t            \t}\n\t        \t});\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcurr.getOwnerComponent().getRouter().navTo(\"maintainAttributes\");\n\t\t\t}\n\t\t},\n\t\t//navigate back from edit page\n\t\tonNavBack: function () {\n\t\t\tvar oHistory = History.getInstance();\n\t\t\tvar sPreviousHash = oHistory.getPreviousHash();\n\t\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\twindow.history.go(-1);\n\t\t\t} else {\n\t\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t\toRouter.navTo(\"maintainAttributes\", true);\n\t\t\t}\n\t\t}\n  \t});\n});",
		"bam/services/DataContext.js": "sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/core/routing/History\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\",\n\t\"sap/m/MessageToast\",\n\t\"sap/ui/model/resource/ResourceModel\",\n\t\"sap/m/MessageBox\"\n],function (Controller, History,Filter, FilterOperator,MessageToast,ResourceModel,MessageBox) {\n\t\n\t\tvar oDataModel = new sap.ui.model.odata.ODataModel(\"/ODataService/BAMDataService.xsodata/\", {\n\t\t\t\t\t\tjson: true,\n\t\t\t\t\t\ttokenHandling: true\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\tvar oi18nModel = new ResourceModel({\n                bundleName: \"bam.i18n.i18n\"\n            });\n\t\n\t\tfunction callService(url) {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\t$.get(url)\n\t\t\t\t.done(function(data) {\n\t\t\t\t\t// data.name returns the SID of the user\n\t\t\t\t\tresolve(data.name);\n\t\t\t\t})\n\t\t\t\t.fail(function(error) {\n\t\t\t\t\treject(error);\n\t\t\t\t});\t\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction getUserID()\n\t\t{\n\t\t\tvar result;\n\t\t\t$.ajax({\n\t\t\t    url : \"/services/userapi/currentUser\",\n\t\t\t    type : \"get\",\n\t\t\t    async: false,\n\t\t\t    success : function(data) {\n\t\t\t    \tif(data !== \"\" && data !== null)\n\t\t\t    \t{\n\t\t\t    \t\tresult = data.name;\n\t\t\t    \t}\n\t\t\t    \telse\n\t\t\t    \t{\n\t\t\t    \t\tresult = \"\";\n\t\t\t    \t}\n\t\t\t    \t\n\t\t\t    },\n\t\t\t    error: function() {\n\t\t\t    \tMessageBox.alert(\"Error getting user ID. Please contact System Admin.\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t});\n\t\t\t\t\tresult = \"\";\n\t\t\t    }\n\t\t\t});\n\t\t\t \n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t//function that checks whether the current logged in user should have access to BAM or not\n\t\tfunction isBAMUser()\n\t\t{\n\t\t\tvar result;\n\t\t\t$.ajax({\n\t\t\t    url : \"/services/userapi/currentUser\",\n\t\t\t    type : \"get\",\n\t\t\t    async: false,\n\t\t\t    success : function(data) {\n\t\t\t    \tif(data !== \"\" && data !== null)\n\t\t\t    \t{\n\t\t\t    \t\toDataModel.read(\"USER\", {\n\t\t\t\t\t\t\tasync: false,\n\t\t\t\t\t\t\tfilters: [ \n\t\t\t\t\t\t\t\tnew Filter(\"USER_ID\", FilterOperator.EQ, data.name)\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\t\t\t\tif(oData.results.length !== 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresult = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresult = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terror: function(oError) {\n\t\t\t\t\t\t\t\tMessageBox.alert(\"Error getting user information. Please contact System Admin.\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tresult = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\t\n\t\t\t    \t}\n\t\t\t    \telse\n\t\t\t    \t{\n\t\t\t    \t\tresult = false;\n\t\t\t    \t}\n\t\t\t    },\n\t\t\t    error: function() {\n\t\t\t    \tMessageBox.alert(\"Error getting user information. Please contact System Admin.\",\n\t\t\t\t\t{\n\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t});                       \n\t\t\t\t\tresult = false;\n\t\t\t    }\n\t\t\t});\n\t\t\t \n\t\t\treturn result;\n\t\t}\n\t\t\n\t\tfunction getUserMapping(userID) {\n\t    \treturn new Promise(function(resolve, reject) {\n\t            Promise.resolve()\n\t            .then(function() {\n\t\t\t\t\treturn new Promise(function(oDataResolve) {\n\t\t\t\t\t\toDataModel.read(\"V_USER_ROLE_ATTRIBUTE_MAPPING\", {\n\t\t\t\t\t\t\tfilters: [ \n\t\t\t\t\t\t\t\tnew Filter(\"USER_ID\", FilterOperator.EQ, userID)\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\t\t\t\toDataResolve(oData);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\t\n\t\t\t\t\t});\n\t            })\n\t            .then(function(data) {\n\t            \tvar attributeList = [];\n\t            \t\n\t            \t// get all the attributes for each row returned\n\t            \tdata.results.forEach(function(item) {\n\t            \t\tattributeList.push(item.ATTRIBUTE);\n\t            \t});\n\t            \t\t\n\t    \t\t\tresolve(attributeList);\n\t            })\n\t            .catch(function(error) {\n\t        \t\treject(error);\n\t        \t});\n\t        });\n    \t}\n    \t\n    \t// function to get user roles.  First gets the current user that's logged in \n    \tfunction getUserPermissions() {\n    \t\tvar result;\n    \t\t$.ajax({\n\t\t\t    url : \"/services/userapi/currentUser\",\n\t\t\t    type : \"get\",\n\t\t\t    async: false,\n\t\t\t    success : function(data) {\n\t\t\t    \toDataModel.read(\"V_USER_ROLE_ATTRIBUTE_MAPPING\", {\n\t\t\t\t\t\tasync: false,\n\t\t\t\t\t\tfilters: [ \n\t\t\t\t\t\t\tnew Filter(\"USER_ID\", FilterOperator.EQ, data.name)\n\t\t\t\t\t\t],\n\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\t\t\tvar permissionList = [];\n\t\t\t            \t\n\t\t\t            \t// get all the attributes for each row returned\n\t\t\t            \toData.results.forEach(function(item) {\n\t            \t\t\tpermissionList.push(item);\n\n\t\t\t            \t});\n\t\t\t            \t\n\t\t\t            \tresult = permissionList;\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function(oError) {\n\t\t\t\t\t\t\tMessageBox.alert(\"Error getting user roles. Please contact System Admin.\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresult = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\n\t\t\t    \n\t\t\t    },\n\t\t\t    error: function() {\n\t\t\t       MessageBox.alert(\"Error getting user roles. Please contact System Admin.\",\n\t\t\t\t\t{\n\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t});                       \n\t\t\t\t\tresult = [];\n\t\t\t    }\n\t\t\t });\n\t\t\t \n\t\t\treturn result;\n    \t}\n    \t\n\t\tfunction getAttributeListBasedOnUserID()\n\t\t{\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tvar oDataServiceURL = \"/services/userapi/currentUser\";\n\t\t\t\t\n\t\t\t\tcallService(oDataServiceURL)\n\t\t\t\t.then(getUserMapping)\n\t\t\t\t.then(function(attributeList) {\n\t\t\t\t\tresolve(attributeList);\t\n\t\t\t\t})\n\t\t\t\t.catch(function(error) {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction lpadstring(gmid)\n\t\t{\n\t\t\twhile (gmid.length < 8)\n        \t\tgmid = \"0\" + gmid;\n    \t\treturn gmid;\n\t\t}\n\t\t\n\t\t// function to get unique GMID/Country Combinations from DB\n    \tfunction getGMIDListFromDB(gmidList,viewpath) {\n            var result;                            \n            var gmidFilterArray = [];\n            gmidList.forEach(function(item) {\n\t            var gmidFilter = new Filter(\"GMID\",sap.ui.model.FilterOperator.EQ,item.GMID);\n\t            var gmidFilterList = new Filter ({\n                    filters : [\n                        gmidFilter\n                        ],\n                        and : true\n                    });\n\t            gmidFilterArray.push(gmidFilterList);\n            });\n            // Get data for all GMIDS Entered in UI\n            oDataModel.read(viewpath, {\n                filters: gmidFilterArray,\n                async: false,\n\t\t\t\tsuccess: function(oData, oResponse) {\n                    var GMIDCountryList = [];\n\t\t            // get all the GMID/Country List for each row returned\n\t\t            oData.results.forEach(function(item) {\n\t\t            GMIDCountryList.push(item);\n\t\t            });\n            \t\tresult = GMIDCountryList;\n                },\n                error: function(oError) {\n                    MessageBox.alert(\"Error getting GMID/Country List. Please contact System Admin.\",\n\t\t\t\t\t{\n\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t});    \n                    result = [];\n                }\n            });\n\t\t\treturn result;\n\t\t}\n\n\t\t\n\t\tfunction getMaxID(tablePath)\n\t\t{\n\t\t\t// Create a filter & sorter array to fetch the max ID\n\t\t\tvar idSortArray = [];\n\t\t\tvar idSort = new sap.ui.model.Sorter(\"ID\",true);\n\t\t\tidSortArray.push(idSort);\n\t\t\t\n\t\t\tvar maxID = null;\n\n\t\t\t // Get the Max ID from  GMID_SHIP_FROM_PLANT table\n\t\t\t oDataModel.read(tablePath + \"?$top=1&$select=ID\",{\n\t\t\t\t\tsorters: idSortArray,\n\t\t\t\t\tasync: false,\n\t                success: function(oData, oResponse){\n\t                \t//return the max ID\n\t                \tif(oData.results.length === 0){\n\t                \t\tmaxID = 0;\n\t                \t}\n\t                \telse {maxID = oData.results[0].ID; }\n\t                },\n\t    \t\t    error: function(){\n\t    \t\t    \tMessageBox.alert(\"Unable to retrieve max ID for GMID Ship from table. Please contact System Admin.\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t}); \n\t    \t\t\t}\n\t    \t\t});\n\t    \treturn maxID;\n\t\t}\n\t\t\n\t\tfunction deleteStagingData(loggedInUserID)\n\t\t{\n\t\t\tvar result;\n\t\t\t//making filter for user ID\n\t\t\tvar filterArray=[];\n\t    \tvar userFilter = new Filter(\"CREATED_BY\",sap.ui.model.FilterOperator.EQ,loggedInUserID);\n\t\t\tfilterArray.push(userFilter);\n\t\t\t\n\t\t\toDataModel.read(\"/GMID_SHIP_TO_COUNTRY_STG\",{\n\t\t\t\tfilters: filterArray,\n\t\t\t\tasync: false,\n                success: function(oData, oResponse){\n            \t\t// delete any records for this user from the staging table\n\t    \t    \t// get the count of records in staging table\n\t    \t    \tvar batchArray = [];\n\t    \t\t\tfor(var k = 0; k < oData.results.length; k++) \n\t    \t\t\t{\n\t    \t\t\t\t// delete the data from staging table i.e. GMID_SHIP_TO_COUNTYRY_STG\n\t    \t\t\t\tbatchArray.push(oDataModel.createBatchOperation(\"GMID_SHIP_TO_COUNTRY_STG(\" + oData.results[k].ID + \")\", \"DELETE\"));\n\t    \t\t\t}\n\t\t\t\t\toDataModel.addBatchChangeOperations(batchArray);\n\t\t\t\t\t\n\t\t\t\t   // submit the batch update command\n\t\t\t\t\toDataModel.submitBatch(\n\t\t\t\t\t\tfunction(oData,oResponse)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult = true;\n\t\t\t\t    \t},\n\t\t\t\t    \tfunction(oError)\n\t\t\t\t    \t{\n\t\t\t\t    \t\tresult = false;\n\t\t\t\t    \t\tMessageBox.alert(\"Unable to delete staging records for user. Please contact System Admin.\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t\t    \t}\n\t\t\t\t    );\n\t\t\t\t\t\n                },\n    \t\t    error: function(){\n    \t\t    \tresult = false;\n            \t\tMessageBox.alert(\"Unable to delete staging records for user. Please contact System Admin.\",\n\t\t\t\t\t{\n\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t});\n    \t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\t// \n\t\tfunction getDropdownValues(dropdownType)\n\t\t{\n\t\t\tvar result;\n\t\t\t// Create a filter & sorter array\n\t\t\tvar filterArray = [];\n\t\t\tvar countryFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,dropdownType);\n\t\t\tfilterArray.push(countryFilter);\n\t\t\tvar sortArray = [];\n\t\t\tvar sorter = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\tsortArray.push(sorter);\n\t\t\t// Get the Country dropdown list from the CODE_MASTER table\n\t\t\toDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\tfilters: filterArray,\n\t\t\t\t\tsorters: sortArray,\n\t\t\t\t\tasync: false,\n\t                success: function(oData, oResponse){\n\t                \t// add Please select item on top of the list\n\t\t                oData.results.unshift({\t\"ID\":-1,\n\t\t              \t\t\t\t\t\t\t\"LABEL\":\"Select...\"});\n\t\t                // Bind the Country data to the GMIDShipToCountry model\n\t\t                result =  oData.results;\n\t                },\n\t    \t\t    error: function(){\n    \t\t    \t\tMessageBox.alert(\"Unable to retrieve dropdown values for \" + dropdownType + \" Please contact System Admin.\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t});\n\t            \t\tresult = [];\n\t    \t\t\t}\n\t    \t});\n\t    \treturn result;\n\t\t}\n\t\t// below function will return the GMID Country Status ID from CODE_Master TABLE\n\t\tfunction getGMIDCountryStatusID()\n\t\t{\n\t\t\t// by default while creating the new GMID, the GMID Country Status will be Submitted\n        \t var ogmidcountryStatus = oi18nModel.getProperty(\"submitted\");\n    \t    \n\t\t\t// Create a filter to fetch the GMID Country Status Code ID\n\t\t\tvar gmidcountrycodeFilterArray = [];\n\t\t\tvar gmidcountrycodetypeFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"GMID_COUNTRY_STATUS\");\n\t\t\tgmidcountrycodeFilterArray.push(gmidcountrycodetypeFilter);\n\t\t\tvar gmidcountrycodekeyFilter = new Filter(\"CODE_KEY\",sap.ui.model.FilterOperator.EQ,ogmidcountryStatus);\n\t\t\tgmidcountrycodeFilterArray.push(gmidcountrycodekeyFilter);\n\t\t\t\n\t\t\tvar gmidcountrystatusID = null;\n\n\t\t\t// Get the GMID Country Status Code ID CODE_MASTER table\n\t\t\toDataModel.read(\"/CODE_MASTER?$select=ID\",{\n\t\t\t\t\tfilters: gmidcountrycodeFilterArray,\n\t\t\t\t\tasync: false,\n\t                success: function(oData, oResponse){\n\t                \t//return the Code ID\n\t                   gmidcountrystatusID = oData.results[0].ID; \n\t                },\n\t    \t\t    error: function(){\n    \t\t    \t\tMessageBox.alert(\"Unable to retrieve Code ID for GMID Country Status.\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t});\n\t    \t\t\t}\n\t    \t\t});\n\t    \treturn gmidcountrystatusID;\n\t\t}\n         \n\t\tvar exports = {\n\t\t\tgetAttributeListBasedOnUserID: getAttributeListBasedOnUserID,\n\t\t\tgetUserID: getUserID,\n\t\t\tgetGMIDListFromDB: getGMIDListFromDB,\n\t\t\tgetMaxID: getMaxID,\n\t\t\tgetUserPermissions: getUserPermissions,\n\t\t\tisBAMUser : isBAMUser,\n\t\t\tgetDropdownValues: getDropdownValues,\n\t\t\tdeleteStagingData: deleteStagingData,\n\t\t\tgetGMIDCountryStatusID: getGMIDCountryStatusID\n\t\t};\n\t\n\t\treturn exports;\n\n});",
		"bam/Component.js": "sap.ui.define([\n\t\"sap/ui/core/UIComponent\",\n\t\"sap/ui/Device\",\n\t\"bam/model/models\",\n\t\"bam/controller/SubmitConfirmDialog\"\n], function(UIComponent, Device, models,SubmitConfirmDialog) {\n\t\"use strict\";\n\n\treturn UIComponent.extend(\"bam.Component\", {\n\n\t\tmetadata: {\n\t\t\tmanifest: \"json\"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function() {\n\t\t\t// call the base component's init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t\n\t\t\t// create the views based on the url/hash\n\t\t\tthis.getRouter().initialize();\n\t\t\t\n\t\t\t// set dialog\n\t\t\tthis._submitConfirmDialog = new SubmitConfirmDialog(this.getAggregation(\"rootControl\"));\n\t\t},\n\t\t\n\t\topenSubmitConfirmDialog : function (view) {\n\t\t\tthis._submitConfirmDialog.open(view);\n\t\t}\n\t});\n});",
		"bam/view/MaintainAttributes.view.xml": "<core:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns:smartFilterBar=\"sap.ui.comp.smartfilterbar\" xmlns:smartTable=\"sap.ui.comp.smarttable\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\" controllerName=\"bam.controller.MaintainAttributes\" height=\"100%\">\n\t<App id=\"maintainAttributes\">\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\">\n\t\t\t\t<headerContent>\n\t\t\t\t\t<Button id=\"btnHome\" icon=\"sap-icon://home\" tooltip=\"{i18n>home}\" press=\"onHome\"/>\n\t\t\t\t</headerContent>\n\t\t\t\t<!-- use this to make the table occupy the available screen height -->\n\t\t\t\t<VBox fitContainer=\"true\">\n\t\t\t\t\t<Toolbar width=\"100%\" id=\"tlbrCustomControl\">\n\t\t\t\t\t    <content>\n\t\t\t\t\t    \t<Button id=\"btnEdit\" visible=\"{MaintainAttributesVM>/showEditButton}\" text=\"{i18n>edit}\" press=\"onEdit\" class=\"sapUiMediumMarginBegin\" icon=\"sap-icon://edit\" activeIcon=\"sap-icon://edit\"/>\n\t\t\t\t\t    </content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<smartTable:SmartTable id=\"smartTblBAMAttributes\" entitySet=\"V_MAINTAIN_ATTRIBUTES\" tableType=\"Table\" useExportToExcel=\"true\" useVariantManagement=\"true\" showFullScreenButton=\"true\" \n\t\t\t\t\tuseTablePersonalisation=\"true\" header=\"GMID Country Attributes\" showRowCount=\"true\" enableAutoBinding=\"true\" app:useSmartField=\"true\" class=\"sapUiResponsiveContentPadding\" ignoreFromPersonalisation=\"ID\"\n\t\t\t\t\tinitiallyVisibleFields=\"GMID_COUNTRY_STATUS,GMID,GMID_SHORTTEXT,COUNTRY,STORED_CURRENCY,IBP_RELEVANCY,NETTING_DEFAULT,QUADRANT,CHANNEL,MARKET_DEFAULT,SUPPLY_SYSTEM_FLAG,DEMAND_ATTRIBUTE1,DEMAND_ATTRIBUTE2,MARKETING_ATTRIBUTE1,MARKETING_ATTRIBUTE2,SUPPLY_ATTRIBUTE1,SUPPLY_ATTRIBUTE2,TRADE_PRODUCT_CODE,TRADE_PRODUCT_DESC,PLAN_PRODUCT_DESC,PROFIT_CENTER_DESC,PERFORMANCE_CENTER_DESC,VALUE_CENTER_DESC,SPECIFIED_MATERIAL_DESC,MASTER_SALES_SPEC_DESC,BRAND_NAME,TREATMENT,PACKAGE_TYPE,BGT_DESC,LOCAL_UOM,MATERIAL_STATUS,TRADE_AREA_DESC,SUB_RCU_DESC,RCU_DESC,CONS_DEFAULT_FLAG,MARKETING_MANAGER,MARKETING_DIRECTOR,DEMAND_MANAGER,GLOBAL_BUSINESS_LEADER,\n\t\t\t\t\t,SUPPLY_CHAIN_PLANNING_SPECIALIST,MARKETING_SPECIALIST,GLOBAL_SUPPLY_CHAIN_MANAGER,REG_SUPPLY_CHAIN_MANAGER,IBP_STATUS,IBP_RESPONSE_DESC,REQUESTED_BY,REQUESTED_DATE,LAST_UPDATED_BY,LAST_UPDATED_DATE\">\n\t\t\t\t\t\t<!-- layout data used to make the table growing but the filter bar fixed -->\n\t\t\t\t\t\t<smartTable:layoutData>\n\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\" baseSize=\"0%\"/>\n\t\t\t\t\t\t</smartTable:layoutData>\n\t\t\t\t\t</smartTable:SmartTable>\n\t\t\t\t<items/>\n\t\t\t\t</VBox>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</core:View>",
		"bam/view/PlantSelection.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:layout=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\" controllerName=\"bam.controller.PlantSelection\">\n\t<App id=\"gmidPlantSelection\">\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<headerContent>\n\t\t\t\t\t<Button id=\"btnHome\" icon=\"sap-icon://home\" tooltip=\"{i18n>home}\" press=\"onHome\"/>\n\t\t\t\t</headerContent>\n\t\t\t\t<content>\n\t\t\t\t<ScrollContainer horizontal=\"true\"> \n\t\t\t\t\t<Table noDataText=\"No records to display\" id=\"tblPlantSelection\" width=\"auto\" items=\"{/PlantSelectionVM}\">\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t    \t<Column id=\"clmHdrAction\" width=\"50px\">\n\t\t\t\t\t\t\t    <header>\n\t\t\t\t\t\t\t        <Label text=\"{i18n>action}\" id=\"lblHdrAction\"/>\n\t\t\t\t\t\t\t    </header>\n\t\t\t\t\t\t    </Column>\n\t\t\t\t\t        <Column id=\"clmHdrGMID\" width=\"100px\">\n\t\t\t\t\t\t\t    <header>\n\t\t\t\t\t\t\t        <Label text=\"{i18n>gmid}\" id=\"lblHdrGMID\"/>\n\t\t\t\t\t\t\t    </header>\n\t\t\t\t\t\t    </Column>\n\t\t\t\t\t\t    <Column id=\"clmHdrCountry\" width=\"150px\">\n\t\t\t\t\t\t\t    <header>\n\t\t\t\t\t\t\t        <Label text=\"{i18n>country}\" id=\"lblHdrCountry\"/>\n\t\t\t\t\t\t\t    </header>\n\t\t\t\t\t\t    </Column>\n\t\t\t\t\t        <Column id=\"clmHdrPlant\">\n\t\t\t\t\t            <header>\n\t\t\t\t\t                <Label text=\"{i18n>plant}\" id=\"lblHdrPlant\"/>\n\t\t\t\t\t            </header>\n\t\t\t\t\t        </Column>\n\t\t\t\t\t      \n\t\t\t\t\t    </columns>\n\t\t\t\t\t    <items>\n\t\t\t\t\t        <ColumnListItem id=\"cliPlantSelection\" highlight=\"{errorState}\">\n\t\t\t\t\t            <cells>\n\t\t\t\t\t            \t<Button id=\"btnRemoveRow\" icon=\"sap-icon://delete\" press=\"onRemoveRow\"/>\n\t\t\t\t\t            \t<Label id=\"lblGMID\" text=\"{GMID}\"/>\n\t\t\t\t\t            \t<Label id=\"lblCountry\" text=\"{COUNTRY}\"/>\n\t\t\t\t\t            \t<List items=\"{path: 'PLANTS', templateShareable : true}\" mode=\"MultiSelect\">\n\t\t\t\t\t            \t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<ObjectListItem title=\"{PLANT_CODE}\" type=\"Active\" selected=\"{IS_SELECTED}\"/>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t            </cells>\n\t\t\t\t\t        </ColumnListItem>\n\t\t\t\t\t    </items>\n\t\t\t\t\t</Table>\n\t\t\t\t</ScrollContainer>\n\t\t\t\t<Toolbar width=\"100%\" id=\"tbrSubmit\">\n\t\t\t\t     <content>\n\t\t\t\t         <ToolbarSpacer id=\"tbrSpSubmit\"/>\n\t\t\t\t\t\t\t <Button text=\"{i18n>submit}\" width=\"100px\" id=\"btnSubmit\" press=\"onSubmit\" visible=\"true\"/>\n\t\t\t\t          </content>\n\t\t\t\t </Toolbar>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"bam/controller/NotFound.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"sap/ui/model/resource/ResourceModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/core/routing/History\",\n\t\t\"bam/services/DataContext\"\n\t], function (Controller, JSONModel, MessageToast, MessageBox, ResourceModel,Filter,History,DataContext) {\n\t\t\"use strict\";\n\treturn Controller.extend(\"bam.controller.NotFound\", {\n\t\tonInit: function () {\n    \t}\n\t\t\n  \t});\n\n});",
		"bam/controller/GMIDPlantAssignment.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"sap/ui/model/resource/ResourceModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/core/routing/History\",\n\t\t\"bam/services/DataContext\"\n\t], function (Controller, JSONModel, MessageToast, MessageBox, ResourceModel,Filter,History,DataContext) {\n\t\t\"use strict\";\n\n\tvar firstTimePageLoad = true;\n\treturn Controller.extend(\"bam.controller.GMIDPlantAssignment\", {\n\t\t//\n\t\tonInit : function () {\n\t\t\t\n\t\t\t// define a global variable for the oData model\t\t    \n\t\t    this._oDataModel = new sap.ui.model.odata.ODataModel(\"/ODataService/BAMDataService.xsodata/\", true);\n\t\t    // Create view model for the page\n\t\t    var oModel = new sap.ui.model.json.JSONModel();\n\n\t    \t//var oi18nModel = new ResourceModel({\n              //  bundleName: \"bam.i18n.i18n\"\n           // });\n            \t\tvar groupedGMIDPlantCountry = [];\n                \n\t\t        //common code to check duplicates\n\t\t\t\tvar hash = (function() {\n\t\t\t\t    var keys = {};\n\t\t\t\t\t    return {\n\t\t\t\t\t        contains: function(key) {\n\t\t\t\t\t            return keys[key] === true;\n\t\t\t\t\t        },\n\t\t\t\t\t        add: function(key) {\n\t\t\t\t\t            if (keys[key] !== true)\n\t\t\t\t\t            {\n\t\t\t\t\t                keys[key] = true;\n\t\t\t\t\t            }\n\t\t\t\t\t        }\n\t\t\t\t\t    };\n\t\t\t\t\t})();\n\t\t\t\t\t\n\t\t\t\tvar key = null;\n\t\t\t\t\n            if(firstTimePageLoad)\n\t    \t{\n\t    \t\tvar oRouter = this.getRouter();\n\t\t\t\toRouter.getRoute(\"gmidPlantAssignment\").attachMatched(this._onRouteMatched, this);\n\t\t\t\tfirstTimePageLoad = false;\n\t    \t}\n\t\t\tvar gmidPlantAssignmentRecords = [];\n\t\t    // Get the GMID Plant combinations for the GMID-Country combination selected by the user\n\t\t    var viewpath = \"V_GMID_COUNTRY_PLANT_STATUS\";\n\t\t    \tif(this._gmidIDsList !== undefined)\n\t\t\t\t\t{\n\t\t\t             // get all the GMID/Plants data for the GMIDS entered in UI\n\t\t\t             gmidPlantAssignmentRecords = DataContext.getGMIDCountryPlantListFromDB(this._gmidIDsList,viewpath); \n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\tif (gmidPlantAssignmentRecords.length !==0){\n\t\t\t\t\t//loop through the rows of the retruened data\n\t\t\t\t\tfor (var i = 0; i < gmidPlantAssignmentRecords.length; i++) {\n\t\t\t\t\t\tvar item =  gmidPlantAssignmentRecords[i];\n\t\t\t\t\t\tkey = item.GMID + \";\" + item.COUNTRY;\n\t\t\t\t\t    //check for the gmid and country combination key \n\t\t\t\t\t    if(!hash.contains(key))\n\t\t\t\t\t    {\n\t\t\t\t\t    \t//if its a new combination add the key to existing list of combinations\n\t\t\t\t\t        hash.add(key);\n\t\t\t\t\t        groupedGMIDPlantCountry.push({ID: item.ID,\n\t\t\t\t\t        \t\t\t\t\t\t GMID:item.GMID, \n\t\t\t\t\t        \t\t\t\t\t\t COUNTRY:item.COUNTRY,\n\t\t\t\t\t        \t\t\t\t\t\t PLANTS:[]});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// check if the plant code is already associated with GMID Country combination\n\t\t\t\t\t\t// if associated make it as selected\n\t\t\t\t\t\tif (item.IS_SELECTED === \"false\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titem.IS_SELECTED = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titem.IS_SELECTED = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t    //find the object for the gmid and country combination and push the plant code to the nested plant object\n\t\t\t\t\t    groupedGMIDPlantCountry.find(function(data){return data.GMID === item.GMID && data.COUNTRY === item.COUNTRY;}).PLANTS.push({PLANT_CODE: item.PLANT_CODE,IS_SELECTED : item.IS_SELECTED,PLANT_STATUS: item.PLANT_STATUS, PLANT_STATUS_DESC: item.PLANT_STATUS_DESC});\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n            // Bind the Country data to the GMIDShipToCountry model\n            oModel.setProperty(\"/GMIDPlantAssignmentVM\",groupedGMIDPlantCountry);\n            this.getView().setModel(oModel);\n    \t},\n    \tgetRouter : function () {\n\t\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t},\n\t\t// force init method to be called everytime we naviagte to GMID Plant Selection page \n\t\t_onRouteMatched : function (oEvent) {\n\t\t\tif(DataContext.isBAMUser() === false)\n\t\t\t{\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"accessDenied\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._gmidIDs = oEvent.getParameter(\"arguments\").gmidids.split(\",\");\n\t\t\t\tvar gmid; \n\t        \t // prepare an array of GMIDs from the UI\n\t            var gmidList = [];\n\t            for(var j = 0; j < this._gmidIDs.length; j++) \n\t            {\n\t\t            // every time empty the GMID object\n\t\t             gmid= {\"ID\": \"\" };\n\t\t             gmid.ID =this._gmidIDs[j];\n\t\t             gmidList.push(gmid);\n\t            }\n\t            this._gmidIDsList = gmidList;\n\t\t\t\tthis.onInit();\n\t\t\t}\n\t\t},\n\t\t// navigate back to GMID Plants Page\n\t\tonNavBack: function () {\n\t\t\tvar oHistory = History.getInstance();\n\t\t\tvar sPreviousHash = oHistory.getPreviousHash();\n\t\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\twindow.history.go(-1);\n\t\t\t} else {\n\t\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t\toRouter.navTo(\"gmidPlant\", true);\n\t\t\t}\n\t\t}\n  \t});\n});",
		"bam/controller/GMIDPlant.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"bam/services/DataContext\",\n\t\t\"sap/ui/model/resource/ResourceModel\"\n\t], function (Controller,MessageToast,MessageBox,DataContext,ResourceModel) {\n\t\t\"use strict\";\n\n\treturn Controller.extend(\"bam.controller.GMIDPlant\", {\n\t\t\tonInit : function () {\n\t\t\t\t // define a global variable for the oData model\t\t    \n\t\t    \tthis._oDataModel = new sap.ui.model.odata.ODataModel(\"/ODataService/BAMDataService.xsodata/\", true);\n\t\t    \tvar oView = this.getView();\n\t\t    \toView.setModel(this._oDataModel);\n\t\t    \t\n\t\t    \tthis._oModel = new sap.ui.model.json.JSONModel();\n\t    \t\t\n\t    \t\tthis.getView().setModel(this._oModel,\"GMIDPlantVM\");\n\t    \t\t\n\t    \t\tvar oi18nModel = new ResourceModel({\n                \tbundleName: \"bam.i18n.i18n\"\n            \t});\n            \t\n\t    \t\t// get the Module settings for i18n model\n        \t\tvar plantAssignment = oi18nModel.getProperty(\"Module.plantAssignment\");\n        \t\tvar actionAdd = oi18nModel.getProperty(\"Module.actionAdd\");\n\t\t    \t\n\t\t    \t// getting permissions for the current logged in user\n\t\t\t\tvar permissions = DataContext.getUserPermissions();\n\t\t\t\t// check to see if the permission list includes \"Add\" action for the PLANT ASSIGNMENT Module\n\t\t\t\t// ATTRIBUTE in this case means MODULE\n\t\t\t\tfor(var i = 0; i < permissions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(permissions[i].ATTRIBUTE === plantAssignment && permissions[i].ACTION === actionAdd)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis._oModel.setProperty(\"/plantAssignmentText\",oi18nModel.getProperty(\"addPlants\"));\n\t\t\t\t\t\t// break since the user may have more than one role, as long as one of the user roles has permission to edit we can show the button\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(permissions[i].ATTRIBUTE === plantAssignment && permissions[i].ACTION === actionAdd)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis._oModel.setProperty(\"/plantAssignmentText\",oi18nModel.getProperty(\"viewPlants\"));\n\t\t\t\t\t\t\t// break since the user may have more than one role, as long as one of the user roles has permission to view we can show the button\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// change button text to Add\n\t\t\t\t}\n\t\t    \t\n\t\t    \t//attach _onRouteMatched to be called everytime on navigation to Maintain Attributes page\n\t\t    \tvar oRouter = this.getRouter();\n\t\t\t\toRouter.getRoute(\"gmidPlant\").attachMatched(this._onRouteMatched, this);\n\t\t\t},\n\t\t\tgetRouter : function () {\n\t\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t},\n\t\t\t// force init method to be called everytime we naviagte to Maintain Attribuets page \n\t\t\t_onRouteMatched : function (oEvent) {\n\t\t\t\t// If the user does not exist in the BAM database, redirect them to the denied access page\n\t\t\t\tif(DataContext.isBAMUser() === false)\n\t\t\t\t{\n\t\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"accessDenied\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.onInit();\n\t\t\t\t}\n\t\t\t},\n\t\t\t// navigate back to the homepage\n\t\t\tonHome: function(){\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"home\");\n\t\t\t},\n\t\t\t// navigate to edit attribute page on click of edit\n\t\t\tonViewPlantAssignment: function(){\n\t\t\t\t// get the smart table control\n\t\t\t\tthis._oSmartTable = this.getView().byId(\"smartTblBAMAttributes\").getTable();\n\t\t\t\t// check if more than or less than 1 checkbox is checked\n\t\t\t\tvar index,context,path,indexOfParentheses1,indexOfParentheses2;\n\t\t\t\t if(this._oSmartTable.getSelectedIndices().length >= 1){\n\t\t\t\t\tindex = this._oSmartTable.getSelectedIndices();\n\t\t\t\t\tvar gmidids=\"\";\n\t\t\t\t\tfor (var i=0;i < index.length;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontext = this._oSmartTable.getContextByIndex(index[i]); \t\n\t\t\t\t\t\tpath = context.getPath();\n\t\t\t\t\t\tindexOfParentheses1 = path.indexOf(\"(\");\n\t\t\t\t\t\tindexOfParentheses2 = path.indexOf(\")\");\n\t\t\t\t\t\tgmidids+=path.substring(indexOfParentheses1 + 1,indexOfParentheses2);\n\t\t\t\t\t\tgmidids+=\",\";\n\t\t\t\t\t}\n\t\t\t\t\tgmidids = gmidids.substring(0, gmidids.length - 1);\n\t\t\t\t\t// navigate to gmid plant assignment page\n\t\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"gmidPlantAssignment\",{\n\t\t\t\t\t\t gmidids : gmidids\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tMessageBox.alert(\"Please select one GMID - Country record for view.\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n  \t});\n});",
		"bam/controller/AccessDenied.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"sap/ui/model/resource/ResourceModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/core/routing/History\",\n\t\t\"bam/services/DataContext\"\n\t], function (Controller, JSONModel, MessageToast, MessageBox, ResourceModel,Filter,History,DataContext) {\n\t\t\"use strict\";\n\treturn Controller.extend(\"bam.controller.AccessDenied\", {\n\t\tonInit: function () {\n    \t}\n\t\t\n  \t});\n\n});",
		"bam/controller/SubmitConfirmDialog.js": "sap.ui.define([\n\t\"sap/ui/base/Object\"]\n\t, function(UI5Object){\n\t\t\"use strict\";\n\treturn UI5Object.extend(\"bam.controller.SubmitConfirmDialog\", {\n\t\tconstructor : function (oView) {\n\t\t\tthis._oView = oView;\t\n\t\t},\n\t\topen : function (view) {\n\t\t\tvar oView = this._oView;\n\t\t\tif (view !== this._oView)\n\t\t\t{\n\t\t\t\toView = view;\n\t\t\t}\n\t\t\t\n\t\t\tvar oDialog = oView.byId(\"submitConfirmDialog\");\n\t\t\tvar component = this.getComponent();\n\t\t\t\n\t\t\t// create dialog lazily\n\t\t\tif (!oDialog) {\n\t\t\t\tvar oFragmentController = {\n\t\t\t\t\tonCloseDialog : function () {\n\t\t\t\t\t\toDialog.close();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// for plant selection reset the data of the model\n\t\t\t\t\t\tif(oView.sViewName === \"bam/view.PlantSelection\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar plantSelectionModel = oView.getModel();\n\t\t\t\t\t\t\tvar data = plantSelectionModel.setProperty(\"/PlantSelectionVM\",[]);\n\t\t\t\t\t\t\tplantSelectionModel.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(oView.sViewName === \"bam/view.GMIDSubmission\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// hide the table & excel button and set the radio button to not selected\n\t\t\t\t\t\t\tvar tblGmid = oView.byId(\"tblGMIDRequest\");\n\t\t\t\t\t\t\ttblGmid.setVisible(false);\n\t\t\t\t\t\t\tvar excelHBox = oView.byId(\"excelHBox\");\n\t\t\t\t\t\t\texcelHBox.setVisible(false);\n\t\t\t\t\t\t\tvar rbgGMIDType = oView.byId(\"rbgGMIDType\");\n\t\t\t\t\t\t\trbgGMIDType.setSelectedIndex(-1);\n\t\t\t\t\t\t\tvar btnSubmit = oView.byId(\"btnSubmit\");\n\t\t\t\t\t\t\tbtnSubmit.setVisible(false);\n\t\t\t\t\t\t\tvar btnContinue = oView.byId(\"btnContinueToPlantSelection\");\n\t\t\t\t\t\t\tbtnContinue.setVisible(false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// reset model to default 5 rows\n\t\t\t\t\t\t\tvar GMIDShipToCountryModel = oView.getModel();\n\t\t\t\t\t\t\tvar data = GMIDShipToCountryModel.getData().GMIDShipToCountryVM;\n\t\t\t\t\t\t\tfor(var i = 0; i < data.length - 1; i++) \n\t            \t\t\t{\n\t        \t\t\t\t\tdata[i].GMID = \"\";\n\t\t            \t\t\tdata[i].COUNTRY_CODE_ID = -1;\n\t\t            \t\t\tdata[i].CURRENCY_CODE_ID = -1;\n\t\t            \t\t\tdata[i].IBP_RELEVANCY_CODE_ID = -1;\n\t\t            \t\t\tdata[i].NETTING_DEFAULT_CODE_ID = -1;\n\t\t            \t\t\tdata[i].QUADRANT_CODE_ID = -1;\n\t\t            \t\t\tdata[i].CHANNEL_CODE_ID = -1;\n\t\t            \t\t\tdata[i].MARKET_DEFAULT_CODE_ID = -1;\n\t\t            \t\t\tdata[i].CREATED_BY = \"\";\n\t\t            \t\t\tdata[i].createNew = \"\";\n\t\t            \t\t\tdata[i].errorMessage = false;\n\t\t\t\t            }\n\t\t\t\t            \n\t\t\t\t            // remove any extra rows, only want to show 5\n\t\t\t\t            data.splice(5,data.length - 5);\n\t\t\t\t            GMIDShipToCountryModel.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcomponent.getRouter().navTo(\"home\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t// create dialog via fragment factory\n\t\t\t\toDialog = sap.ui.xmlfragment(oView.getId(), \"bam.view.SubmitConfirmDialog\", oFragmentController);\n\t\t\t\t// connect dialog to the root view of this component (models, lifecycle)\n\t\t\t\toView.addDependent(oDialog);\n\t\t\t}\n\t\t\toDialog.open();\n\t\t},\n\t\tgetComponent: function () {\n\t        var sComponentId = sap.ui.core.Component.getOwnerIdFor(this._oView);\n\t        return sap.ui.component(sComponentId);\n    \t}\n\t});\n});",
		"bam/controller/EditAttributesSingle.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/m/MessageToast\",\n\t\t\"sap/m/MessageBox\",\n\t\t\"sap/ui/model/resource/ResourceModel\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/core/routing/History\",\n\t\t\"bam/services/DataContext\"\n\t], function (Controller, JSONModel, MessageToast, MessageBox, ResourceModel,Filter,History,DataContext) {\n\t\t\"use strict\";\n\t\n\tvar attributeList = [];\n\tvar loggedInUserID;\n\treturn Controller.extend(\"bam.controller.EditAttributesSingle\", {\n\t\t\tonInit : function () {\n\t\t\t\t\n\t\t\t\t// Get logged in user id\n\t\t\t\tloggedInUserID = DataContext.getUserID();\n\t\t\t\t\n\t    \t\t// Create model and set it to initial data\n\t    \t\tvar oModel = new sap.ui.model.json.JSONModel();\n\t    \t\tthis.getView().setModel(oModel);\n\t    \t\tvar curr = this;\n\t    \t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\t\t\tDataContext.getAttributeListBasedOnUserID()\n\t\t\t\t\t.then(function(data) {\n\t\t\t\t\t\tattributeList = data;\n\t\t\t\t\t\t// code to show/hide the controls on the UI\n\t\t\t\t\t\tcurr.setVMForControlVisibility();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tthis._oDataModel = new sap.ui.model.odata.ODataModel(\"/ODataService/BAMDataService.xsodata/\", true);\n\t\t\t\t\n\t\t\t\t// Bind Stored Currency dropdown\n\t\t\t\t// Create a filter & sorter array\n\t\t\t\tvar storedcurrencyFilterArray = [];\n\t\t\t\tvar storedcurrencyFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"CURRENCY\");\n\t\t\t\tstoredcurrencyFilterArray.push(storedcurrencyFilter);\n\t\t\t\tvar storedcurrencySortArray = [];\n\t\t\t\tvar storedcurrencySort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\t\tstoredcurrencySortArray.push(storedcurrencySort);\n\t\t\t\t// Get the Stored Currency dropdown list from the CODE_MASTER table\n\t\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\t\tfilters: storedcurrencyFilterArray,\n\t\t\t\t\t\tsorters: storedcurrencySortArray,\n\t\t\t\t\t\tasync: false,\n\t\t                success: function(oData, oResponse){\n\t\t\t                // Bind the Stored Currency data list to view model\n\t\t\t                oModel.setProperty(\"/STORED_CURRENCY_LIST\",oData.results);\n\t\t                },\n\t\t    \t\t    error: function(){\n\t\t            \t\tMessageToast.show(\"Unable to retrieve currencies.\");\n\t\t    \t\t\t}\n\t\t    \t});\n\t\t    \t\t\n\t\t    \t// Bind IBP Relavancy dropdown\n\t\t\t\t// Create a filter & sorter array\n\t\t\t\tvar ibprelevancyFilterArray = [];\n\t\t\t\tvar ibprelevancyFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"IBP_RELEVANCY\");\n\t\t\t\tibprelevancyFilterArray.push(ibprelevancyFilter);\n\t\t\t\tvar ibprelevancySortArray = [];\n\t\t\t\tvar ibprelevancySort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\t\tibprelevancySortArray.push(ibprelevancySort);\n\t\t\t\t// Get the IBP Relevancy dropdown list from the CODE_MASTER table\n\t\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\t\tfilters: ibprelevancyFilterArray,\n\t\t\t\t\t\tsorters: ibprelevancySortArray,\n\t\t\t\t\t\tasync: false,\n\t\t                success: function(oData, oResponse){\n\t\t                \t// Bind the IBP Relevancy data list to view model\n\t\t\t                oModel.setProperty(\"/IBP_RELEVANCY_LIST\",oData.results);\n\t\t                },\n\t\t    \t\t    error: function(){\n\t\t            \t\tMessageToast.show(\"Unable to retrieve IBP Relevancy data.\");\n\t\t    \t\t\t}\n\t\t    \t});\n\t\t    \t\t\n\t\t    \t// Bind Netting Default dropdown\n\t\t\t\t// Create a filter & sorter array\n\t\t\t\tvar nettingdefaultFilterArray = [];\n\t\t\t\tvar nettingdefaultFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"NETTING_DEFAULT\");\n\t\t\t\tnettingdefaultFilterArray.push(nettingdefaultFilter);\n\t\t\t\tvar nettingdefaultSortArray = [];\n\t\t\t\tvar nettingdefaultSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\t\tnettingdefaultSortArray.push(nettingdefaultSort);\n\t\t\t\t// Get the Netting Default dropdown list from the CODE_MASTER table\n\t\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\t\tfilters: nettingdefaultFilterArray,\n\t\t\t\t\t\tsorters: nettingdefaultSortArray,\n\t\t\t\t\t\tasync: false,\n\t\t                success: function(oData, oResponse){\n\t\t\t                // Bind the Netting Default list to view model\n\t\t\t                oModel.setProperty(\"/NETTING_DEFAULT_LIST\",oData.results);\n\t\t                },\n\t\t    \t\t    error: function(){\n\t\t            \t\tMessageToast.show(\"Unable to retrieve netting default data.\");\n\t\t    \t\t\t}\n\t\t    \t});\n\t\t    \t\t\n\t\t    \t// Bind Quadrant dropdown\n\t\t\t\t// Create a filter & sorter array\n\t\t\t\tvar quadrantFilterArray = [];\n\t\t\t\tvar quadrantFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"QUADRANT\");\n\t\t\t\tquadrantFilterArray.push(quadrantFilter);\n\t\t\t\tvar quadrantSortArray = [];\n\t\t\t\tvar quadrantSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\t\tquadrantSortArray.push(quadrantSort);\n\t\t\t\t// Get the Quadrant dropdown list from the CODE_MASTER table\n\t\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\t\tfilters: quadrantFilterArray,\n\t\t\t\t\t\tsorters: quadrantSortArray,\n\t\t\t\t\t\tasync: false,\n\t\t                success: function(oData, oResponse){\n\t\t\t                // Bind the Quadrant data list to view model\n\t\t\t                oModel.setProperty(\"/QUADRANT_LIST\",oData.results);\n\t\t                },\n\t\t    \t\t    error: function(){\n\t\t            \t\tMessageToast.show(\"Unable to retrieve quadrant data.\");\n\t\t    \t\t\t}\n\t\t    \t});\n\t\t    \t\t\n\t\t    \t// Bind Channel dropdown\n\t\t\t\t// Create a filter & sorter array\n\t\t\t\tvar channelFilterArray = [];\n\t\t\t\tvar channelFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"CHANNEL\");\n\t\t\t\tchannelFilterArray.push(channelFilter);\n\t\t\t\tvar channelSortArray = [];\n\t\t\t\tvar channelSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\t\tchannelSortArray.push(channelSort);\n\t\t\t\t// Get the Channel dropdown list from the CODE_MASTER table\n\t\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\t\tfilters: channelFilterArray,\n\t\t\t\t\t\tsorters: channelSortArray,\n\t\t\t\t\t\tasync: false,\n\t\t                success: function(oData, oResponse){\n\t\t\t                // Bind the Channel data list to view model\n\t\t\t                oModel.setProperty(\"/CHANNEL_LIST\",oData.results);\n\t\t                },\n\t\t    \t\t    error: function(){\n\t\t            \t\tMessageToast.show(\"Unable to retrieve channel data.\");\n\t\t    \t\t\t}\n\t\t    \t});\n\t\t    \t\t\n\t\t    \t// Bind Market Default dropdown\n\t\t\t\t// Create a filter & sorter array\n\t\t\t\tvar marketdefaultFilterArray = [];\n\t\t\t\tvar marketdefaultFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"MARKET_DEFAULT\");\n\t\t\t\tmarketdefaultFilterArray.push(marketdefaultFilter);\n\t\t\t\tvar marketdefaultSortArray = [];\n\t\t\t\tvar marketdefaultSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\t\tmarketdefaultSortArray.push(marketdefaultSort);\n\t\t\t\t// Get the Market Default dropdown list from the CODE_MASTER table\n\t\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\t\tfilters: marketdefaultFilterArray,\n\t\t\t\t\t\tsorters: marketdefaultSortArray,\n\t\t\t\t\t\tasync: false,\n\t\t                success: function(oData, oResponse){\n\t\t\t                // Bind the Market Default data list to view model\n\t\t\t                oModel.setProperty(\"/MARKET_DEFAULT_LIST\",oData.results);\n\t\t                },\n\t\t    \t\t    error: function(){\n\t\t            \t\tMessageToast.show(\"Unable to retrieve market default data.\");\n\t\t    \t\t\t}\n\t\t    \t});\n\t\t    \t\n\t\t    \t// Bind Supply System Flag dropdown\n\t\t\t\t// Create a filter & sorter array\n\t\t\t\tvar supplySystemFilterArray = [];\n\t\t\t\tvar supplySystemFilter = new Filter(\"CODE_TYPE\",sap.ui.model.FilterOperator.EQ,\"SUPPLY_SYSTEM_FLAG\");\n\t\t\t\tsupplySystemFilterArray.push(supplySystemFilter);\n\t\t\t\tvar supplySystemSortArray = [];\n\t\t\t\tvar supplySystemSort = new sap.ui.model.Sorter(\"LABEL\",false);\n\t\t\t\tsupplySystemSortArray.push(supplySystemSort);\n\t\t\t\t// Get the Supply System Flag dropdown list from the CODE_MASTER table\n\t\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\t\tfilters: supplySystemFilterArray,\n\t\t\t\t\t\tsorters: supplySystemSortArray,\n\t\t\t\t\t\tasync: false,\n\t\t                success: function(oData, oResponse){\n\t\t\t                // Bind the Support System data list to view model\n\t\t\t                oModel.setProperty(\"/SUPPORT_SYSTEM_FLAG_LIST\",oData.results);\n\t\t                },\n\t\t    \t\t    error: function(){\n\t\t            \t\tMessageToast.show(\"Unable to retrieve supply system flag data.\");\n\t\t    \t\t\t}\n\t\t    \t});\n\t\t    \t\n\t\t    \t// assign VM and VM data to a global variable for the page\n\t\t\t\tthis._oGMIDShipToCountryUpdViewModel = oModel;            \n\t\t\t\tthis._oViewModelData = this._oGMIDShipToCountryUpdViewModel.getData();\n\t\t\t\t\n\t\t    \t//attach _onRouteMatched to be called everytime on navigation to Edit Attributes Single page\n\t\t\t\tvar oRouter = this.getRouter();\n\t\t\t\toRouter.getRoute(\"editAttributesSingle\").attachMatched(this._onRouteMatched, this);\n\t\t\t\t\n\t\t\t},\n\t\t\tgetRouter : function () {\n\t\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t},\n\t\t\t//get the paramter values and set the view model according to it\n\t\t\t_onRouteMatched : function (oEvent) {\n\t\t\t\t// If the user does not exist in the BAM database, redirect them to the denied access page\n\t\t\t\tif(DataContext.isBAMUser() === false)\n\t\t\t\t{\n\t\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"accessDenied\");\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setPageToInitialState();\n\t\t\t\t\tthis._oEditAttributesID = oEvent.getParameter(\"arguments\").editAttributesID;\n\t\t\t\t\tthis.setSelectedGMIDCountryVM();\n\t\t\t\t}\n\t\t\t},\n\t\t\tshowControl: function(value){\n\t\t\t\treturn !!value;\n\t\t\t},\n\t\t\t// add properties in view model to set the visibility of controls on basis of the user role\n\t\t\tsetVMForControlVisibility: function(){\n\t\t\t\tvar oModel = this._oGMIDShipToCountryUpdViewModel;\n\t\t\t\t//set the control show/hide values\n\t\t    \toModel.setProperty(\"/SHOW_CURRENCY\",this.checkPermission('CURRENCY'));\n\t\t\t    oModel.setProperty(\"/SHOW_IBP_RELEVANCY\",this.checkPermission('IBP_RELEVANCY'));\n\t\t\t    oModel.setProperty(\"/SHOW_NETTING_DEFAULT\",this.checkPermission('NETTING_DEFAULT'));\n\t\t\t    oModel.setProperty(\"/SHOW_QUADRANT\",this.checkPermission('QUADRANT'));\n\t\t\t    oModel.setProperty(\"/SHOW_CHANNEL\",this.checkPermission('CHANNEL'));\n\t\t\t    oModel.setProperty(\"/SHOW_MARKET_DEFAULT\",this.checkPermission('MARKET_DEFAULT'));\n\t\t\t    oModel.setProperty(\"/SHOW_SUPPLY_SYSTEM_FLAG\",this.checkPermission('SUPPLY_SYSTEM'));\n\t\t\t    oModel.setProperty(\"/SHOW_DEMAND_ATTRIBUTE1\",this.checkPermission('DEMAND_ATTRIBUTE1'));\n\t\t\t    oModel.setProperty(\"/SHOW_DEMAND_ATTRIBUTE2\",this.checkPermission('DEMAND_ATTRIBUTE2'));\n\t\t\t    oModel.setProperty(\"/SHOW_MARKETING_ATTRIBUTE1\",this.checkPermission('MARKETING_ATTRIBUTE1'));\n\t\t\t    oModel.setProperty(\"/SHOW_MARKETING_ATTRIBUTE2\",this.checkPermission('MARKETING_ATTRIBUTE2'));\n\t\t\t    oModel.setProperty(\"/SHOW_SUPPLY_ATTRIBUTE1\",this.checkPermission('SUPPLY_ATTRIBUTE1'));\n\t\t\t\toModel.setProperty(\"/SHOW_SUPPLY_ATTRIBUTE2\",this.checkPermission('SUPPLY_ATTRIBUTE2'));\t\n\t\t\t},\n\t\t\tcheckPermission: function(attribute){\n\t\t\t\treturn attributeList.includes(attribute);\n\t\t\t},\n\t\t\t// set the page to initial state\n\t\t\t// clear the value state and value state text for all controls\n\t\t\tsetPageToInitialState: function(){\n\t\t\t\tthis.getView().byId(\"ddlStoredCurrency\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"ddlStoredCurrency\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"ddlIBPRelevancyFlag\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"ddlIBPRelevancyFlag\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"ddlNettingDefaultFlag\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"ddlNettingDefaultFlag\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"ddlQuadrant\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"ddlQuadrant\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"ddlChannel\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"ddlChannel\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"ddlMarketDefaultFlag\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"ddlMarketDefaultFlag\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"ddlSupportSystemFlag\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"ddlSupportSystemFlag\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"txtDemandAtt1\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"txtDemandAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"txtDemandAtt2\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"txtDemandAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"txtMktAtt1\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"txtMktAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"txtMktAtt2\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"txtMktAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"txtSupplyAtt1\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setValueStateText(\"\");\n\t\t\t\tthis.getView().byId(\"txtSupplyAtt2\").setValueState(sap.ui.core.ValueState.None);\n\t\t\t},\n\t\t\t// set the selected GMID Country's view model\n\t\t\tsetSelectedGMIDCountryVM: function(){\n\t\t\t\tvar oModel = this._oGMIDShipToCountryUpdViewModel;\n\t\t\t\tif(this._oEditAttributesID !== undefined){\n\t\t\t\t\t// Get the GMID-Country combination that is to be edited from GMID_SHIP_TO_COUNTRY table\n\t\t\t\t\t// Create a filter array\n\t\t\t\t\tvar gmidCountryFilterArray = [];\n\t\t\t\t\tvar gmidCountryFilter = new Filter(\"ID\",sap.ui.model.FilterOperator.EQ, this._oEditAttributesID);\n\t\t\t\t\tgmidCountryFilterArray.push(gmidCountryFilter);\n\t\t\t\t\t \n\t\t\t\t\tthis._oDataModel.read(\"/GMID_SHIP_TO_COUNTRY\",{\n\t\t\t\t\t \tfilters: gmidCountryFilterArray,\n\t\t\t\t\t \tasync: false,\n\t\t                success: function(oData, oResponse){\n\t\t\t                var selDataVal  = oData.results.pop();\n\t\t\t                oModel.setProperty(\"/GMID\",selDataVal.GMID);\n\t\t\t                oModel.setProperty(\"/COUNTRY_CODE_ID\",selDataVal.COUNTRY_CODE_ID);\n\t\t\t                oModel.setProperty(\"/CURRENCY_CODE_ID_ORG\",selDataVal.CURRENCY_CODE_ID);\n\t\t\t                oModel.setProperty(\"/CURRENCY_CODE_ID\",selDataVal.CURRENCY_CODE_ID);\n\t\t\t                oModel.setProperty(\"/IBP_RELEVANCY_CODE_ID_ORG\",selDataVal.IBP_RELEVANCY_CODE_ID);\n\t\t\t                oModel.setProperty(\"/IBP_RELEVANCY_CODE_ID\",selDataVal.IBP_RELEVANCY_CODE_ID);\n\t\t\t                oModel.setProperty(\"/NETTING_DEFAULT_CODE_ID_ORG\",selDataVal.NETTING_DEFAULT_CODE_ID);\n\t\t\t                oModel.setProperty(\"/NETTING_DEFAULT_CODE_ID\",selDataVal.NETTING_DEFAULT_CODE_ID);\n\t\t\t                oModel.setProperty(\"/QUADRANT_CODE_ID_ORG\",selDataVal.QUADRANT_CODE_ID);\n\t\t\t                oModel.setProperty(\"/QUADRANT_CODE_ID\",selDataVal.QUADRANT_CODE_ID);\n\t\t\t                oModel.setProperty(\"/CHANNEL_CODE_ID_ORG\",selDataVal.CHANNEL_CODE_ID);\n\t\t\t                oModel.setProperty(\"/CHANNEL_CODE_ID\",selDataVal.CHANNEL_CODE_ID);\n\t\t\t                oModel.setProperty(\"/MARKET_DEFAULT_CODE_ID_ORG\",selDataVal.MARKET_DEFAULT_CODE_ID);\n\t\t\t                oModel.setProperty(\"/MARKET_DEFAULT_CODE_ID\",selDataVal.MARKET_DEFAULT_CODE_ID);\n\t\t\t                oModel.setProperty(\"/SUPPLY_SYSTEM_FLAG_CODE_ID_ORG\",selDataVal.SUPPLY_SYSTEM_FLAG_CODE_ID);\n\t\t\t                oModel.setProperty(\"/SUPPLY_SYSTEM_FLAG_CODE_ID\",selDataVal.SUPPLY_SYSTEM_FLAG_CODE_ID);\n\t\t\t                oModel.setProperty(\"/DEMAND_ATTRIBUTE1_ORG\",selDataVal.DEMAND_ATTRIBUTE1);\n\t\t\t                oModel.setProperty(\"/DEMAND_ATTRIBUTE1\",selDataVal.DEMAND_ATTRIBUTE1);\n\t\t\t                oModel.setProperty(\"/DEMAND_ATTRIBUTE2_ORG\",selDataVal.DEMAND_ATTRIBUTE2);\n\t\t\t                oModel.setProperty(\"/DEMAND_ATTRIBUTE2\",selDataVal.DEMAND_ATTRIBUTE2);\n\t\t\t                oModel.setProperty(\"/MARKETING_ATTRIBUTE1_ORG\",selDataVal.MARKETING_ATTRIBUTE1);\n\t\t\t                oModel.setProperty(\"/MARKETING_ATTRIBUTE1\",selDataVal.MARKETING_ATTRIBUTE1);\n\t\t\t                oModel.setProperty(\"/MARKETING_ATTRIBUTE2_ORG\",selDataVal.MARKETING_ATTRIBUTE2);\n\t\t\t                oModel.setProperty(\"/MARKETING_ATTRIBUTE2\",selDataVal.MARKETING_ATTRIBUTE2);\n\t\t\t                oModel.setProperty(\"/SUPPLY_ATTRIBUTE1_ORG\",selDataVal.SUPPLY_ATTRIBUTE1);\n\t\t\t                oModel.setProperty(\"/SUPPLY_ATTRIBUTE1\",selDataVal.SUPPLY_ATTRIBUTE1);\n\t\t\t                oModel.setProperty(\"/SUPPLY_ATTRIBUTE2_ORG\",selDataVal.SUPPLY_ATTRIBUTE2);\n\t\t\t                oModel.setProperty(\"/SUPPLY_ATTRIBUTE2\",selDataVal.SUPPLY_ATTRIBUTE2);\n\t\t\t                //set additional fields to the model\n\t\t\t                oModel.setProperty(\"/TYPE\",selDataVal.TYPE);\n\t\t\t                oModel.setProperty(\"/CREATED_ON\",selDataVal.CREATED_ON);\n\t\t\t                oModel.setProperty(\"/CREATED_BY\",selDataVal.CREATED_BY);\n\t\t\t                oModel.setProperty(\"/GMID_COUNTRY_STATUS_CODE_ID\",selDataVal.GMID_COUNTRY_STATUS_CODE_ID);\n\t\t\t                oModel.setProperty(\"/FINANCE_SYSTEM_FLAG_CODE_ID\",selDataVal.FINANCE_SYSTEM_FLAG_CODE_ID);\n\t\t\t                oModel.setProperty(\"/COMMENTS\",selDataVal.COMMENTS);\n\t\t                },\n\t\t    \t\t    error: function(){\n\t\t            \t\tMessageToast.show(\"Unable to retrieve selected GMID Country record.\");\n\t\t    \t\t\t}\n\t\t    \t\t});\n\t\t    \t\t\n\t\t    \t\t// Get the Country Label\n\t\t\t\t\t// Create a filter array\n\t\t\t\t\tvar countryFilterArray = [];\n\t\t\t\t\tvar countryFilter = new Filter(\"ID\",sap.ui.model.FilterOperator.EQ,oModel.getProperty(\"/COUNTRY_CODE_ID\"));\n\t\t\t\t\tcountryFilterArray.push(countryFilter);\n\t\t\t\t\t// Get the selected country record from the CODE_MASTER table\n\t\t\t\t\tthis._oDataModel.read(\"/CODE_MASTER\",{\n\t\t\t\t\t\t\tfilters: countryFilterArray,\n\t\t\t\t\t\t\tasync: false,\n\t\t\t                success: function(oData, oResponse){\n\t\t\t\t                // Bind the Country data to the GMIDShipToCountry model\n\t\t\t\t                oModel.setProperty(\"/COUNTRY\",oData.results.pop().LABEL);\n\t\t\t                },\n\t\t\t    \t\t    error: function(){\n\t\t\t            \t\tMessageToast.show(\"Unable to retrieve countries.\");\n\t\t\t    \t\t\t}\n\t\t\t    \t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonChange: function(oEvent){\n\t\t\t\tvar sourceControl = oEvent.getSource();\n\t\t\t\tvar sourceControlName = oEvent.getSource().getName();\n\t\t\t\t// call the method to check if any of the attribute value has been updated \n\t\t\t\tif (this.validateAttributeValueChange(sourceControlName)){\n\t\t\t\t\t// if true set the value state to warning to highlight the change to the user\n\t\t\t\t\tsourceControl.setValueStateText(\"Attribute value changed\");\n\t\t\t\t\tsourceControl.setValueState(sap.ui.core.ValueState.Warning);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// if false set the value state to none to remove highlight from the control\n\t\t\t\t\tsourceControl.setValueStateText(\"\");\n\t\t\t\t\tsourceControl.setValueState(sap.ui.core.ValueState.None);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// validate if the value of various attributes has been updated\n\t\t\tvalidateAttributeValueChange: function (sourceControlName){\n\t\t\t\tif ((sourceControlName === \"ddlStoredCurrency\" && this._oViewModelData.CURRENCY_CODE_ID_ORG != this._oViewModelData.CURRENCY_CODE_ID)\n\t\t\t\t|| (sourceControlName === \"ddlIBPRelevancyFlag\" && this._oViewModelData.IBP_RELEVANCY_CODE_ID_ORG != this._oViewModelData.IBP_RELEVANCY_CODE_ID)\n\t\t\t\t|| (sourceControlName === \"ddlNettingDefaultFlag\" && this._oViewModelData.NETTING_DEFAULT_CODE_ID_ORG != this._oViewModelData.NETTING_DEFAULT_CODE_ID)\n\t\t\t\t|| (sourceControlName === \"ddlQuadrant\" && this._oViewModelData.QUADRANT_CODE_ID_ORG != this._oViewModelData.QUADRANT_CODE_ID)\n\t\t\t\t|| (sourceControlName === \"ddlChannel\" && this._oViewModelData.CHANNEL_CODE_ID_ORG != this._oViewModelData.CHANNEL_CODE_ID)\n\t\t\t\t|| (sourceControlName === \"ddlMarketDefaultFlag\" && this._oViewModelData.MARKET_DEFAULT_CODE_ID_ORG != this._oViewModelData.MARKET_DEFAULT_CODE_ID)\n\t\t\t\t|| (sourceControlName === \"ddlSupportSystemFlag\" && this._oViewModelData.SUPPLY_SYSTEM_FLAG_CODE_ID_ORG != this._oViewModelData.SUPPLY_SYSTEM_FLAG_CODE_ID)\n\t\t\t\t|| (sourceControlName === \"txtDemandAtt1\" && this._oViewModelData.DEMAND_ATTRIBUTE1_ORG != this._oViewModelData.DEMAND_ATTRIBUTE1)\n\t\t\t\t|| (sourceControlName === \"txtDemandAtt2\" && this._oViewModelData.DEMAND_ATTRIBUTE2_ORG != this._oViewModelData.DEMAND_ATTRIBUTE2)\n\t\t\t\t|| (sourceControlName === \"txtMktAtt1\" && this._oViewModelData.MARKETING_ATTRIBUTE1_ORG != this._oViewModelData.MARKETING_ATTRIBUTE1)\n\t\t\t\t|| (sourceControlName === \"txtMktAtt2\" && this._oViewModelData.MARKETING_ATTRIBUTE2_ORG != this._oViewModelData.MARKETING_ATTRIBUTE2)\n\t\t\t\t|| (sourceControlName === \"txtSupplyAtt1\" && this._oViewModelData.SUPPLY_ATTRIBUTE1_ORG != this._oViewModelData.SUPPLY_ATTRIBUTE1)\n\t\t\t\t|| (sourceControlName === \"txtSupplyAtt2\" && this._oViewModelData.SUPPLY_ATTRIBUTE2_ORG != this._oViewModelData.SUPPLY_ATTRIBUTE2)\n\t\t\t\t){ \n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\t//click of submit button\n\t\t\tonSubmit: function(){\n\t\t\t\tvar curr = this;\n\t\t\t\t// Check if any Attributes have the comma or semicolon,\n\t\t\t\t// need to show message to use if either of these ( , or ;) are entered\n\t\t\t   //get the list of updated attributes where special characters are entered\n\t\t\t   var invalidCharUpdatedAttributes = curr.getInvalidCharUpdatedAttributes();\n\t\t  \t   if (invalidCharUpdatedAttributes !== \"\")\n\t\t        {\n\t\t        \tMessageBox.alert(\"Special characters comma and semi-colon are not allowed in \" + invalidCharUpdatedAttributes + \".\",\n\t\t\t        \t{\n\t\t\t        \t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t        \t});\n\t\t\t        \treturn;\n\t\t        }\n\t\t\t\tvar gmid = this._oViewModelData.GMID;\n\t\t\t\tvar country = this._oViewModelData.COUNTRY;\n\t\t\t\t// check if user wants to update the attributes for GMID and country\n\t\t\t\tMessageBox.confirm(\"Highlighted attributes will be updated for GMID \" + gmid + \" and country \" + country + \". Continue?\", {\n            \t\ticon: sap.m.MessageBox.Icon.WARNING,\n            \t\tactions: [sap.m.MessageBox.Action.YES, sap.m.MessageBox.Action.NO],\n            \t\tonClose: function(oAction) {\n            \t\t\tcurr.fnCallbackSubmitConfirm(oAction);\n            \t\t}\n        \t\t});\n\t\t\t},\n\t\t\t//get the list of  attributes in string format where invalid characters has been entered\n\t\t\tgetInvalidCharUpdatedAttributes: function(){\n\t\t\t\t// get the crop protection and seeds value from i18n file\n\t\t    \tvar oi18nModel = this.getView().getModel(\"i18n\");\n\t\t\t\tvar invalidCharacterAttributesString = \"\";\n\t\t\t\tif (this.getView().byId(\"txtDemandAtt1\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtDemandAtt1\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"demandAtt1\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtDemandAtt2\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtDemandAtt2\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"demandAtt2\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtMktAtt1\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtMktAtt1\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"mktAtt1\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtMktAtt2\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtMktAtt2\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"mktAtt2\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtSupplyAtt1\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtSupplyAtt1\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"supplyAtt1\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\tif (this.getView().byId(\"txtSupplyAtt2\").getValue().indexOf(\",\") >= 0 || this.getView().byId(\"txtSupplyAtt2\").getValue().indexOf(\";\") >= 0){\n\t\t\t\t\tinvalidCharacterAttributesString += oi18nModel.getProperty(\"supplyAtt2\");\n\t\t\t\t\tinvalidCharacterAttributesString += \", \";\n\t\t\t\t}\n\t\t\t\treturn invalidCharacterAttributesString.substring(0, invalidCharacterAttributesString.length - 2);\n\t\t\t},\n\t\t\t// update the attributes based on user response\n\t\t\tfnCallbackSubmitConfirm: function(oAction){\n\t\t\t\tvar curr = this;\n\t\t\t\t//if user confirmed to update the attributes, prepare the object and update the attributes for the GMID and country\n\t\t\t\t//else do nothing\n\t\t\t\tif (oAction === \"YES\") {\n\t\t\t\t\t// Create current timestamp\n\t\t\t    \tvar oDate = new Date();\n\t\t\t    \tvar country = this._oViewModelData.COUNTRY;\n\t\t\t\t\t// create updated GMIDShipToCountry object\n\t\t\t\t\tvar updGMIDCountry = {\n\t\t\t\t\t\t\t\tID: this._oEditAttributesID,\n\t\t\t\t\t        \tGMID: this._oViewModelData.GMID,\n\t\t\t\t\t        \tCOUNTRY_CODE_ID: parseInt(this._oViewModelData.COUNTRY_CODE_ID,10),\n\t\t\t\t\t        \tTYPE:this._oViewModelData.TYPE,\n\t\t\t\t\t        \tCURRENCY_CODE_ID: parseInt(this._oViewModelData.CURRENCY_CODE_ID,10),\n\t\t\t\t\t        \tIBP_RELEVANCY_CODE_ID: parseInt(this._oViewModelData.IBP_RELEVANCY_CODE_ID,10),\n\t\t\t\t\t        \tNETTING_DEFAULT_CODE_ID: parseInt(this._oViewModelData.NETTING_DEFAULT_CODE_ID,10),\n\t\t\t\t\t        \tQUADRANT_CODE_ID:parseInt(this._oViewModelData.QUADRANT_CODE_ID,10),\n\t\t\t\t\t        \tCHANNEL_CODE_ID: parseInt(this._oViewModelData.CHANNEL_CODE_ID,10),\n\t\t\t\t\t        \tMARKET_DEFAULT_CODE_ID: parseInt(this._oViewModelData.MARKET_DEFAULT_CODE_ID,10),\n\t\t\t\t\t        \tSUPPLY_SYSTEM_FLAG_CODE_ID: parseInt(this._oViewModelData.SUPPLY_SYSTEM_FLAG_CODE_ID,10),\n\t\t\t\t\t        \tDEMAND_ATTRIBUTE1: this._oViewModelData.DEMAND_ATTRIBUTE1,\n\t\t\t\t\t        \tDEMAND_ATTRIBUTE2: this._oViewModelData.DEMAND_ATTRIBUTE2,\n\t\t\t\t\t        \tMARKETING_ATTRIBUTE1: this._oViewModelData.MARKETING_ATTRIBUTE1,\n\t\t\t\t\t        \tMARKETING_ATTRIBUTE2: this._oViewModelData.MARKETING_ATTRIBUTE2,\n\t\t\t\t\t        \tSUPPLY_ATTRIBUTE1: this._oViewModelData.SUPPLY_ATTRIBUTE1,\n\t\t\t\t\t        \tSUPPLY_ATTRIBUTE2: this._oViewModelData.SUPPLY_ATTRIBUTE2,\n\t\t\t\t\t        \tFINANCE_SYSTEM_FLAG_CODE_ID: this._oViewModelData.FINANCE_SYSTEM_FLAG_CODE_ID,\n\t\t\t\t\t        \tGMID_COUNTRY_STATUS_CODE_ID:this._oViewModelData.GMID_COUNTRY_STATUS_CODE_ID,\n\t\t\t\t\t        \tCREATED_BY:this._oViewModelData.CREATED_BY,\n\t\t\t\t\t        \tCREATED_ON:this._oViewModelData.CREATED_ON,\n\t\t\t\t\t        \tLAST_UPDATED_BY: loggedInUserID,\n\t\t\t\t\t        \tLAST_UPDATED_ON: oDate,\n\t\t\t\t\t        \tCOMMENTS:this._oViewModelData.COMMENTS\n\t\t\t    \t};\n\t\t\t    \n\t\t\t\t\tthis._oDataModel.update(\"/GMID_SHIP_TO_COUNTRY(\"+this._oEditAttributesID+\")\", updGMIDCountry,\n\t\t\t        {\n\t\t\t        \t// show success alert to the user\n\t\t\t\t\t    success: function(){\n\t\t\t\t\t\t\tMessageBox.alert(\"Attributes for GMID \" + updGMIDCountry.GMID + \" and country \" + country + \" updated successfully.\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticon : MessageBox.Icon.SUCCESS,\n\t\t\t\t\t\t\t\t\ttitle : \"Success\",\n\t\t\t\t\t\t\t\t\tonClose: function() {\n            \t\t\t\t\t\t\tcurr.getOwnerComponent().getRouter().navTo(\"maintainAttributes\");\n            \t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// show error alert to the user\n\t\t\t\t\t\terror: function(oError){\n\t\t\t\t\t\t\tMessageBox.alert(\"Error updating attributes for GMID \" + updGMIDCountry.GMID + \" and country \" + country + \".\",\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticon : MessageBox.Icon.ERROR,\n\t\t\t\t\t\t\t\t\ttitle : \"Error\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t        });\n\t\t\t\t}\n\t\t\t},\n\t\t\t//cancel click on edit attributes page\n\t\t\tonCancel: function(){\n\t\t\t\tvar curr = this;\n\t\t\t\t// check if user wants to update the attributes for GMID and country\n\t\t\t\tMessageBox.confirm(\"Are you sure you want to cancel your changes and navigate back to the previous page?\", {\n            \t\ticon: sap.m.MessageBox.Icon.WARNING,\n            \t\tactions: [sap.m.MessageBox.Action.YES, sap.m.MessageBox.Action.NO],\n            \t\tonClose: function(oAction) {\n            \t\t\tif(oAction === \"YES\"){\n            \t\t\t\tcurr.getOwnerComponent().getRouter().navTo(\"maintainAttributes\");\n            \t\t\t}\n            \t\t}\n        \t\t});\n\t\t\t},\n\t\t\t//navigate back from edit page\n\t\t\tonNavBack: function () {\n\t\t\t\tvar oHistory = History.getInstance();\n\t\t\t\tvar sPreviousHash = oHistory.getPreviousHash();\n\t\n\t\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t\twindow.history.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\n\t\t\t\t\toRouter.navTo(\"maintainAttributes\", true);\n\t\t\t\t}\n\t\t\t}\n  \t});\n});",
		"bam/controller/Home.controller.js": "sap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"bam/services/DataContext\",\n\t\t\"sap/ui/model/resource/ResourceModel\"\n\t], function (Controller,DataContext,ResourceModel) {\n\t\t\"use strict\";\n\t\t\n\tvar firstTimePageLoad = true;\n\n\treturn Controller.extend(\"bam.controller.Home\", {\n\t\tonInit : function()\n\t\t{\n\t\t\tif(DataContext.isBAMUser() === false)\n\t\t\t{\n\t\t\t\tthis.getOwnerComponent().getRouter().navTo(\"accessDenied\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// setting model for the page\n\t\t\t\tvar oModel = new sap.ui.model.json.JSONModel();\n\t\t    \tthis.getView().setModel(oModel);\n\t\t\t\t\n\t\t\t\t// hide the GMID Submission tile by default, if the user has no roles then we hide the tile\n\t\t\t\toModel.setProperty(\"/showGMIDSubmission\",false);    \n\t\t\t\t\n\t\t\t\tvar oi18nModel = new ResourceModel({\n\t                bundleName: \"bam.i18n.i18n\"\n\t            });\n\t\t\t\t \n\t        \t // get the Module settings for i18n model\n\t        \t var gmidSubmission = oi18nModel.getProperty(\"Module.gmidSubmission\");\n\t        \t var actionAdd = oi18nModel.getProperty(\"Module.actionAdd\");\n\t\t\t\t\n\t\t\t\t// getting permissions for the current logged in user\n\t\t\t\tvar permissions = DataContext.getUserPermissions();\n\t\t\t\t// check to see if the permission list includes \"ADD\" action for the GMID Submission Module\n\t\t\t\t// ATTRIBUTE in this case means MODULE\n\t\t\t\tfor(var i = 0; i < permissions.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif(permissions[i].ATTRIBUTE === gmidSubmission && permissions[i].ACTION === actionAdd)\n\t\t\t\t\t{\n\t\t\t\t\t\toModel.setProperty(\"/showGMIDSubmission\",true);\n\t\t\t\t\t\t// break since the user may have more than one role, as long as one of the user roles has permission we can show the tile\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Navigate to GMID Submission page\n\t\tonGoToGMIDSubmission : function(){\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"gmidSubmission\");\n\t\t},\n\t\t// Navigate to Maintain Attributes page\n\t\tonGoToMaintainAttributes: function(){\n\t\t\tthis.getOwnerComponent().getRouter().navTo(\"maintainAttributes\");\n\t\t}\n  \t});\n});",
		"bam/model/models.js": "sap.ui.define([\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/Device\"\n], function(JSONModel, Device) {\n\t\"use strict\";\n\n\treturn {\n\n\t\tcreateDeviceModel: function() {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n});",
		"bam/view/NotFound.view.xml": "<mvc:View\r\n   controllerName=\"bam.controller.NotFound\"\r\n   xmlns=\"sap.m\"\r\n   xmlns:mvc=\"sap.ui.core.mvc\">\r\n   <MessagePage\r\n      title=\"{i18n>NotFound}\"\r\n      text=\"{i18n>NotFound.text}\"\r\n      description=\"{i18n>NotFound.description}\"/>\r\n</mvc:View>",
		"bam/script/polyfill.js": "// Polyfill Array.prototype.find\n// Code snippet from Mozilla Developer Network\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n     // 1. Let O be ? ToObject(this value).\n      if (this === null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n      var o = Object(this);\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n      // 5. Let k be 0.\n      var k = 0;\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n      // 7. Return undefined.\n      return undefined;\n    }\n  });\n}\n// Polyfill Array.prototype.includes\n// Code snippet from Mozilla Developer Network\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, 'includes', {\n    value: function(searchElement, fromIndex) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n      var o = Object(this);\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n      // 3. If len is 0, return false.\n      if (len === 0) {\n        return false;\n      }\n      // 4. Let n be ? ToInteger(fromIndex).\n      //    (If fromIndex is undefined, this step produces the value 0.)\n      var n = fromIndex | 0;\n      // 5. If n ≥ 0, then\n      //  a. Let k be n.\n      // 6. Else n < 0,\n      //  a. Let k be len + n.\n      //  b. If k < 0, let k be 0.\n      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n      function sameValueZero(x, y) {\n        return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\n      }\n      // 7. Repeat, while k < len\n      while (k < len) {\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\n        // c. Increase k by 1. \n        if (sameValueZero(o[k], searchElement)) {\n          return true;\n        }\n        k++;\n      }\n      // 8. Return false\n      return false;\n    }\n  });\n}",
		"bam/view/AccessDenied.view.xml": "<mvc:View\r\n   controllerName=\"bam.controller.AccessDenied\"\r\n   xmlns=\"sap.m\"\r\n   xmlns:mvc=\"sap.ui.core.mvc\">\r\n\t<App id=\"accessDenied\">\r\n\t\t<MessagePage\r\n\t\t  title=\"{i18n>AccessDenied}\"\r\n\t\t  text=\"{i18n>AccessDenied.text}\"\r\n\t\t  description=\"{i18n>AccessDenied.description}\"/>\r\n     </App>\r\n</mvc:View>",
		"bam/view/Home.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:html=\"http://www.w3.org/1999/xhtml\" controllerName=\"bam.controller.Home\">\n\t<App id=\"home\">\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\">\n\t\t\t\t<content>\n\t\t\t\t\t<TileContainer allowAdd=\"true\" id=\"tlCntHome\" height=\"400px\" width=\"55%\">\n\t\t\t\t        <tiles>\n\t\t\t\t        \t<StandardTile visible=\"{/showGMIDSubmission}\" title=\"{i18n>gmidSubmission}\" info=\"{i18n>gmidSubmissionHelptext}\" icon=\"sap-icon://add-product\" activeIcon=\"sap-icon://add-product\" infoState=\"Success\" id=\"tlGMIDSubmission\" class=\"sapUiLargeMarginEnd\" press=\"onGoToGMIDSubmission\"/>\n\t\t\t\t        </tiles>\n\t\t\t\t        <tiles>\n\t\t\t\t        \t<StandardTile title=\"{i18n>maintainAttributes}\" info=\"{i18n>maintainAttributesHelptext}\" icon=\"sap-icon://user-edit\" activeIcon=\"sap-icon://user-edit\" infoState=\"Success\" id=\"tlMaintainAttributes\" class=\"sapUiLargeMarginEnd\" press=\"onGoToMaintainAttributes\"/>\n\t\t\t\t        </tiles>\n\t\t\t\t    </TileContainer>\n\t\t\t\t</content>\n\t\t\t</Page>\n\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"bam/view/GMIDPlant.view.xml": "<core:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns:smartFilterBar=\"sap.ui.comp.smartfilterbar\" xmlns:smartTable=\"sap.ui.comp.smarttable\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\" controllerName=\"bam.controller.GMIDPlant\" height=\"100%\">\n\t<App id=\"GMIDPlant\">\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\">\n\t\t\t\t<headerContent>\n\t\t\t\t\t<Button id=\"btnHome\" icon=\"sap-icon://home\" tooltip=\"{i18n>home}\" press=\"onHome\"/>\n\t\t\t\t</headerContent>\n\t\t\t\t<!-- use this to make the table occupy the available screen height -->\n\t\t\t\t<VBox fitContainer=\"true\">\n\t\t\t\t\t\n\t\t\t\t\t<smartTable:SmartTable id=\"smartTblBAMAttributes\" entitySet=\"V_GMID_CROP_PROTECTION\" tableType=\"Table\" useExportToExcel=\"true\" useVariantManagement=\"true\" showFullScreenButton=\"true\" \n\t\t\t\t\tuseTablePersonalisation=\"true\" header=\"GMID Country Attributes\" showRowCount=\"true\" enableAutoBinding=\"true\" app:useSmartField=\"true\" class=\"sapUiResponsiveContentPadding\" ignoreFromPersonalisation=\"ID\"\n\t\t\t\t\tinitiallyVisibleFields=\"GMID_COUNTRY_STATUS,GMID,GMID_SHORTTEXT,COUNTRY,STORED_CURRENCY,IBP_RELEVANCY,NETTING_DEFAULT,QUADRANT,CHANNEL,MARKET_DEFAULT,SUPPLY_SYSTEM_FLAG,DEMAND_ATTRIBUTE1,DEMAND_ATTRIBUTE2,MARKETING_ATTRIBUTE1,MARKETING_ATTRIBUTE2,SUPPLY_ATTRIBUTE1,SUPPLY_ATTRIBUTE2,TRADE_PRODUCT_CODE,TRADE_PRODUCT_DESC,PLAN_PRODUCT_DESC,PROFIT_CENTER_DESC,PERFORMANCE_CENTER_DESC,VALUE_CENTER_DESC,SPECIFIED_MATERIAL_DESC,MASTER_SALES_SPEC_DESC,BRAND_NAME,TREATMENT,PACKAGE_TYPE,BGT_DESC,LOCAL_UOM,MATERIAL_STATUS,TRADE_AREA_DESC,SUB_RCU_DESC,RCU_DESC,CONS_DEFAULT_FLAG,MARKETING_MANAGER,MARKETING_DIRECTOR,DEMAND_MANAGER,GLOBAL_BUSINESS_LEADER,\n\t\t\t\t\t,SUPPLY_CHAIN_PLANNING_SPECIALIST,MARKETING_SPECIALIST,GLOBAL_SUPPLY_CHAIN_MANAGER,REG_SUPPLY_CHAIN_MANAGER,IBP_STATUS,IBP_RESPONSE_DESC,REQUESTED_BY,REQUESTED_DATE,LAST_UPDATED_BY,LAST_UPDATED_DATE\">\n\t\t\t\t\t\t<!-- layout data used to make the table growing but the filter bar fixed -->\n\t\t\t\t\t\t<smartTable:layoutData>\n\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\" baseSize=\"0%\"/>\n\t\t\t\t\t\t</smartTable:layoutData>\n\t\t\t\t\t<smartTable:customToolbar> \n\t\t                <OverflowToolbar design=\"Transparent\"> \n\t\t                        <ToolbarSpacer/> \n\t\t                        <Button id=\"btnViewPlantAssignment\" text=\"{i18n>viewPlants}\" press=\"onViewPlantAssignment\" class=\"sapUiMediumMarginBegin\" icon=\"sap-icon://detail-view\" activeIcon=\"sap-icon://detail-view\"/> \n\t\t               </OverflowToolbar> \n\t\t\t       </smartTable:customToolbar>\n\t\t\t\t\t</smartTable:SmartTable>\n\t\t\t\t<items/>\n\t\t\t\t</VBox>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</core:View>",
		"bam/view/EditAttributesMultiple.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\" xmlns:html=\"http://www.w3.org/1999/xhtml\" controllerName=\"bam.controller.EditAttributesMultiple\">\n\t<App id=\"editAttributesMultiple\">\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\" showNavButton=\"true\" navButtonPress=\"onNavBack\">\n\t\t\t\t<content>\n\t\t\t\t<Text id=\"lblGMID\" text=\"{i18n>gmidcountry}\" class=\"sapUiSmallMarginBegin sapUiSmallMarginTopBottom pageHeaderFont boldFont\"/>\t\n\t\t\t\t<Text id=\"lblGMIDCountryCount\" text=\"{/GMID_COUNTRY_COUNT}\" class=\"sapUiSmallMarginBegin sapUiSmallMarginTopBottom pageHeaderFont boldFont\"/>\t\n\t\t\t\t<f:Form editable=\"true\" id=\"formEditAttributeMultiple\">\n\t\t\t\t    <f:formContainers>\n\t\t\t\t        <f:FormContainer title=\"{i18n>editAttributes}\" id=\"fConEditAttributes\">\n\t\t\t\t            <f:formElements>\n\t\t\t\t                <f:FormElement label=\"{i18n>storedCurrency}\" id=\"felmCurrency\" visible=\"{path: '/SHOW_CURRENCY', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlStoredCurrency\" name=\"ddlStoredCurrency\" change=\"onChange\" items=\"{path: '/STORED_CURRENCY_LIST'}\" selectedKey=\"{/CURRENCY_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>ibpRelevancy}\" id=\"felmIBPRelevancy\" visible=\"{path: '/SHOW_IBP_RELEVANCY', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                       <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlIBPRelevancyFlag\" name=\"ddlIBPRelevancyFlag\" change=\"onChange\" items=\"{path: '/IBP_RELEVANCY_LIST'}\" selectedKey=\"{/IBP_RELEVANCY_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>nettingDefault}\" id=\"felmNettingDefault\" visible=\"{path: '/SHOW_NETTING_DEFAULT', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlNettingDefaultFlag\" name=\"ddlNettingDefaultFlag\" change=\"onChange\" items=\"{path: '/NETTING_DEFAULT_LIST'}\" selectedKey=\"{/NETTING_DEFAULT_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>quadrant}\" id=\"felmQuadrant\" visible=\"{path: '/SHOW_QUADRANT', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlQuadrant\" name=\"ddlQuadrant\" change=\"onChange\" items=\"{path: '/QUADRANT_LIST'}\" selectedKey=\"{/QUADRANT_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>channel}\" id=\"felmChannel\" visible=\"{path: '/SHOW_CHANNEL', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlChannel\" name=\"ddlChannel\" change=\"onChange\" items=\"{path: '/CHANNEL_LIST'}\" selectedKey=\"{/CHANNEL_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>marketDefault}\" id=\"felmMarketDefaultFlag\" visible=\"{path: '/SHOW_MARKET_DEFAULT', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlMarketDefaultFlag\" name=\"ddlMarketDefaultFlag\" change=\"onChange\" items=\"{path: '/MARKET_DEFAULT_LIST'}\" selectedKey=\"{/MARKET_DEFAULT_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>supplySystemFlag}\" id=\"felmSupportSystemFlag\" visible=\"{path: '/SHOW_SUPPLY_SYSTEM_FLAG', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlSupportSystemFlag\" name=\"ddlSupportSystemFlag\" change=\"onChange\" items=\"{path: '/SUPPORT_SYSTEM_FLAG_LIST'}\" selectedKey=\"{/SUPPLY_SYSTEM_FLAG_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>demandAtt1}\" id=\"felmDemandAtt1\" visible=\"{path: '/SHOW_DEMAND_ATTRIBUTE1', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Input id=\"txtDemandAtt1\" name=\"txtDemandAtt1\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"97%\" value=\"{/DEMAND_ATTRIBUTE1}\"/>\n\t\t\t\t                        <CheckBox id=\"chkDemandAtt1\" name=\"chkDemandAtt1\" text=\"{i18n>updateNull}\" select=\"onChecked\" selected=\"{/NULLIFY_DEMAND_ATTRIBUTE1}\" tooltip=\"{i18n>updateNullTooltip}\" />\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>demandAtt2}\" id=\"felmDemandAtt2\" visible=\"{path: '/SHOW_DEMAND_ATTRIBUTE2', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtDemandAtt2\" name=\"txtDemandAtt2\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"97%\" value=\"{/DEMAND_ATTRIBUTE2}\"/>\n\t\t\t\t\t                        <CheckBox id=\"chkDemandAtt2\" name=\"chkDemandAtt2\" text=\"{i18n>updateNull}\" select=\"onChecked\" selected=\"{/NULLIFY_DEMAND_ATTRIBUTE2}\" tooltip=\"{i18n>updateNullTooltip}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>mktAtt1}\" id=\"felmMktAtt1\" visible=\"{path: '/SHOW_MARKETING_ATTRIBUTE1', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtMktAtt1\" name=\"txtMktAtt1\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"97%\" value=\"{/MARKETING_ATTRIBUTE1}\"/>\n\t\t\t\t\t                        <CheckBox id=\"chkMktAtt1\" name=\"chkMktAtt1\" text=\"{i18n>updateNull}\" select=\"onChecked\" selected=\"{/NULLIFY_MARKETING_ATTRIBUTE1}\" tooltip=\"{i18n>updateNullTooltip}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>mktAtt2}\" id=\"felmMktAtt2\" visible=\"{path: '/SHOW_MARKETING_ATTRIBUTE2', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtMktAtt2\" name=\"txtMktAtt2\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"97%\" value=\"{/MARKETING_ATTRIBUTE2}\"/>\n\t\t\t\t\t                         <CheckBox id=\"chkMktAtt2\" name=\"chkMktAtt2\" text=\"{i18n>updateNull}\" select=\"onChecked\" selected=\"{/NULLIFY_MARKETING_ATTRIBUTE2}\" tooltip=\"{i18n>updateNullTooltip}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>supplyAtt1}\" id=\"felmSupplyAtt1\" visible=\"{path: '/SHOW_SUPPLY_ATTRIBUTE1', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtSupplyAtt1\" name=\"txtSupplyAtt1\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"97%\" value=\"{/SUPPLY_ATTRIBUTE1}\"/>\n\t\t\t\t\t                        <CheckBox id=\"chkSupplyAtt1\" name=\"chkSupplyAtt1\" text=\"{i18n>updateNull}\" select=\"onChecked\" selected=\"{/NULLIFY_SUPPLY_ATTRIBUTE1}\" tooltip=\"{i18n>updateNullTooltip}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>supplyAtt2}\" id=\"felmSupplyAtt2\" visible=\"{path: '/SHOW_SUPPLY_ATTRIBUTE2', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtSupplyAtt2\" name=\"txtSupplyAtt2\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"97%\" value=\"{/SUPPLY_ATTRIBUTE2}\"/>\n\t\t\t\t\t                        <CheckBox id=\"chkSupplyAtt2\" name=\"chkSupplyAtt2\" text=\"{i18n>updateNull}\" select=\"onChecked\" selected=\"{/NULLIFY_SUPPLY_ATTRIBUTE2}\" tooltip=\"{i18n>updateNullTooltip}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t            </f:formElements>\n\t\t\t\t        </f:FormContainer>\n\t\t\t\t    </f:formContainers>\n\t\t\t\t    <f:layout>\n\t\t\t\t        <f:ResponsiveGridLayout id=\"fResGridEditAttributes\"/>\n\t\t\t\t    </f:layout>\n\t\t\t\t</f:Form>\n\t\t\t\t<Toolbar width=\"100%\" id=\"tbrSubmit\">\n\t\t\t\t     <content>\n\t\t\t\t        <ToolbarSpacer id=\"tbrSpSubmit\"/>\n\t\t\t\t\t\t<Button text=\"{i18n>submit}\" width=\"100px\" id=\"btnSubmit\" press=\"onSubmit\"/>\n\t\t\t\t        <Button text=\"{i18n>cancel}\" width=\"100px\" id=\"btnCancel\" press=\"onCancel\" class=\"sapUiLargeMarginEnd\"/>\n\t\t\t\t     </content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"bam/view/SubmitConfirmDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\n\t<Dialog id=\"submitConfirmDialog\" title=\"{i18n>submitConfirmDialogTitle}\">\n\t\t<HBox justifyContent=\"Center\" alignContent=\"SpaceAround\">\n\t\t\t\t<Label text=\"{i18n>submitConfirmDialogText1}\" id=\"submitConfirmDialogText1\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t<Label text=\"{MessageVM>/NumOfGMIDSubmitted}\" id=\"NumOfGMIDSubmitted\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t<Label text=\"{i18n>submitConfirmDialogText2}\" id=\"submitConfirmDialogText2\"/>\n\t\t</HBox>\n\t\t<HBox justifyContent=\"Center\">\n\t\t\t<Button text=\"{i18n>btnOK}\" press=\"onCloseDialog\"/>\n\t\t</HBox>\n\t</Dialog>\n</core:FragmentDefinition>",
		"bam/view/GMIDSubmission.view.xml": "<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\" xmlns:u=\"sap.ui.unified\" xmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\" controllerName=\"bam.controller.GMIDSubmission\" displayBlock=\"true\">\n\t<App id=\"gmidSubmission\">\n\t\t<pages><Page title=\"{i18n>title}\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<headerContent>\n\t\t\t\t\t<Button id=\"btnHome\" icon=\"sap-icon://home\" tooltip=\"{i18n>home}\" press=\"onHome\"/>\n\t\t\t\t</headerContent>\n\t\t\t\t<content>\n\t\t\t\t\t<HBox>\n\t\t\t\t\t\t<Label class=\"boldFont\" text=\"* To upload GMID/Country combination from a file, download the template and enter the data in Excel, save as a CSV file then browse and upload.\"></Label>\n\t\t\t\t\t</HBox>\n\t\t\t\t\t<HBox alignItems=\"Center\">\n\t\t\t\t\t\t<Text id=\"lblSubmitGMIDFor\" text=\"{i18n>submitGMIDFor}\"/>\n\t\t\t\t\t\t<RadioButtonGroup id=\"rbgGMIDType\" width=\"100%\" columns=\"2\" select=\"fnGridShow\" selectedIndex=\"-1\">\n\t\t\t\t\t    \t<buttons>\n\t\t\t\t\t        \t<RadioButton id=\"rBtnCropProtection\" text=\"{i18n>cropProtection}\" groupName=\"rbgGMIDType\"/>\n\t\t\t\t\t        \t<RadioButton id=\"rBtnSeeds\" text=\"{i18n>seeds}\" groupName=\"rbgGMIDType\" class=\"sapUiLargeMarginEnd\"/>\n\t\t\t\t\t        </buttons>\n\t\t\t\t\t\t</RadioButtonGroup>\n\t\t\t\t\t\t<Label class=\"sapUiLargeMarginEnd\" text=\"\"></Label>\n\t\t\t\t\t\t<Label class=\"sapUiLargeMarginEnd\" text=\"\"></Label>\n\t\t\t\t\t\t<Label class=\"sapUiLargeMarginEnd\" text=\"\"></Label>\n\t\t\t\t\t\t<HBox visible=\"true\" id=\"excelHBox\">\n\t\t\t\t\t\t\t<u:FileUploader id=\"excelFileUploader\" width=\"300px\" sameFilenameAllowed=\"false\" buttonText=\"\" fileType=\"CSV\" placeholder=\"Choose a CSV file\" style=\"Emphasized\" class=\"sapUiSmallMarginEnd\">\n\t\t\t\t\t\t\t</u:FileUploader>\n\t\t\t\t\t\t\t<Button text=\"{i18n>importFromExcel}\" id=\"btnImportFromExcel\" press=\"onImportFromExcel\" class=\"sapUiSmallMarginEnd\"/>\n\n\t\t\t\t\t\t\t<Button text=\"{i18n>downloadTemplate}\" id=\"btnDownloadTemplate\" press=\"onDownloadTemplate\"/>\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t</HBox>\n\t\t\t\t\t<UploadCollection id=\"ucDownloadTemplate\" visible=\"false\">\n\t\t\t\t\t     <items>\n\t\t\t\t\t           <UploadCollectionItem fileName=\"GMIDSubmissionTemplate.xlsx\" id=\"uciDownloadTemplate\" enableEdit=\"false\" visibleDelete=\"false\" enableDelete=\"false\" visibleEdit=\"false\" selected=\"true\" url=\"templates/GMIDSubmissionTemplate.xlsx\" mimeType=\"application/msexcel\"/>\n\t\t\t\t\t     </items>\n\t\t\t\t\t </UploadCollection>\n\t\t\t\t\t <ScrollContainer horizontal=\"true\">\n\t\t\t\t\t\t<Table noDataText=\"No records to display\" id=\"tblGMIDRequest\" items=\"{/GMIDShipToCountryVM}\" visible=\"false\" width=\"auto\">\n\t\t\t\t\t\t\t <columns>\n\t\t\t\t\t\t\t\t <Column id=\"clmHdrAction\" width=\"80px\">\n\t\t\t\t\t\t\t            <header>\n\t\t\t\t\t\t\t                <Label text=\"{i18n>action}\" id=\"lblAction\"/>\n\t\t\t\t\t\t\t            </header>\n\t\t\t\t\t\t        </Column>\n\t\t\t\t\t        \t<Column id=\"clmHdrGMID\" width=\"100px\">\n\t\t\t\t\t\t            <header>\n\t\t\t\t\t\t                <Label text=\"{i18n>gmid}\" id=\"lblGMID\"/>\n\t\t\t\t\t\t            </header>\n\t\t\t\t\t        \t</Column>\n\t\t\t\t\t        \t<Column id=\"clmHdrCountry\" width=\"125px\">\n\t\t\t\t\t\t            <header>\n\t\t\t\t\t\t                <Label text=\"{i18n>country}\" id=\"lblCountry\"/>\n\t\t\t\t\t\t            </header>\n\t\t\t\t\t        \t</Column>\n\t\t\t\t\t        <Column id=\"clmHdrStoredCurrency\" width=\"120px\">\n\t\t\t\t\t\t        <header>\n\t\t\t\t\t\t              <Label text=\"{i18n>storedCurrency}\" id=\"lblStoredCurrency\"/>\n\t\t\t\t\t\t          </header>\n\t\t\t\t\t        </Column>\n\t\t\t\t\t        <Column id=\"clmHdrIBPRelevancy\" width=\"125px\">\n\t\t\t\t\t\t        <header>\n\t\t\t\t\t\t            <Label text=\"{i18n>ibpRelevancy}\" id=\"lblIBPRelevancy\"/>\n\t\t\t\t\t\t          </header>\n\t\t\t\t\t        </Column>\n\t\t\t\t\t        <Column id=\"clmHdrNettingDefault\" width=\"120px\">\n\t\t\t\t\t\t        <header>\n\t\t\t\t\t\t           <Label text=\"{i18n>nettingDefault}\" id=\"lblNettingDefault\"/>\n\t\t\t\t\t\t         </header>\n\t\t\t\t\t        </Column>\n\t\t\t\t\t        <Column id=\"clmHdrQuadrant\" width=\"120px\">\n\t\t\t\t\t\t      <header>\n\t\t\t\t\t\t          <Label text=\"{i18n>quadrant}\" id=\"lblQuadrant\"/>\n\t\t\t\t\t\t           </header>\n\t\t\t\t\t        \t</Column>\n\t\t\t\t\t        \t<Column id=\"clmHdrChannel\" width=\"125px\">\n\t\t\t\t\t\t       <header>\n\t\t\t\t\t\t         <Label text=\"{i18n>channel}\" id=\"lblChannel\"/>\n\t\t\t\t\t\t        </header>\n\t\t\t\t\t        </Column>\n\t\t\t\t\t        <Column id=\"clmHdrMarketDefault\" width=\"120px\">\n\t\t\t\t\t\t        <header>\n\t\t\t\t\t\t          <Label text=\"{i18n>marketDefault}\" id=\"lblMarketDefault\"/>\n\t\t\t\t\t\t         </header>\n\t\t\t\t\t        </Column>\n\t\t\t\t\t    \t</columns>\n\t\t\t\t\t    <items>\n\t\t\t\t\t        <ColumnListItem id=\"cliGMIDShipTocountry\">\n\t\t\t\t\t            <cells>\n\t\t\t\t\t            \t <HBox alignContent=\"Start\" direction=\"Inherit\" alignItems=\"Baseline\">\n\t\t\t\t\t            \t \t\t<Button id=\"btnRemoveRow\" icon=\"sap-icon://delete\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" press=\"onRemoveRow\" class=\"sapUiTinyMarginEnd\"/>\n\t\t\t\t\t            \t \t\t<core:Icon id=\"btnAddRow\" src=\"sap-icon://add\" visible=\"{path: 'createNew', formatter: '.enableControl'}\" press=\"onAddRow\"/>\n\t\t\t\t\t            \t\t\t<Button visible=\"{path: 'isError'}\" icon=\"sap-icon://error\" press=\"showErrorMessage\" app:text=\"{errorSummary}\" app:GMID =\"{GMID}\" app:CountryCode =\"{COUNTRY_CODE_ID}\" tooltip=\"{i18n>errorIcon}\" type=\"Reject\"/>\t\t\t\t            \t\n\t\t\t\t\t            \t</HBox>\n\t\t\t\t                \t<Input id=\"inputGMID\" value=\"{GMID}\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" width=\"100%\" maxLength=\"8\" liveChange=\"numValidationCheck\" valueState=\"{GMIDErrorState}\"/>\n\t                            \t<Select xmlns:sap.ui.core=\"sap.ui.core\" id=\"ddlCountry\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" items=\"{path: '/GMIDShipToCountryVM/Country', templateShareable : true}\" change=\"onChange\" valueState=\"{countryErrorState}\" selectedKey=\"{COUNTRY_CODE_ID}\">\n\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t</Select>\n\t                            \t<Select xmlns:sap.ui.core=\"sap.ui.core\" id=\"ddlStoredCurrency\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" items=\"{path: '/GMIDShipToCountryVM/StoredCurrency', templateShareable : true}\" change=\"onChange\" valueState=\"{currencyErrorState}\" selectedKey=\"{CURRENCY_CODE_ID}\">\n\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t</Select>\n\t                            \t<Select xmlns:sap.ui.core=\"sap.ui.core\" id=\"ddlIBPRelevancyFlag\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" items=\"{path: '/GMIDShipToCountryVM/IBPRelevancyFlag', templateShareable : true}\" change=\"onChange\" valueState=\"{IBPRelevancyErrorState}\" selectedKey=\"{IBP_RELEVANCY_CODE_ID}\">\n\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t</Select>\n\t                            \t<Select xmlns:sap.ui.core=\"sap.ui.core\" id=\"ddlNettingDefaultFlag\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" items=\"{path: '/GMIDShipToCountryVM/NettingDefaultFlag', templateShareable : true}\" change=\"onChange\" valueState=\"{nettingDefaultErrorState}\" selectedKey=\"{NETTING_DEFAULT_CODE_ID}\">\n\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t</Select>\n\t                            \t<Select xmlns:sap.ui.core=\"sap.ui.core\" id=\"ddlQuadrant\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" items=\"{path: '/GMIDShipToCountryVM/Quadrant', templateShareable : true}\" change=\"onChange\" valueState=\"{quadrantErrorState}\" selectedKey=\"{QUADRANT_CODE_ID}\">\n\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t</Select>\n\t                            \t<Select xmlns:sap.ui.core=\"sap.ui.core\" id=\"ddlChannel\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" items=\"{path: '/GMIDShipToCountryVM/Channel', templateShareable : true}\" change=\"onChange\" valueState=\"{channelErrorState}\" selectedKey=\"{CHANNEL_CODE_ID}\">\n\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t</Select>\n\t                            \t<Select xmlns:sap.ui.core=\"sap.ui.core\" id=\"ddlMarketDefaultFlag\" visible=\"{path: 'createNew', formatter: '.disableControl'}\" items=\"{path: '/GMIDShipToCountryVM/MarketDefaultFlag', templateShareable : true}\" change=\"onChange\" valueState=\"{marketDefaultErrorState}\" selectedKey=\"{MARKET_DEFAULT_CODE_ID}\">\n\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t           </cells>\n\t\t\t\t\t        </ColumnListItem>\n\t\t\t\t\t </items>\n\t\t\t\t\t </Table>\n\t\t\t\t </ScrollContainer>\n\t\t\t\t <Toolbar width=\"100%\" id=\"tbrSubmit\">\n\t\t\t\t     <content>\n\t\t\t\t         <ToolbarSpacer id=\"tbrSpSubmit\"/>\n\t\t\t\t\t\t\t <Button text=\"{i18n>submit}\" width=\"100px\" id=\"btnSubmit\" press=\"onSubmit\" visible=\"false\"/>\n\t\t\t\t             <Button text=\"{i18n>continueToPlant}\" width=\"200px\" id=\"btnContinueToPlantSelection\" press=\"onSubmit\" visible=\"false\"/>\n\t\t\t\t     </content>\n\t\t\t\t </Toolbar>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"bam/view/EditAttributesSingle.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\" xmlns:html=\"http://www.w3.org/1999/xhtml\" controllerName=\"bam.controller.EditAttributesSingle\">\n\t<App id=\"editAttributesSingle\">\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\" \n\t\t\t\tshowNavButton=\"true\"\n\t\t\t\tnavButtonPress=\"onNavBack\">\n\t\t\t\t<content>\n\t\t\t\t<f:Form editable=\"true\" id=\"formEditAttributeSingle\">\n\t\t\t\t    <f:formContainers>\n\t\t\t\t        <f:FormContainer title=\"{i18n>editAttributes}\" id=\"fConEditAttributes\">\n\t\t\t\t            <f:formElements>\n\t\t\t\t                <f:FormElement label=\"{i18n>gmid}\" id=\"felmGMID\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Text id=\"lblGMID\" text=\"{/GMID}\" class=\"sapUiTinyMarginBegin\"/>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>country}\" id=\"felmCountry\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Text id=\"lblCountry\" text=\"{/COUNTRY}\" class=\"sapUiTinyMarginBegin\"/>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>storedCurrency}{i18n>mandatory}\" id=\"felmCurrency\" visible=\"{path: '/SHOW_CURRENCY', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlStoredCurrency\" name=\"ddlStoredCurrency\" change=\"onChange\" items=\"{path: '/STORED_CURRENCY_LIST'}\" selectedKey=\"{/CURRENCY_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>ibpRelevancy}{i18n>mandatory}\" id=\"felmIBPRelevancy\" visible=\"{path: '/SHOW_IBP_RELEVANCY', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                       <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlIBPRelevancyFlag\" name=\"ddlIBPRelevancyFlag\" change=\"onChange\" items=\"{path: '/IBP_RELEVANCY_LIST'}\" selectedKey=\"{/IBP_RELEVANCY_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>nettingDefault}{i18n>mandatory}\" id=\"felmNettingDefault\" visible=\"{path: '/SHOW_NETTING_DEFAULT', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlNettingDefaultFlag\" name=\"ddlNettingDefaultFlag\" change=\"onChange\" items=\"{path: '/NETTING_DEFAULT_LIST'}\" selectedKey=\"{/NETTING_DEFAULT_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>quadrant}{i18n>mandatory}\" id=\"felmQuadrant\" visible=\"{path: '/SHOW_QUADRANT', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlQuadrant\" name=\"ddlQuadrant\" change=\"onChange\" items=\"{path: '/QUADRANT_LIST'}\" selectedKey=\"{/QUADRANT_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>channel}{i18n>mandatory}\" id=\"felmChannel\" visible=\"{path: '/SHOW_CHANNEL', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlChannel\" name=\"ddlChannel\" change=\"onChange\" items=\"{path: '/CHANNEL_LIST'}\" selectedKey=\"{/CHANNEL_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>marketDefault}{i18n>mandatory}\" id=\"felmMarketDefaultFlag\" visible=\"{path: '/SHOW_MARKET_DEFAULT', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlMarketDefaultFlag\" name=\"ddlMarketDefaultFlag\" change=\"onChange\" items=\"{path: '/MARKET_DEFAULT_LIST'}\" selectedKey=\"{/MARKET_DEFAULT_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>supplySystemFlag}{i18n>mandatory}\" id=\"felmSupportSystemFlag\" visible=\"{path: '/SHOW_SUPPLY_SYSTEM_FLAG', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                        <Select xmlns:sap.ui.core=\"sap.ui.core\" width=\"40%\" id=\"ddlSupportSystemFlag\" name=\"ddlSupportSystemFlag\" change=\"onChange\" items=\"{path: '/SUPPORT_SYSTEM_FLAG_LIST'}\" selectedKey=\"{/SUPPLY_SYSTEM_FLAG_CODE_ID}\">\n\t\t                            \t\t<sap.ui.core:ListItem key=\"{ID}\" text=\"{LABEL}\"/>\n\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t                    </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t                <f:FormElement label=\"{i18n>demandAtt1}\" id=\"felmDemandAtt1\" visible=\"{path: '/SHOW_DEMAND_ATTRIBUTE1', formatter: '.showControl'}\">\n\t\t\t\t                    <f:fields>\n\t\t\t\t                    \t<Input id=\"txtDemandAtt1\" name=\"txtDemandAtt1\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"48.5%\" value=\"{/DEMAND_ATTRIBUTE1}\"/>\n\t\t\t\t\t                 </f:fields>\n\t\t\t\t                </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>demandAtt2}\" id=\"felmDemandAtt2\" visible=\"{path: '/SHOW_DEMAND_ATTRIBUTE2', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtDemandAtt2\" name=\"txtDemandAtt2\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"48.5%\" value=\"{/DEMAND_ATTRIBUTE2}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>mktAtt1}\" id=\"felmMktAtt1\" visible=\"{path: '/SHOW_MARKETING_ATTRIBUTE1', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtMktAtt1\" name=\"txtMktAtt1\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"48.5%\" value=\"{/MARKETING_ATTRIBUTE1}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>mktAtt2}\" id=\"felmMktAtt2\" visible=\"{path: '/SHOW_MARKETING_ATTRIBUTE2', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                       <Input id=\"txtMktAtt2\" name=\"txtMktAtt2\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"48.5%\" value=\"{/MARKETING_ATTRIBUTE2}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>supplyAtt1}\" id=\"felmSupplyAtt1\" visible=\"{path: '/SHOW_SUPPLY_ATTRIBUTE1', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtSupplyAtt1\" name=\"txtSupplyAtt1\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"48.5%\" value=\"{/SUPPLY_ATTRIBUTE1}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t\t            <f:FormElement label=\"{i18n>supplyAtt2}\" id=\"felmSupplyAtt2\" visible=\"{path: '/SHOW_SUPPLY_ATTRIBUTE2', formatter: '.showControl'}\">\n\t\t\t\t\t                    <f:fields>\n\t\t\t\t\t                        <Input id=\"txtSupplyAtt2\" name=\"txtSupplyAtt2\" maxLength = \"50\" liveChange=\"onChange\" valueLiveUpdate=\"true\" width=\"48.5%\" value=\"{/SUPPLY_ATTRIBUTE2}\"/>\n\t\t\t\t\t                    </f:fields>\n\t\t\t\t\t            </f:FormElement>\n\t\t\t\t            </f:formElements>\n\t\t\t\t        </f:FormContainer>\n\t\t\t\t    </f:formContainers>\n\t\t\t\t    <f:layout>\n\t\t\t\t        <f:ResponsiveGridLayout id=\"fResGridEditAttributes\"/>\n\t\t\t\t    </f:layout>\n\t\t\t\t</f:Form>\n\t\t\t\t<Toolbar width=\"100%\" id=\"tbrSubmit\">\n\t\t\t\t     <content>\n\t\t\t\t        <ToolbarSpacer id=\"tbrSpSubmit\"/>\n\t\t\t\t\t\t<Button text=\"{i18n>submit}\" width=\"100px\" id=\"btnSubmit\" press=\"onSubmit\"/>\n\t\t\t\t        <Button text=\"{i18n>cancel}\" width=\"100px\" id=\"btnCancel\" press=\"onCancel\" class=\"sapUiLargeMarginEnd\"/>\n\t\t\t\t     </content>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"bam/view/GMIDPlantAssignment.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:layout=\"sap.ui.layout\" xmlns:html=\"http://www.w3.org/1999/xhtml\" controllerName=\"bam.controller.GMIDPlantAssignment\">\n\t<App id=\"gmidPlantAssignment\">\n\t\t<pages>\n\t\t\t<Page title=\"{i18n>title}\" class=\"sapUiResponsiveContentPadding\" showNavButton=\"true\" navButtonPress=\"onNavBack\">\n\t\t\t\t<content>\n\t\t\t\t<ScrollContainer horizontal=\"true\"> \n\t\t\t\t\t<Table noDataText=\"No records to display\" id=\"tblGMIDPlantAssignment\" width=\"auto\" items=\"{/GMIDPlantAssignmentVM}\">\n\t\t\t\t\t\t<columns>\n\t\t\t\t\t        <Column id=\"clmHdrGMID\" width=\"100px\">\n\t\t\t\t\t\t\t    <header>\n\t\t\t\t\t\t\t        <Label text=\"{i18n>gmid}\" id=\"lblHdrGMID\"/>\n\t\t\t\t\t\t\t    </header>\n\t\t\t\t\t\t    </Column>\n\t\t\t\t\t\t    <Column id=\"clmHdrCountry\" width=\"250px\">\n\t\t\t\t\t\t\t    <header>\n\t\t\t\t\t\t\t        <Label text=\"{i18n>country}\" id=\"lblHdrCountry\"/>\n\t\t\t\t\t\t\t    </header>\n\t\t\t\t\t\t    </Column>\n\t\t\t\t\t        <Column id=\"clmHdrPlant\">\n\t\t\t\t\t            <header>\n\t\t\t\t\t                <Label text=\"{i18n>plant} - {i18n>plantstatus} ({i18n>plantstatusdesc})\" id=\"lblHdrPlant\"/>\n\t\t\t\t\t            </header>\n\t\t\t\t\t        </Column>\n\t\t\t\t\t        <!--<Column id=\"clmHdrPlantStatus\">-->\n\t\t\t\t\t        <!--    <header>-->\n\t\t\t\t\t        <!--        <Label text=\"{i18n>plantstatus}\" id=\"lblHdrPlantStatus\"/>-->\n\t\t\t\t\t        <!--    </header>-->\n\t\t\t\t\t        <!--</Column>-->\n\t\t\t\t\t        <!--<Column id=\"clmHdrPlantStatusDesc\">-->\n\t\t\t\t\t        <!--    <header>-->\n\t\t\t\t\t        <!--        <Label text=\"{i18n>plantstatusdesc}\" id=\"lblHdrPlantStatusDesc\"/>-->\n\t\t\t\t\t        <!--    </header>-->\n\t\t\t\t\t        <!--</Column>-->\n\t\t\t\t\t    </columns>\n\t\t\t\t\t    <items>\n\t\t\t\t\t        <ColumnListItem id=\"cliPlantSelection\">\n\t\t\t\t\t            <cells>\n\t\t\t\t\t            \t<Label id=\"lblGMID\" text=\"{GMID}\"/>\n\t\t\t\t\t            \t<Label id=\"lblCountry\" text=\"{COUNTRY}\"/>\n\t\t\t\t\t            \t<List items=\"{path: 'PLANTS', templateShareable : true}\" mode=\"MultiSelect\">\n\t\t\t\t\t            \t\t<items >\n\t\t\t\t\t\t\t\t\t\t\t<ObjectListItem title=\"{PLANT_CODE} - {PLANT_STATUS} ({PLANT_STATUS_DESC})\" type=\"Active\" selected=\"{IS_SELECTED}\" />\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t            </cells>\n\t\t\t\t\t        </ColumnListItem>\n\t\t\t\t\t    </items>\n\t\t\t\t\t</Table>\n\t\t\t\t</ScrollContainer>\n\t\t\t\t<Toolbar width=\"100%\" id=\"tbrSubmit\">\n\t\t\t\t     <content>\n\t\t\t\t         <ToolbarSpacer id=\"tbrSpSubmit\"/>\n\t\t\t\t\t\t\t <!--<Button text=\"{i18n>cancel}\" width=\"100px\" id=\"btnCancel\" press=\"onCancel\" class=\"sapUiLargeMarginEnd\"/>-->\n\t\t\t\t          </content>\n\t\t\t\t </Toolbar>\n\t\t\t\t</content>\n\t\t\t</Page>\n\t\t</pages>\n\t</App>\n</mvc:View>",
		"bam/view/BusyLoading.fragment.xml": "<core:FragmentDefinition\r\n\txmlns=\"sap.m\"\r\n\txmlns:core=\"sap.ui.core\">\r\n\t<BusyDialog\r\n\t\ttitle=\"Processing request\"\r\n\t\ttext=\"Please be patient. Your request is being processed.\"\r\n\t\t/>\r\n</core:FragmentDefinition>"
	}
});